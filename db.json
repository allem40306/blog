{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/landscape/.gitignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1548037855249},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1548037855273},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1548037855275},{"_id":"themes/landscape/_config.yml","hash":"adecf734677841ce871f94a56ef79d385fa9ff7b","modified":1548553227763},{"_id":"themes/landscape/README.md","hash":"e7cc82dc79596f36ba05a8139e7d6b2dfc4ae5f9","modified":1548037855283},{"_id":"themes/landscape/package.json","hash":"d07f326588fef82f1d23ae3101c9ddfff34c132f","modified":1548037855387},{"_id":"source/_posts/AtCoder Beginner Contest 054 心得.md","hash":"0bb1d88f8d40af6628db60475ce747b298d2f709","modified":1548037854761},{"_id":"source/_posts/AtCoder Beginner Contest 080 心得.md","hash":"49e3797c58277fe6067e5932a22168ebcca6070c","modified":1548037854765},{"_id":"source/_posts/AtCoder Beginner Contest 081 心得.md","hash":"9c2f2dd5306c8e4818ba7b17f6672cd7248ba33d","modified":1548037854767},{"_id":"source/_posts/AtCoder Beginner Contest 082 心得.md","hash":"a14752717a9e1a2ea2ff83b66eb262f63b87e555","modified":1548037854769},{"_id":"source/_posts/AtCoder Beginner Contest 083 心得.md","hash":"8f9f2d1a9ebaecf881902ce083bf8346ab92302d","modified":1548037854771},{"_id":"source/_posts/AtCoder Beginner Contest 107 心得.md","hash":"515f77662b7d37ee01d3190a305f03eb522cb032","modified":1548037854773},{"_id":"source/_posts/ITSA58.md","hash":"bd6c0a7cff4ed0083aef5e563a51cc48330bf281","modified":1548037854776},{"_id":"source/_posts/POJ1419-Graph-Coloring.md","hash":"eca9072ab412bd92e361b09ba205aeb09d83e83f","modified":1550061887069},{"_id":"source/_posts/POJ3692-Kindergarten.md","hash":"4837ecd31db246cc235070359b1ae235977cf165","modified":1549957960345},{"_id":"source/_posts/TIOJ1387-1407-多重背包問題.md","hash":"607e04ccdaa0c2add8ea951b80691dbc4a1f66eb","modified":1549954147465},{"_id":"source/_posts/ioicamp系列-1-2016.md","hash":"1481aefcc196d49df38c11c41f3c4b4474ca2f8b","modified":1548403634114},{"_id":"source/_posts/farm24心得.md","hash":"47f9e7baf0440605bb41ba605bc4d837dbcbf2a1","modified":1548037854783},{"_id":"source/_posts/ioicamp系列-10-總結.md","hash":"e503cb4b5b37a499ac284174ddce73a4dcd197a5","modified":1549160674322},{"_id":"source/_posts/ioicamp系列-2-2017.md","hash":"7c089132a6d94372cd729c55c035064a619e6d5b","modified":1548488343579},{"_id":"source/_posts/ioicamp系列-3-今年期許.md","hash":"73d634928a1d07c63775cfa8a203776137384983","modified":1548593917436},{"_id":"source/_posts/ioicamp系列-4-Day0.md","hash":"eef60a41210628280630320dfbdb81830af69666","modified":1548741305297},{"_id":"source/_posts/ioicamp系列-5-Day1.md","hash":"e9e781a4ffcffd887af32f8ea9c85b3dc97a6665","modified":1548742584373},{"_id":"source/_posts/ioicamp系列-7-Day3.md","hash":"4732769e310b08f509b659b10bbef7b3b47dffa3","modified":1548985404016},{"_id":"source/_posts/ioicamp系列-6-Day2.md","hash":"44875ff616a0c41cd51d3f91e06e5b8f08269897","modified":1548866037427},{"_id":"source/_posts/ioicamp系列-8-Day4.md","hash":"d238e34a0ff0d25b824d5021b7452b51777e4c4a","modified":1548986925365},{"_id":"source/_posts/ioicamp系列-9-Day5.md","hash":"3c2df12e4a5dac4ad517daa51d75d5702185e97c","modified":1549118420853},{"_id":"source/_posts/ioicamp系列-前文.md","hash":"c294dddeeef95f3610ef5b1dfebe71a73b65c215","modified":1548341559799},{"_id":"source/_posts/prefix-and-postfix.md","hash":"727d57988bdbdf18c02f013401fbb37b51312dfc","modified":1562920671985},{"_id":"source/_posts/uva00562 Dividing coins.md","hash":"7ffc48822a80412d22ca2f87a0b54fa1bfd150fa","modified":1548037854786},{"_id":"source/_posts/uva00706 LCD-Display.md","hash":"db4c7563e5b086858d5db7f0ec3e70a109a19e22","modified":1548037854788},{"_id":"source/_posts/uva11478-Halum-差分約束.md","hash":"21f58d0593e9bd31b3a3433ace3b9a6ab972faa4","modified":1550148607159},{"_id":"source/_posts/zjc264_神奇的載物任務.md","hash":"d593263a6147285d37f66ed46b54dfada951e064","modified":1548037854789},{"_id":"source/_posts/zjd512_創造數字.md","hash":"0fddd70feaae00b61a2bda3d22ba9b24d9b4eaa5","modified":1548037854792},{"_id":"source/_posts/二分圖筆記.md","hash":"ed03a4f43ec25c59c94fcf3edc068a1ad86ac020","modified":1549955876938},{"_id":"source/_posts/寒訓心得文系列-1-講義.md","hash":"36b89fe9f3bebfe3f1149a6a5f3b9b7368cf7aec","modified":1548043404715},{"_id":"source/_posts/寒訓心得文系列-2 講課.md","hash":"8878e47d58b8193fade8bee3a449aea45ab76249","modified":1548247892125},{"_id":"source/_posts/寒訓心得文系列-3-雜事.md","hash":"fdfb601194d5b3c5845b143b31373b273d77c39c","modified":1548339324741},{"_id":"source/_posts/寒訓心得文系列-4-找題目.md","hash":"a9e13280695c778f703a8d08b91cfe9358835e27","modified":1548341483416},{"_id":"source/_posts/寒訓心得文系列-5-人.md","hash":"1ecbac6c8cabdfb471353463024a0fe61c822f8a","modified":1548385447379},{"_id":"source/_posts/寒訓心得文系列-6-總結.md","hash":"304c350a1994726cad13cf14479da261659fcdb5","modified":1548397660258},{"_id":"source/_posts/寒訓心得文系列.md","hash":"6662d0ea1ad352fce55ed4f3476dbc4b141be2fa","modified":1548041648608},{"_id":"source/_posts/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-1.md","hash":"3b92307e702f3f357c311f9d16bc2a267e0ef494","modified":1550144430476},{"_id":"source/_posts/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-2-二分圖.md","hash":"7383002fc465c58b36c21857ba25eeacb69ac6cc","modified":1550147236594},{"_id":"source/_posts/最近狀況.md","hash":"a2420b50c09088940f3e3e0f5ed50220edc0bad2","modified":1562921518354},{"_id":"source/_posts/隨筆1-小心自定義的比較運算子.md","hash":"566c552b9ab09122d6b93b7d6ea1bafea04be8a5","modified":1548037854800},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1548037855291},{"_id":"themes/landscape/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1548037855296},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1548037855300},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1548037855303},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1548037855305},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1548037855307},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1548037855311},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1548037855369},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1548037855367},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1548037855374},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1548037855371},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1548037855378},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1548037855382},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1548037855385},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1548037855389},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"a7faab4f3601b28107af5b1095b3966c2f88fec8","modified":1548037855316},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1548037855318},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"3beb0d164acacb6f21e1ca2038158a74ab4a73e4","modified":1548037855319},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1548037855321},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1548037855323},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1548037855327},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"89998e6b2929c4ff5093bbf6b86d611d7420be52","modified":1548037855332},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"148bdf714dd1a7bf55e571f13808ceae079200cc","modified":1548037855334},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1548037855335},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1548037855351},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1548037855354},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1548037855356},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1548037855358},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1548037855360},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1548037855366},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1548037855392},{"_id":"themes/landscape/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1548037855453},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1548037855472},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548037855485},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548037855473},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548037855488},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1548037855508},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1548037855508},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1548037855508},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1548037855508},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1548037855337},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1548037855339},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1548037855340},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1548037855342},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1548037855345},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1548037855349},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1548037855399},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1548037855397},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1548037855402},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1548037855405},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1548037855407},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1548037855439},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1548037855441},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1548037855442},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1548037855448},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1548037855444},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1548037855450},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1548037855451},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1548037855456},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1548037855458},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1548037855467},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1548037855508},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1548037855493},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1548037855508},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1548037855463},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1548037855466},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1548037855471},{"_id":"public/2019/02/14/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-2-二分圖/index.html","hash":"1f04a1130cdf5e974fb2ffcf6cda7ad50726aeb5","modified":1562921591229},{"_id":"public/2019/02/13/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-1/index.html","hash":"23ad5a67f23f5b22fb6715d9a241093b05c8046a","modified":1562921591230},{"_id":"public/2019/02/12/二分圖筆記/index.html","hash":"230ee1b76e134aaed67957fd75ce6c9e459f9ec0","modified":1562921591230},{"_id":"public/2019/02/03/ioicamp系列-10-總結/index.html","hash":"472d84b7ea3c07623a55b767bb15638645de7f68","modified":1562921591231},{"_id":"public/2019/02/02/ioicamp系列-9-Day5/index.html","hash":"a05ad929cd6a4b7d79910324e99e146394c0f902","modified":1562921591231},{"_id":"public/2019/02/01/ioicamp系列-8-Day4/index.html","hash":"958eb2a0e144f4c5adad8d105595aa31b5989840","modified":1562921591231},{"_id":"public/2019/02/01/ioicamp系列-7-Day3/index.html","hash":"c095757fc494ebe58bf34138f009e91fc6298d6f","modified":1562921591231},{"_id":"public/2019/01/30/ioicamp系列-6-Day2/index.html","hash":"1e5d969c84a2980b13f21cfaa751c73619e7fe85","modified":1562921591231},{"_id":"public/2019/01/29/ioicamp系列-5-Day1/index.html","hash":"8dccd471dff08da1db8576dd5b7135117893a641","modified":1562921591231},{"_id":"public/2019/01/28/ioicamp系列-4-Day0/index.html","hash":"3597cad56b7ba243635a2a5bf3a800d4747eb72c","modified":1562921591231},{"_id":"public/2019/01/27/ioicamp系列-3-今年期許/index.html","hash":"3f120690230beffbb60beb30d79317f482ac6ec8","modified":1562921591231},{"_id":"public/2019/01/26/ioicamp系列-2-2017/index.html","hash":"9bd0ca85004509f95a3a2b6c391bbe9a64e83b61","modified":1562921591232},{"_id":"public/2019/01/25/ioicamp系列-1-2016/index.html","hash":"721ee5795f64f5347f6af34fe1aaa9cad875473b","modified":1562921591232},{"_id":"public/2019/01/25/寒訓心得文系列-6-總結/index.html","hash":"9a6e44a84bfe8e9c9b89611b7a55573afa955273","modified":1562921591232},{"_id":"public/2019/01/25/寒訓心得文系列-5-人/index.html","hash":"9d9216ec8887e43b519066e53914eac276d83ede","modified":1562921591232},{"_id":"public/2019/01/24/寒訓心得文系列-4-找題目/index.html","hash":"bf58fec287c57710d0dd390069723d45ea89107a","modified":1562921591233},{"_id":"public/2019/01/24/ioicamp系列-前文/index.html","hash":"4af9a21b521de5028322b7cc251810307387b2a3","modified":1562921591233},{"_id":"public/2019/01/24/寒訓心得文系列-3-雜事/index.html","hash":"7441f29752c71d4b748d493cdc4b83ad91b194dc","modified":1562921591233},{"_id":"public/2019/01/23/寒訓心得文系列-2 講課/index.html","hash":"a34bb9d9ac2322395d04629de59e469869604839","modified":1562921591233},{"_id":"public/2019/01/21/寒訓心得文系列-1-講義/index.html","hash":"4820ec0a1b225daac5b073f055fd9b98a5e718a8","modified":1562921591233},{"_id":"public/2019/01/21/寒訓心得文系列/index.html","hash":"cb4c2ff625cb0255e6b946b8c2a7b24e3af31207","modified":1562921591233},{"_id":"public/2017/12/17/隨筆1-小心自定義的比較運算子/index.html","hash":"59edf72213ed6a82bca271d4540d3582ae9b146e","modified":1562921591233},{"_id":"public/archives/index.html","hash":"8c3aebb430b99aa25f2903c54a798581d9e3e509","modified":1562921591233},{"_id":"public/archives/page/2/index.html","hash":"d50bd05fb89af5c72f133d965e96178ee5d1cd38","modified":1562921591233},{"_id":"public/archives/page/3/index.html","hash":"f3828b7f0194f0900cb400d3bc2151c622186b74","modified":1562921591233},{"_id":"public/archives/page/4/index.html","hash":"0c3fcb99ddef8b45788f61c5dca806b936481a95","modified":1562921591234},{"_id":"public/archives/2017/index.html","hash":"c1e5f16536c1a813ad0272de34a22675c43f54be","modified":1562921591234},{"_id":"public/archives/2017/02/index.html","hash":"2db5888a7768990b5b80af38402e8e989f73bc4a","modified":1562921591234},{"_id":"public/archives/2017/10/index.html","hash":"5e4cfae7992ba93f90d8c0dd6ce0b59ee463f14c","modified":1562921591234},{"_id":"public/archives/2017/12/index.html","hash":"14b7e39bca715515b058f4a2015bfd3b228c1298","modified":1562921591234},{"_id":"public/archives/2018/index.html","hash":"d9f1724fed31f9d935a2d3546f940b56b629be7c","modified":1562921591234},{"_id":"public/archives/2018/04/index.html","hash":"70db7a56d26cf00f2a1a5971cd975c09ff4d1c7f","modified":1562921591234},{"_id":"public/archives/2018/10/index.html","hash":"65176d50cea0782cfb61f67bfcdc3802c003dbf2","modified":1562921591234},{"_id":"public/archives/2019/index.html","hash":"eb30b73869293fccc6f18017b891bb0e2ccec9b8","modified":1562921591234},{"_id":"public/archives/2019/page/2/index.html","hash":"c69be791c4cf4713eaf511aff2f9ebc3b956363d","modified":1562921591234},{"_id":"public/archives/2019/page/3/index.html","hash":"d2230948dc2198a26b843b56becaeab6b90139eb","modified":1562921591235},{"_id":"public/archives/2019/01/index.html","hash":"ea95a49bd0f45caa317de7b44993d1684876c87c","modified":1562921591235},{"_id":"public/archives/2019/01/page/2/index.html","hash":"fa58fbfe0e1289729057693cce5530b141183042","modified":1562921591235},{"_id":"public/archives/2019/02/index.html","hash":"1c635ef3201e316be25fb2bd78e253a8609aac24","modified":1562921591235},{"_id":"public/archives/2019/02/page/2/index.html","hash":"0e8ee2089b54b8324a071b95134c7698eee9ebd2","modified":1562921591235},{"_id":"public/archives/2019/04/index.html","hash":"e6585eade8d45989670f922e7877f7327dd54670","modified":1562921591235},{"_id":"public/categories/Atcoder/index.html","hash":"c4756288e86aed1b4cda7da2187812a861391fc9","modified":1562921591235},{"_id":"public/categories/ITSA/index.html","hash":"b0675b514cf75455fb7325baf75aba9ef078d720","modified":1562921591235},{"_id":"public/categories/POJ/index.html","hash":"26afbf0281ad86de277a08b89da3bd646d06ebcf","modified":1562921591235},{"_id":"public/categories/TIOJ/index.html","hash":"af256c8d60b1e114d68d76f201304510c2a6d85b","modified":1562921591235},{"_id":"public/categories/Ioicamp/index.html","hash":"7144cbfa5acbe30fcb61451d8a760bd6ca76ae48","modified":1562921591235},{"_id":"public/categories/Ioicamp/page/2/index.html","hash":"90b1795fa5501aff8a91b4e791e76dc52fa1eaf9","modified":1562921591236},{"_id":"public/categories/Codeforce/index.html","hash":"c5df0ec9252d718118a216b8dd6324999c2479f1","modified":1562921591236},{"_id":"public/categories/隨筆/index.html","hash":"f387a281555c51375d4ec43e0495ac44b0bd2cf8","modified":1562921591236},{"_id":"public/categories/Uva/index.html","hash":"737c3f8697df9e571f6ec5a5bd1c3477d8598fb7","modified":1562921591236},{"_id":"public/categories/Zerojudge/index.html","hash":"541d6e277664491100e5a5993885e5fadcfea9ad","modified":1562921591236},{"_id":"public/categories/輔大/index.html","hash":"c88761ba19b6346658006d1e3e2ab716e81da75e","modified":1562921591236},{"_id":"public/tags/基礎/index.html","hash":"d039da3fd5efac773fddd7447dd68df97fad71f4","modified":1562921591236},{"_id":"public/tags/陣列/index.html","hash":"1c22457698dbac5ae089a265fefb9353bf9f15af","modified":1562921591236},{"_id":"public/tags/dfs/index.html","hash":"4686cee0803508566e5dd67bcddf92c5a2bd484e","modified":1562921591236},{"_id":"public/tags/dp/index.html","hash":"7544d0e593d00e90eabca404aaacb4890d1602e7","modified":1562921591236},{"_id":"public/tags/Atcoder/index.html","hash":"9e7f885a8eb30831c9d90b4d809bc77161d3630c","modified":1562921591236},{"_id":"public/tags/枚舉/index.html","hash":"5b60e366a72b4456d5d8ffab4d2d54861d33cd72","modified":1562921591236},{"_id":"public/tags/stl/index.html","hash":"8a721a3a4bc77b200588bbb4670ceb8223e4355e","modified":1562921591237},{"_id":"public/tags/map/index.html","hash":"0b4e41a5b5018bc019a708862a2e5b8fca49ad2e","modified":1562921591237},{"_id":"public/tags/vector/index.html","hash":"fc1a0340c1fe9f2d8ba40efe5145366823ff38dd","modified":1562921591237},{"_id":"public/tags/模擬/index.html","hash":"c16bf463147cff48703d3166521106f22f550270","modified":1562921591237},{"_id":"public/tags/狀態壓縮/index.html","hash":"14c5b36bfc40c9d7857dd23df1deb9fa8e3f6d22","modified":1562921591237},{"_id":"public/tags/離散化/index.html","hash":"252579850e5a523200c1151b1cefe6e363983463","modified":1562921591237},{"_id":"public/tags/algorithm/index.html","hash":"196a5a5934f1166454e1843b42e2e8e55481876a","modified":1562921591237},{"_id":"public/tags/ITSA/index.html","hash":"9972527c24bff5e0e2a2389a3beda432daf35332","modified":1562921591237},{"_id":"public/tags/greedy/index.html","hash":"8ea26a557f40bf951dfe0209dbe089663523ad78","modified":1562921591237},{"_id":"public/tags/字串處理/index.html","hash":"4c65b1530d25fe136ce6a37751f381cc26e1a352","modified":1562921591237},{"_id":"public/tags/樹/index.html","hash":"31bb9d47b25136639a70be0db914e0b3d373d2a4","modified":1562921591237},{"_id":"public/tags/最短路徑/index.html","hash":"c45f31228d704f3a698e6cef61a637f05578e356","modified":1562921591238},{"_id":"public/tags/暴力法/index.html","hash":"d83af1f632811d55fff6c67f9cb86819e162a533","modified":1562921591238},{"_id":"public/tags/POJ/index.html","hash":"65d65003fe7cc8c3f902f33b4a7aa61d48f4c712","modified":1562921591238},{"_id":"public/tags/graph/index.html","hash":"f1a2f766b44b599a38dcfb2665561967f5e4db5a","modified":1562921591238},{"_id":"public/tags/TIOJ/index.html","hash":"c7af255a3441c2c9454f8baa24138b15d00e2ee4","modified":1562921591238},{"_id":"public/tags/背包dp/index.html","hash":"af0d6de98a6dc9b09a53bfecdc4bce0769458c21","modified":1562921591239},{"_id":"public/tags/bipartite-graph/index.html","hash":"aee06dc64a1319f2bcc43d2264714e3d0702f3bd","modified":1562921591239},{"_id":"public/tags/Ioicamp/index.html","hash":"35b9112f7483a23495a4b9b4ed00554b9d94b68e","modified":1562921591239},{"_id":"public/tags/Ioicamp/page/2/index.html","hash":"06d79201ffe16eaba5673c319004a66cf8969195","modified":1562921591239},{"_id":"public/tags/Twicpc/index.html","hash":"e6799b7c714fc161e01ae6a87fcdf745ebc72a63","modified":1562921591240},{"_id":"public/tags/Codeforce/index.html","hash":"d7b88f4931294d174edf2cc890e343e1793e95c8","modified":1562921591240},{"_id":"public/tags/數學/index.html","hash":"b6f11a0ccee7f2662929cf0918132196fed7196d","modified":1562921591240},{"_id":"public/tags/隨筆/index.html","hash":"be54befc5594cc61f16e1df37b4d820d106985ba","modified":1562921591240},{"_id":"public/tags/Uva/index.html","hash":"0ecb432cba3ff63a8db97b858575677b06b0ffa5","modified":1562921591240},{"_id":"public/tags/Zerojudge/index.html","hash":"7ed406c67501c843e87ba82e05ca04bdd4e4f9be","modified":1562921591240},{"_id":"public/tags/建表/index.html","hash":"db6503cd14d2078d13eb546920e7e1dec3c9f473","modified":1562921591240},{"_id":"public/tags/set/index.html","hash":"a93447b6b14ab9190c3ce5317bedc386fe1599df","modified":1562921591240},{"_id":"public/tags/寒訓/index.html","hash":"0f99b8366a43ff7e93a4b53d802e1ea9a46d9b5a","modified":1562921591241},{"_id":"public/2019/04/05/prefix-and-postfix/index.html","hash":"260a020997401f411730f04ab97851d1e1e9884b","modified":1562921591241},{"_id":"public/2019/02/14/uva11478-Halum-差分約束/index.html","hash":"290220c284358398dea954ae7bdf1643dacc0615","modified":1562921591241},{"_id":"public/2019/02/13/POJ1419-Graph-Coloring/index.html","hash":"b0193b698cabc798dd6bcc444c57c6b713e6e289","modified":1562921591241},{"_id":"public/2019/02/12/POJ3692-Kindergarten/index.html","hash":"a6c4dff464443fdb63ea54767994141e5259b218","modified":1562921591241},{"_id":"public/2019/02/11/TIOJ1387-1407-多重背包問題/index.html","hash":"74e9e0e5ba7c64e373bb9d8c5596efadad2ebc83","modified":1562921591241},{"_id":"public/2018/10/24/AtCoder Beginner Contest 107 心得/index.html","hash":"496747d833384aab20a8ee8db82b22ef293e5dea","modified":1562921591241},{"_id":"public/2018/04/16/zjd512_創造數字/index.html","hash":"958b53b92dd1bff00b26dabcd79bdc2210d95db6","modified":1562921591241},{"_id":"public/2018/04/15/zjc264_神奇的載物任務/index.html","hash":"b8ffa5433957ae11eb2090c8410443599ae42e07","modified":1562921591241},{"_id":"public/2017/12/31/uva00562 Dividing coins/index.html","hash":"5dfb2771884224b7f8824bebb163ecddc49347b5","modified":1562921591242},{"_id":"public/2017/12/24/AtCoder Beginner Contest 083 心得/index.html","hash":"e9835365722f23cf6cb29a367fdc7d525fa42307","modified":1562921591242},{"_id":"public/2017/12/22/uva00706 LCD-Display/index.html","hash":"f03b18fd689b673e6ce725b08fa939b89d66411e","modified":1562921591242},{"_id":"public/2017/12/17/AtCoder Beginner Contest 082 心得/index.html","hash":"5ea1ae6dbf7dbf16e702650365e3312b4b8770d6","modified":1562921591242},{"_id":"public/2017/12/11/AtCoder Beginner Contest 081 心得/index.html","hash":"e03b56ae4a9bb3ac2c4aa315a7f3a1fecc0945b3","modified":1562921591242},{"_id":"public/2017/12/11/AtCoder Beginner Contest 080 心得/index.html","hash":"1eb350eca6e0b9fcb110fc0f9cb35aa3e3ea19d1","modified":1562921591242},{"_id":"public/2017/10/29/ITSA58/index.html","hash":"7864a4af6204f931eb6f24a22e1f0fdb0fa883f6","modified":1562921591242},{"_id":"public/2017/02/22/AtCoder Beginner Contest 054 心得/index.html","hash":"7532602be6188cc8c9265fd0516f5f57b9ee66fd","modified":1562921591242},{"_id":"public/2017/02/18/farm24心得/index.html","hash":"e73e5ddfe9975ea70e6693ab915507b0543f9900","modified":1562921591243},{"_id":"public/index.html","hash":"9858f1f2d6acf8edc8d3386ea58c368d20728690","modified":1562921591243},{"_id":"public/page/2/index.html","hash":"c25b1be8ed205ca8269493adcf36aaa16523ca15","modified":1562921591243},{"_id":"public/page/3/index.html","hash":"48a1df3c6cee2bfbbc238970684c71cb26d63c54","modified":1562921591243},{"_id":"public/page/4/index.html","hash":"bbfd0c052fb9c4cde152598900aa4618cd22dc54","modified":1562921591243},{"_id":"public/2019/07/12/最近狀況/index.html","hash":"3539d936cfaeef83da9cafc4031abf26b0b4505d","modified":1562921591258},{"_id":"public/archives/2019/07/index.html","hash":"0de0c0380b947158fc5f98b40d561638171518cc","modified":1562921591258},{"_id":"public/categories/公告/index.html","hash":"93bb20f1f5cc255f40a81045139c973a203eafb5","modified":1562921591258},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1562921591262},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1562921591263},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1562921591263},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1562921591263},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1562921591263},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1562921591263},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1562921591263},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1562921591263},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1562921591838},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1562921591838},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1562921591838},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1562921592108},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1562921592108},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1562921592109},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1562921592109},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1562921592109},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1562921592109},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1562921592110},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1562921592110},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1562921592430},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1562921592435},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1562921592435},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1562921592677}],"Category":[{"name":"Atcoder","_id":"cjxzv5sc10014hwu44bii9onm"},{"name":"ITSA","_id":"cjxzv5sci001ghwu4me7tfhl7"},{"name":"POJ","_id":"cjxzv5sck001ihwu4sev24s6w"},{"name":"TIOJ","_id":"cjxzv5scl001khwu4an3rb1vx"},{"name":"Ioicamp","_id":"cjxzv5sco001ohwu449n3mob9"},{"name":"Codeforce","_id":"cjxzv5scp001qhwu46au2l5uk"},{"name":"隨筆","_id":"cjxzv5sd5002chwu43m9rz1x2"},{"name":"Uva","_id":"cjxzv5sd6002ehwu4s3w5n6b8"},{"name":"Zerojudge","_id":"cjxzv5sd9002khwu49fd94ill"},{"name":"輔大","_id":"cjxzv5sdb002phwu4hxi24qxy"},{"name":"公告","_id":"cjxzv5sdn0037hwu44tbec07c"}],"Data":[],"Page":[],"Post":[{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 054 心得","date":"2017-02-22T08:01:05.000Z","_content":"這是我的第一場atcoder比賽，打的不錯，除了D，其他都AC了!\n結果:\nA 基礎 AC\nB 陣列 AC\nC DFS AC\nD DP 賽後AC\n題解:\npA\n如果是1的話就當成14，其他一樣\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define t(x) x==1?14:x\n\nint main(){\n\tint a,b;\n\tcin>>a>>b;\n\ta=t(a);b=t(b);\n\tif(a>b)cout<<\"Alice\\n\";\n\telse if(a<b)cout<<\"Bob\\n\";\n\telse cout<<\"Draw\\n\";\n}\n{% endcodeblock %}\npB\n這題只是在判斷前面的陣列(A陣列)是否包含後面陣列(B陣列)，我的作法是先找出可能的範圍，在一個個判斷使否相符，複雜度O(N*M*M)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 55\nint n,m;\nstring s[N],r[N];\n\nbool che(int i,int j){\n\tfor(int a=0;a<m;a++){\n\t\tfor(int b=0;b<m;b++){\n\t\t\tif(s[a+i][b+j]!=r[a][b])\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nbool solve(){\n\tfor(int i=0;i<=n-m;i++)\n\t\tfor(int j=0;j<=n-m;j++)\n\t\t\tif(che(i,j))\n\t\t\t\treturn 1;\n\treturn 0;\t\t \n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t\t\tcin>>s[i];\n\tfor(int i=0;i<m;i++)\n\t\t\tcin>>r[i];\n\tif(solve())cout<<\"Yes\\n\";\n\telse cout<<\"No\\n\";\n}\n{% endcodeblock %}\npC\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 10\nvector<int>v[N];\nint n,m,x,y;\nbool vis[N];\n\nint solve(int a,int b){\n\tif(b==n)return 1;\n\tint ans=0;\n\tfor(int i=0,j=v[a].size();i<j;i++){\n\t\tif(!vis[v[a][i]]){\n\t\t\tvis[v[a][i]]=1;\n\t\t\tans+=solve(v[a][i],b+1);\n\t\t\tvis[v[a][i]]=0;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main(){\n\tmemset(vis,0,sizeof(0));\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++){\n\t\tcin>>x>>y;\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\n\t}\n\tvis[1]=1;\n\tcout<<solve(1,1)<<endl;\n}\n{% endcodeblock %}\npD\n一看知道是一題背包DP，但當下我無法立刻寫出來，賽後我參考解答，一開始發現三維陣列的，但後來查到二維陣列版本如下，每個dp[i][j]代表a有i克,b有j克下最小的花費，最後再搜一次所有(i,j)為K(ma,mb)的dp值，最小的為答案，找不到解要特判掉，dp花費O(N*M*M)的時間，搜尋花費O(M*M)的時間，總共花費O(N*M*M)的時間。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 40\n#define M 405\nint n,ma,mb,a[N],b[N],c[N],dp[M][M],ans=10000000,ans2;\n\nint main(){\n\tcin>>n>>ma>>mb;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>a[i]>>b[i]>>c[i];\n\tfor(int i=0;i<M;i++){\n\t\tfor(int j=0;j<M;j++){\n\t\t\tdp[i][j]=ans;\n\t\t}\n\t}\n\tdp[0][0]=0;\n\tfor(int i=0;i<N;i++){\n\t\tfor(int j=M;j-a[i]>=0;j--){\n\t\t\tfor(int k=M;k-b[i]>=0;k--){\n\t\t\t\tdp[j][k]=min(dp[j][k],dp[j-a[i]][k-b[i]]+c[i]);\n\t\t\t}\n\t\t}\n\t}\n\tans2=ans;\n\tfor(int i=1;i<=400;i++){\n\t\tfor(int j=1;j<=400;j++){\n\t\t\tif(i*mb==j*ma)\n\t\t\t\tans=min(ans,dp[i][j]);\n\t\t}\n\t}\n\tif(ans==ans2)cout<<\"-1\\n\";\n\telse cout<<ans<<endl;\n}\n{% endcodeblock %}","source":"_posts/AtCoder Beginner Contest 054 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 054 心得\ndate: 2017-02-22 16:01:05\ncategory: Atcoder\ntags:\n- 基礎\n- 陣列\n- dfs\n- dp\n---\n這是我的第一場atcoder比賽，打的不錯，除了D，其他都AC了!\n結果:\nA 基礎 AC\nB 陣列 AC\nC DFS AC\nD DP 賽後AC\n題解:\npA\n如果是1的話就當成14，其他一樣\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define t(x) x==1?14:x\n\nint main(){\n\tint a,b;\n\tcin>>a>>b;\n\ta=t(a);b=t(b);\n\tif(a>b)cout<<\"Alice\\n\";\n\telse if(a<b)cout<<\"Bob\\n\";\n\telse cout<<\"Draw\\n\";\n}\n{% endcodeblock %}\npB\n這題只是在判斷前面的陣列(A陣列)是否包含後面陣列(B陣列)，我的作法是先找出可能的範圍，在一個個判斷使否相符，複雜度O(N*M*M)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 55\nint n,m;\nstring s[N],r[N];\n\nbool che(int i,int j){\n\tfor(int a=0;a<m;a++){\n\t\tfor(int b=0;b<m;b++){\n\t\t\tif(s[a+i][b+j]!=r[a][b])\n\t\t\t\treturn 0;\n\t\t}\n\t}\n\treturn 1;\n}\n\nbool solve(){\n\tfor(int i=0;i<=n-m;i++)\n\t\tfor(int j=0;j<=n-m;j++)\n\t\t\tif(che(i,j))\n\t\t\t\treturn 1;\n\treturn 0;\t\t \n}\n\nint main(){\n\tcin>>n>>m;\n\tfor(int i=0;i<n;i++)\n\t\t\tcin>>s[i];\n\tfor(int i=0;i<m;i++)\n\t\t\tcin>>r[i];\n\tif(solve())cout<<\"Yes\\n\";\n\telse cout<<\"No\\n\";\n}\n{% endcodeblock %}\npC\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 10\nvector<int>v[N];\nint n,m,x,y;\nbool vis[N];\n\nint solve(int a,int b){\n\tif(b==n)return 1;\n\tint ans=0;\n\tfor(int i=0,j=v[a].size();i<j;i++){\n\t\tif(!vis[v[a][i]]){\n\t\t\tvis[v[a][i]]=1;\n\t\t\tans+=solve(v[a][i],b+1);\n\t\t\tvis[v[a][i]]=0;\n\t\t}\n\t}\n\treturn ans;\n}\n\nint main(){\n\tmemset(vis,0,sizeof(0));\n\tcin>>n>>m;\n\tfor(int i=0;i<m;i++){\n\t\tcin>>x>>y;\n\t\tv[x].push_back(y);\n\t\tv[y].push_back(x);\n\t}\n\tvis[1]=1;\n\tcout<<solve(1,1)<<endl;\n}\n{% endcodeblock %}\npD\n一看知道是一題背包DP，但當下我無法立刻寫出來，賽後我參考解答，一開始發現三維陣列的，但後來查到二維陣列版本如下，每個dp[i][j]代表a有i克,b有j克下最小的花費，最後再搜一次所有(i,j)為K(ma,mb)的dp值，最小的為答案，找不到解要特判掉，dp花費O(N*M*M)的時間，搜尋花費O(M*M)的時間，總共花費O(N*M*M)的時間。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 40\n#define M 405\nint n,ma,mb,a[N],b[N],c[N],dp[M][M],ans=10000000,ans2;\n\nint main(){\n\tcin>>n>>ma>>mb;\n\tfor(int i=0;i<n;i++)\n\t\tcin>>a[i]>>b[i]>>c[i];\n\tfor(int i=0;i<M;i++){\n\t\tfor(int j=0;j<M;j++){\n\t\t\tdp[i][j]=ans;\n\t\t}\n\t}\n\tdp[0][0]=0;\n\tfor(int i=0;i<N;i++){\n\t\tfor(int j=M;j-a[i]>=0;j--){\n\t\t\tfor(int k=M;k-b[i]>=0;k--){\n\t\t\t\tdp[j][k]=min(dp[j][k],dp[j-a[i]][k-b[i]]+c[i]);\n\t\t\t}\n\t\t}\n\t}\n\tans2=ans;\n\tfor(int i=1;i<=400;i++){\n\t\tfor(int j=1;j<=400;j++){\n\t\t\tif(i*mb==j*ma)\n\t\t\t\tans=min(ans,dp[i][j]);\n\t\t}\n\t}\n\tif(ans==ans2)cout<<\"-1\\n\";\n\telse cout<<ans<<endl;\n}\n{% endcodeblock %}","slug":"AtCoder Beginner Contest 054 心得","published":1,"updated":"2019-01-21T02:30:54.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sab0000hwu4497r940w","content":"<p>這是我的第一場atcoder比賽，打的不錯，除了D，其他都AC了!<br>結果:<br>A 基礎 AC<br>B 陣列 AC<br>C DFS AC<br>D DP 賽後AC<br>題解:<br>pA<br>如果是1的話就當成14，其他一樣<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> t(x) x==1?14:x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\ta=t(a);b=t(b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&gt;b)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Alice\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&lt;b)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bob\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Draw\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB<br>這題只是在判斷前面的陣列(A陣列)是否包含後面陣列(B陣列)，我的作法是先找出可能的範圍，在一個個判斷使否相符，複雜度O(N<em>M</em>M)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 55</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s[N],r[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">che</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> a=<span class=\"number\">0</span>;a&lt;m;a++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> b=<span class=\"number\">0</span>;b&lt;m;b++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[a+i][b+j]!=r[a][b])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n-m;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=n-m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(che(i,j))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;r[i];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(solve())<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pC</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,x,y;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b==n)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=v[a].size();i&lt;j;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!vis[v[a][i]])&#123;</span><br><span class=\"line\">\t\t\tvis[v[a][i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tans+=solve(v[a][i],b+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\tvis[v[a][i]]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">\t\tv[x].push_back(y);</span><br><span class=\"line\">\t\tv[y].push_back(x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tvis[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;solve(<span class=\"number\">1</span>,<span class=\"number\">1</span>)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pD<br>一看知道是一題背包DP，但當下我無法立刻寫出來，賽後我參考解答，一開始發現三維陣列的，但後來查到二維陣列版本如下，每個dp[i][j]代表a有i克,b有j克下最小的花費，最後再搜一次所有(i,j)為K(ma,mb)的dp值，最小的為答案，找不到解要特判掉，dp花費O(N<em>M</em>M)的時間，搜尋花費O(M<em>M)的時間，總共花費O(N</em>M*M)的時間。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 40</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> M 405</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,ma,mb,a[N],b[N],c[N],dp[M][M],ans=<span class=\"number\">10000000</span>,ans2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;ma&gt;&gt;mb;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;M;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;M;j++)&#123;</span><br><span class=\"line\">\t\t\tdp[i][j]=ans;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=M;j-a[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=M;k-b[i]&gt;=<span class=\"number\">0</span>;k--)&#123;</span><br><span class=\"line\">\t\t\t\tdp[j][k]=min(dp[j][k],dp[j-a[i]][k-b[i]]+c[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans2=ans;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">400</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=<span class=\"number\">400</span>;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i*mb==j*ma)</span><br><span class=\"line\">\t\t\t\tans=min(ans,dp[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ans==ans2)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"-1\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這是我的第一場atcoder比賽，打的不錯，除了D，其他都AC了!<br>結果:<br>A 基礎 AC<br>B 陣列 AC<br>C DFS AC<br>D DP 賽後AC<br>題解:<br>pA<br>如果是1的話就當成14，其他一樣<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> t(x) x==1?14:x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\ta=t(a);b=t(b);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a&gt;b)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Alice\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&lt;b)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Bob\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Draw\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB<br>這題只是在判斷前面的陣列(A陣列)是否包含後面陣列(B陣列)，我的作法是先找出可能的範圍，在一個個判斷使否相符，複雜度O(N<em>M</em>M)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 55</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"built_in\">string</span> s[N],r[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">che</span><span class=\"params\">(<span class=\"keyword\">int</span> i,<span class=\"keyword\">int</span> j)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> a=<span class=\"number\">0</span>;a&lt;m;a++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> b=<span class=\"number\">0</span>;b&lt;m;b++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(s[a+i][b+j]!=r[a][b])</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">solve</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n-m;i++)</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=n-m;j++)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(che(i,j))</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;\t\t </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;s[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cin</span>&gt;&gt;r[i];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(solve())<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pC</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 10</span></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,x,y;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vis[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">solve</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b==n)<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>,j=v[a].size();i&lt;j;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!vis[v[a][i]])&#123;</span><br><span class=\"line\">\t\t\tvis[v[a][i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tans+=solve(v[a][i],b+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\tvis[v[a][i]]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(<span class=\"number\">0</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">\t\tv[x].push_back(y);</span><br><span class=\"line\">\t\tv[y].push_back(x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tvis[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;solve(<span class=\"number\">1</span>,<span class=\"number\">1</span>)&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>pD<br>一看知道是一題背包DP，但當下我無法立刻寫出來，賽後我參考解答，一開始發現三維陣列的，但後來查到二維陣列版本如下，每個dp[i][j]代表a有i克,b有j克下最小的花費，最後再搜一次所有(i,j)為K(ma,mb)的dp值，最小的為答案，找不到解要特判掉，dp花費O(N<em>M</em>M)的時間，搜尋花費O(M<em>M)的時間，總共花費O(N</em>M*M)的時間。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 40</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> M 405</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,ma,mb,a[N],b[N],c[N],dp[M][M],ans=<span class=\"number\">10000000</span>,ans2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;ma&gt;&gt;mb;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span>&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;M;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;M;j++)&#123;</span><br><span class=\"line\">\t\t\tdp[i][j]=ans;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdp[<span class=\"number\">0</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;N;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=M;j-a[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=M;k-b[i]&gt;=<span class=\"number\">0</span>;k--)&#123;</span><br><span class=\"line\">\t\t\t\tdp[j][k]=min(dp[j][k],dp[j-a[i]][k-b[i]]+c[i]);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tans2=ans;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">400</span>;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=<span class=\"number\">400</span>;j++)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(i*mb==j*ma)</span><br><span class=\"line\">\t\t\t\tans=min(ans,dp[i][j]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ans==ans2)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"-1\\n\"</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 081 心得","date":"2017-12-11T13:43:28.000Z","_content":"這次我第一次在AtCoder破台，開心!!!前三題很快就解出來了，第四題想了很久才解出來(快結束時)。\n結果:\nA 基礎 AC\nB 基礎 AC\nC STL(map+vector) AC\nD 模擬 AC\n\npA\n問你這字串有幾個1，這題用字串或是整數都可以實作。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,ans=0;\n    cin>>n;\n    while(n){\n        ans+=n%10;\n        n/=10;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npB\n求這幾個數字最大可以2的n次方整除，直接一個一個找答案然後取最大的就好了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,x,ans=100000,t;\n    cin>>n;\n    while(n--){\n        t=0;\n        cin>>x;\n        while(x%2==0){\n            t++;\n            x/=2;\n        }\n        ans=min(ans,t);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npC\n把每一種數字都紀錄幾個，如果種數超過k就把前(k-種數)種數字的和加起來。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,k,x;\n    map<int,int>ma;\n    cin>>n>>k;\n    for(int i=0;i<n;i++){\n        cin>>x;\n        if(ma.find(x)!=ma.end()){\n            ma[x]+=1;\n        }else{\n            ma[x]=1;\n        }\n    }\n    vector<int>v;\n    for(auto it:ma){\n        v.push_back(it.second);\n    }\n    sort(v.begin(),v.end());\n    int ans=0;\n    if(v.size()<=k){\n        cout<<\"0\\n\";\n        return 0;\n    }\n    for(int i=0;i<v.size()-k;i++){\n        ans+=v[i];\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n如果這題是全正或全負就可以直接做(全正:由左到右；全負:由右至左)，那如果是有正有負，那麼比較絕對值，看哪一個比較大，就把每一個數都加上它，就變成全正或全負的。所以保證2N個操作內可以完成(實際2N-1)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=55;\nint n,a[N],h=0;//head\nint main(){\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n        if(abs(a[i])>abs(a[h]))h=i;\n    }\n    cout<<2*n-1<<'\\n';\n    for(int i=0;i<n;i++){\n        cout<<h+1<<' '<<i+1<<'\\n';\n    }\n    if(a[h]>0){\n        for(int i=0;i<n-1;i++){\n            cout<<i+1<<' '<<i+2<<'\\n';\n        }\n    }else{\n        for(int i=n;i>1;i--){\n            cout<<i<<' '<<i-1<<'\\n';\n        }\n    }\n}\n{% endcodeblock %}","source":"_posts/AtCoder Beginner Contest 081 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 081 心得\ndate: 2017-12-11 21:43:28\ncategory: Atcoder\ntags: \n- Atcoder\n- 基礎\n- 枚舉\n- stl\n- map\n- vector\n- 模擬\n---\n這次我第一次在AtCoder破台，開心!!!前三題很快就解出來了，第四題想了很久才解出來(快結束時)。\n結果:\nA 基礎 AC\nB 基礎 AC\nC STL(map+vector) AC\nD 模擬 AC\n\npA\n問你這字串有幾個1，這題用字串或是整數都可以實作。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,ans=0;\n    cin>>n;\n    while(n){\n        ans+=n%10;\n        n/=10;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npB\n求這幾個數字最大可以2的n次方整除，直接一個一個找答案然後取最大的就好了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,x,ans=100000,t;\n    cin>>n;\n    while(n--){\n        t=0;\n        cin>>x;\n        while(x%2==0){\n            t++;\n            x/=2;\n        }\n        ans=min(ans,t);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npC\n把每一種數字都紀錄幾個，如果種數超過k就把前(k-種數)種數字的和加起來。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,k,x;\n    map<int,int>ma;\n    cin>>n>>k;\n    for(int i=0;i<n;i++){\n        cin>>x;\n        if(ma.find(x)!=ma.end()){\n            ma[x]+=1;\n        }else{\n            ma[x]=1;\n        }\n    }\n    vector<int>v;\n    for(auto it:ma){\n        v.push_back(it.second);\n    }\n    sort(v.begin(),v.end());\n    int ans=0;\n    if(v.size()<=k){\n        cout<<\"0\\n\";\n        return 0;\n    }\n    for(int i=0;i<v.size()-k;i++){\n        ans+=v[i];\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n如果這題是全正或全負就可以直接做(全正:由左到右；全負:由右至左)，那如果是有正有負，那麼比較絕對值，看哪一個比較大，就把每一個數都加上它，就變成全正或全負的。所以保證2N個操作內可以完成(實際2N-1)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=55;\nint n,a[N],h=0;//head\nint main(){\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>a[i];\n        if(abs(a[i])>abs(a[h]))h=i;\n    }\n    cout<<2*n-1<<'\\n';\n    for(int i=0;i<n;i++){\n        cout<<h+1<<' '<<i+1<<'\\n';\n    }\n    if(a[h]>0){\n        for(int i=0;i<n-1;i++){\n            cout<<i+1<<' '<<i+2<<'\\n';\n        }\n    }else{\n        for(int i=n;i>1;i--){\n            cout<<i<<' '<<i-1<<'\\n';\n        }\n    }\n}\n{% endcodeblock %}","slug":"AtCoder Beginner Contest 081 心得","published":1,"updated":"2019-01-21T02:30:54.767Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sah0001hwu40k12btrv","content":"<p>這次我第一次在AtCoder破台，開心!!!前三題很快就解出來了，第四題想了很久才解出來(快結束時)。<br>結果:<br>A 基礎 AC<br>B 基礎 AC<br>C STL(map+vector) AC<br>D 模擬 AC</p>\n<p>pA<br>問你這字串有幾個1，這題用字串或是整數都可以實作。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        ans+=n%<span class=\"number\">10</span>;</span><br><span class=\"line\">        n/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pB<br>求這幾個數字最大可以2的n次方整除，直接一個一個找答案然後取最大的就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x,ans=<span class=\"number\">100000</span>,t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        t=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            t++;</span><br><span class=\"line\">            x/=<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=min(ans,t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>把每一種數字都紀錄幾個，如果種數超過k就把前(k-種數)種數字的和加起來。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,k,x;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt;ma;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ma.find(x)!=ma.end())&#123;</span><br><span class=\"line\">            ma[x]+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            ma[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> it:ma)&#123;</span><br><span class=\"line\">        v.push_back(it.second);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(v.begin(),v.end());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v.size()&lt;=k)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"0\\n\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;v.size()-k;i++)&#123;</span><br><span class=\"line\">        ans+=v[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>如果這題是全正或全負就可以直接做(全正:由左到右；全負:由右至左)，那如果是有正有負，那麼比較絕對值，看哪一個比較大，就把每一個數都加上它，就變成全正或全負的。所以保證2N個操作內可以完成(實際2N-1)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">55</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,a[N],h=<span class=\"number\">0</span>;<span class=\"comment\">//head</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">abs</span>(a[i])&gt;<span class=\"built_in\">abs</span>(a[h]))h=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">2</span>*n<span class=\"number\">-1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;h+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a[h]&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;i+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i+<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">1</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i<span class=\"number\">-1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這次我第一次在AtCoder破台，開心!!!前三題很快就解出來了，第四題想了很久才解出來(快結束時)。<br>結果:<br>A 基礎 AC<br>B 基礎 AC<br>C STL(map+vector) AC<br>D 模擬 AC</p>\n<p>pA<br>問你這字串有幾個1，這題用字串或是整數都可以實作。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        ans+=n%<span class=\"number\">10</span>;</span><br><span class=\"line\">        n/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pB<br>求這幾個數字最大可以2的n次方整除，直接一個一個找答案然後取最大的就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x,ans=<span class=\"number\">100000</span>,t;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        t=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(x%<span class=\"number\">2</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            t++;</span><br><span class=\"line\">            x/=<span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=min(ans,t);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>把每一種數字都紀錄幾個，如果種數超過k就把前(k-種數)種數字的和加起來。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,k,x;</span><br><span class=\"line\">    <span class=\"built_in\">map</span>&lt;<span class=\"keyword\">int</span>,<span class=\"keyword\">int</span>&gt;ma;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(ma.find(x)!=ma.end())&#123;</span><br><span class=\"line\">            ma[x]+=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            ma[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> it:ma)&#123;</span><br><span class=\"line\">        v.push_back(it.second);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(v.begin(),v.end());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(v.size()&lt;=k)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"0\\n\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;v.size()-k;i++)&#123;</span><br><span class=\"line\">        ans+=v[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>如果這題是全正或全負就可以直接做(全正:由左到右；全負:由右至左)，那如果是有正有負，那麼比較絕對值，看哪一個比較大，就把每一個數都加上它，就變成全正或全負的。所以保證2N個操作內可以完成(實際2N-1)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">55</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,a[N],h=<span class=\"number\">0</span>;<span class=\"comment\">//head</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">abs</span>(a[i])&gt;<span class=\"built_in\">abs</span>(a[h]))h=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"number\">2</span>*n<span class=\"number\">-1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;h+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a[h]&gt;<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n<span class=\"number\">-1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;i+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i+<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i&gt;<span class=\"number\">1</span>;i--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;i<span class=\"number\">-1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 080 心得","date":"2017-12-11T08:09:24.000Z","_content":"這場比賽打得平平，卡在pC太久了，直到賽後才發現是ans變數要設小一點才AC。\n結果:\nA 基礎 AC\nB 基礎 AC\nC 枚舉+狀態壓縮 賽後AC\nD 離散化 賽後AC\n\npA\n比較哪個比較大\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b,k;\n    cin>>a>>b>>k;\n    cout<<min(a*b,k)<<'\\n';\n}\n\n{% endcodeblock %}\n\npB\n照定義求出f(x)再看看是不是x的因數\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint f(int n){\n    int ans=0;\n    while(n){\n        ans+=n%10;\n        n/=10;\n    }\n    return ans;\n}\n \nint main(){\n    int n,m;\n    cin>>n;\n    if(n%f(n)==0){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}\n\npC\n枚舉每種可能，算出對大的利益。這裡我用狀態壓縮，有一種寫法是用函數DFS每一時段開不開店。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=105;\nconst int M=15;\nlong long int n,f[N][M],p[N][M],x,ans=-1000000000,c[N];\n \nint main(){\n    bool b=0;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<10;j++){\n            cin>>f[i][j];\n        }\n    }\n    for(int i=0;i<n;i++){\n        for(int j=0;j<11;j++){\n            cin>>p[i][j];\n        }\n    }\n    for(int i=1;i<(1<<10);i++){\n        memset(c,0,sizeof(c));\n        x=0;\n        for(int j=0;j<=9;j++){\n            if((1<<j)&i){\n                for(int k=0;k<n;k++){\n                    c[k]+=f[k][j];\n                }\n            }\n        }\n        for(int j=0;j<n;j++){\n//            cout<<j<<' '<<c[j]<<'\\n';\n            x+=p[j][c[j]];\n        }\n//        cout<<i<<' '<<x<<'\\n';\n        ans=max(ans,x);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n首先，對每一個頻道分開看，看該頻道所佔有的時間，之後再看哪個時間的所需用頻道數最多，即為答案。\n13,14行:因為一開始錄之前0.5就要固定頻道，所以我們把時間軸拉長2倍，將開始時間-1來處理。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=100001;\nint n,c,ss[N],tt[N],cc[N],pre[2*N],a[2*N];\nint main(){\n    cin>>n>>c;\n    for(int i=0;i<n;i++){\n        cin>>ss[i]>>tt[i]>>cc[i];\n    }\n    memset(a,0,sizeof(a));\n    for(int i=1;i<=c;i++){\n        memset(pre,0,sizeof(pre));\n        for(int j=0;j<n;j++){\n            if(cc[j]!=i)continue;\n            pre[ss[j]*2-1]++;\n            pre[tt[j]*2]--;\n        }\n        for(int j=1;j<=2*N-2;j++){\n            pre[j]+=pre[j-1];\n            if(pre[j]>0)a[j]++;\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=2*N-2;i++)ans=max(ans,a[i]);\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}","source":"_posts/AtCoder Beginner Contest 080 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 080 心得\ndate: 2017-12-11 16:09:24\ncategory: Atcoder\ntags: \n- Atcoder\n- 基礎\n- 枚舉\n- 狀態壓縮\n- 離散化\n---\n這場比賽打得平平，卡在pC太久了，直到賽後才發現是ans變數要設小一點才AC。\n結果:\nA 基礎 AC\nB 基礎 AC\nC 枚舉+狀態壓縮 賽後AC\nD 離散化 賽後AC\n\npA\n比較哪個比較大\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b,k;\n    cin>>a>>b>>k;\n    cout<<min(a*b,k)<<'\\n';\n}\n\n{% endcodeblock %}\n\npB\n照定義求出f(x)再看看是不是x的因數\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint f(int n){\n    int ans=0;\n    while(n){\n        ans+=n%10;\n        n/=10;\n    }\n    return ans;\n}\n \nint main(){\n    int n,m;\n    cin>>n;\n    if(n%f(n)==0){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}\n\npC\n枚舉每種可能，算出對大的利益。這裡我用狀態壓縮，有一種寫法是用函數DFS每一時段開不開店。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=105;\nconst int M=15;\nlong long int n,f[N][M],p[N][M],x,ans=-1000000000,c[N];\n \nint main(){\n    bool b=0;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        for(int j=0;j<10;j++){\n            cin>>f[i][j];\n        }\n    }\n    for(int i=0;i<n;i++){\n        for(int j=0;j<11;j++){\n            cin>>p[i][j];\n        }\n    }\n    for(int i=1;i<(1<<10);i++){\n        memset(c,0,sizeof(c));\n        x=0;\n        for(int j=0;j<=9;j++){\n            if((1<<j)&i){\n                for(int k=0;k<n;k++){\n                    c[k]+=f[k][j];\n                }\n            }\n        }\n        for(int j=0;j<n;j++){\n//            cout<<j<<' '<<c[j]<<'\\n';\n            x+=p[j][c[j]];\n        }\n//        cout<<i<<' '<<x<<'\\n';\n        ans=max(ans,x);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n首先，對每一個頻道分開看，看該頻道所佔有的時間，之後再看哪個時間的所需用頻道數最多，即為答案。\n13,14行:因為一開始錄之前0.5就要固定頻道，所以我們把時間軸拉長2倍，將開始時間-1來處理。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=100001;\nint n,c,ss[N],tt[N],cc[N],pre[2*N],a[2*N];\nint main(){\n    cin>>n>>c;\n    for(int i=0;i<n;i++){\n        cin>>ss[i]>>tt[i]>>cc[i];\n    }\n    memset(a,0,sizeof(a));\n    for(int i=1;i<=c;i++){\n        memset(pre,0,sizeof(pre));\n        for(int j=0;j<n;j++){\n            if(cc[j]!=i)continue;\n            pre[ss[j]*2-1]++;\n            pre[tt[j]*2]--;\n        }\n        for(int j=1;j<=2*N-2;j++){\n            pre[j]+=pre[j-1];\n            if(pre[j]>0)a[j]++;\n        }\n    }\n    int ans=0;\n    for(int i=1;i<=2*N-2;i++)ans=max(ans,a[i]);\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}","slug":"AtCoder Beginner Contest 080 心得","published":1,"updated":"2019-01-21T02:30:54.765Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5saj0002hwu41roaqexd","content":"<p>這場比賽打得平平，卡在pC太久了，直到賽後才發現是ans變數要設小一點才AC。<br>結果:<br>A 基礎 AC<br>B 基礎 AC<br>C 枚舉+狀態壓縮 賽後AC<br>D 離散化 賽後AC</p>\n<p>pA<br>比較哪個比較大<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;min(a*b,k)&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>pB<br>照定義求出f(x)再看看是不是x的因數<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        ans+=n%<span class=\"number\">10</span>;</span><br><span class=\"line\">        n/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n%f(n)==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>枚舉每種可能，算出對大的利益。這裡我用狀態壓縮，有一種寫法是用函數DFS每一時段開不開店。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M=<span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> n,f[N][M],p[N][M],x,ans=<span class=\"number\">-1000000000</span>,c[N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> b=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;f[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">11</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;p[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c));</span><br><span class=\"line\">        x=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=<span class=\"number\">9</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((<span class=\"number\">1</span>&lt;&lt;j)&amp;i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)&#123;</span><br><span class=\"line\">                    c[k]+=f[k][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\"><span class=\"comment\">//            cout&lt;&lt;j&lt;&lt;' '&lt;&lt;c[j]&lt;&lt;'\\n';</span></span><br><span class=\"line\">            x+=p[j][c[j]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        cout&lt;&lt;i&lt;&lt;' '&lt;&lt;x&lt;&lt;'\\n';</span></span><br><span class=\"line\">        ans=max(ans,x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>首先，對每一個頻道分開看，看該頻道所佔有的時間，之後再看哪個時間的所需用頻道數最多，即為答案。<br>13,14行:因為一開始錄之前0.5就要固定頻道，所以我們把時間軸拉長2倍，將開始時間-1來處理。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">100001</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,c,ss[N],tt[N],cc[N],pre[<span class=\"number\">2</span>*N],a[<span class=\"number\">2</span>*N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;ss[i]&gt;&gt;tt[i]&gt;&gt;cc[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=c;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(pre,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pre));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cc[j]!=i)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            pre[ss[j]*<span class=\"number\">2</span><span class=\"number\">-1</span>]++;</span><br><span class=\"line\">            pre[tt[j]*<span class=\"number\">2</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=<span class=\"number\">2</span>*N<span class=\"number\">-2</span>;j++)&#123;</span><br><span class=\"line\">            pre[j]+=pre[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pre[j]&gt;<span class=\"number\">0</span>)a[j]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">2</span>*N<span class=\"number\">-2</span>;i++)ans=max(ans,a[i]);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這場比賽打得平平，卡在pC太久了，直到賽後才發現是ans變數要設小一點才AC。<br>結果:<br>A 基礎 AC<br>B 基礎 AC<br>C 枚舉+狀態壓縮 賽後AC<br>D 離散化 賽後AC</p>\n<p>pA<br>比較哪個比較大<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,k;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;k;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;min(a*b,k)&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure></p>\n<p>pB<br>照定義求出f(x)再看看是不是x的因數<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">f</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        ans+=n%<span class=\"number\">10</span>;</span><br><span class=\"line\">        n/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(n%f(n)==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>枚舉每種可能，算出對大的利益。這裡我用狀態壓縮，有一種寫法是用函數DFS每一時段開不開店。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M=<span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> n,f[N][M],p[N][M],x,ans=<span class=\"number\">-1000000000</span>,c[N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> b=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">10</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;f[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">11</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;p[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;(<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">10</span>);i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(c));</span><br><span class=\"line\">        x=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=<span class=\"number\">9</span>;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((<span class=\"number\">1</span>&lt;&lt;j)&amp;i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;n;k++)&#123;</span><br><span class=\"line\">                    c[k]+=f[k][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\"><span class=\"comment\">//            cout&lt;&lt;j&lt;&lt;' '&lt;&lt;c[j]&lt;&lt;'\\n';</span></span><br><span class=\"line\">            x+=p[j][c[j]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        cout&lt;&lt;i&lt;&lt;' '&lt;&lt;x&lt;&lt;'\\n';</span></span><br><span class=\"line\">        ans=max(ans,x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>首先，對每一個頻道分開看，看該頻道所佔有的時間，之後再看哪個時間的所需用頻道數最多，即為答案。<br>13,14行:因為一開始錄之前0.5就要固定頻道，所以我們把時間軸拉長2倍，將開始時間-1來處理。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">100001</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,c,ss[N],tt[N],cc[N],pre[<span class=\"number\">2</span>*N],a[<span class=\"number\">2</span>*N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;ss[i]&gt;&gt;tt[i]&gt;&gt;cc[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(a,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(a));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=c;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(pre,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(pre));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;n;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cc[j]!=i)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            pre[ss[j]*<span class=\"number\">2</span><span class=\"number\">-1</span>]++;</span><br><span class=\"line\">            pre[tt[j]*<span class=\"number\">2</span>]--;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=<span class=\"number\">2</span>*N<span class=\"number\">-2</span>;j++)&#123;</span><br><span class=\"line\">            pre[j]+=pre[j<span class=\"number\">-1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(pre[j]&gt;<span class=\"number\">0</span>)a[j]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">2</span>*N<span class=\"number\">-2</span>;i++)ans=max(ans,a[i]);</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 082 心得","date":"2017-12-17T11:52:03.000Z","_content":"這次的難度老實說比上次簡單，但最後一題一直有bug所以解不出來，賽後詢問才發現。\nA 基礎 AC\nB algorithm函式庫 AC\nC 基礎 AC\nD DP 賽後AC\n\npA\n這題要把兩個數平均在四捨五入，直接把兩數相加再加1然後除以2就可以得到答案了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b+1)/2<<'\\n';\n}\n{% endcodeblock %}\n\npB\n這題要把第一個字串由a到z排，第二個字串由z到a排，然後比較大小。\n我的辦法是用sort排過，把第二個字串用reverse顛倒，在比大小就AC了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    string a,b;\n    cin>>a>>b;\n    sort(a.begin(),a.end());\n    sort(b.begin(),b.end());\n    reverse(b.begin(),b.end());\n    if(a<b){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}\n\npC\n這題是要讓數字x在數列中剛好出現x次，如果不符合，就把一些數移除，問最少要移除多少次。\n我的作法是先sort一遍，在一一記數，如果x出現小於x次，就移除全部的x，否則就把x個x保留，移除多餘的X。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,x;\n    vector<int>v;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>x;\n        v.push_back(x);\n    }\n    sort(v.begin(),v.end());\n    int ans=0,tmp=v[0],c=1;\n    for(int i=1;i<v.size();i++){\n        if(v[i]==v[i-1])c++;\n        else{\n            if(c!=tmp){\n                ans+=(c>tmp?c-tmp:c);\n            }\n            tmp=v[i];\n            c=1;\n        }\n    }\n    if(c!=tmp){\n            ans+=(c>tmp?c-tmp:c);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n有一個機器人接受兩種命令，T和F\nT:轉向90度，順時或逆時皆可。\nF:往目前方向前進一步\n一開始的位置在(0,0)並且面對+x方向\n給定命令串s及x,y\n問你可不可以走到(x,y)\n我的做法是分別對x/y方向做背包dp，看看能不能走到x/y的位置，但要注意一開始第一次一定是朝+x方向，不可加入dp中(我就是卡在這裡QQ)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    string s;\n    int x,y;\n    cin>>s>>x>>y;\n    vector<int>a,b;\n    bool isx=1;\n    int c=0;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='F'){\n            c++;\n        }else{\n            if(isx){\n                a.push_back(c);\n            }else{\n                b.push_back(c);\n            }\n            c=0;\n            isx=(!isx);\n        }\n    }\n    if(s[s.size()-1]=='F'){\n        if(isx){\n            a.push_back(c);\n        }else{\n            b.push_back(c);\n        }\n    }\n    const int N=8005;\n    bool dpa[N]={1},dpb[N]={1};\n    int suma=0,sumb=0;\n    for(int i=1;i<a.size();i++){\n        suma+=a[i];\n        for(int j=suma;j-a[i]>=0;j--){\n            if(dpa[j-a[i]])dpa[j]=1;\n        }\n    }\n    for(int i=0;i<b.size();i++){\n        sumb+=b[i];\n        for(int j=sumb;j-b[i]>=0;j--){\n            if(dpb[j-b[i]])dpb[j]=1;\n        }\n    }\n    x=abs(x-a[0]);\n    y=abs(y);\n    if((suma>=x&&sumb>=y)&&(((suma-x)%2==0&&dpa[(suma-x)/2]))&&(((sumb-y)%2==0&&dpb[(sumb-y)/2]))){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}","source":"_posts/AtCoder Beginner Contest 082 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 082 心得\ndate: 2017-12-17 19:52:03\ncategory: Atcoder\ntags:\n- Atcoder\n- 基礎\n- algorithm\n- dp\n---\n這次的難度老實說比上次簡單，但最後一題一直有bug所以解不出來，賽後詢問才發現。\nA 基礎 AC\nB algorithm函式庫 AC\nC 基礎 AC\nD DP 賽後AC\n\npA\n這題要把兩個數平均在四捨五入，直接把兩數相加再加1然後除以2就可以得到答案了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b;\n    cin>>a>>b;\n    cout<<(a+b+1)/2<<'\\n';\n}\n{% endcodeblock %}\n\npB\n這題要把第一個字串由a到z排，第二個字串由z到a排，然後比較大小。\n我的辦法是用sort排過，把第二個字串用reverse顛倒，在比大小就AC了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    string a,b;\n    cin>>a>>b;\n    sort(a.begin(),a.end());\n    sort(b.begin(),b.end());\n    reverse(b.begin(),b.end());\n    if(a<b){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}\n\npC\n這題是要讓數字x在數列中剛好出現x次，如果不符合，就把一些數移除，問最少要移除多少次。\n我的作法是先sort一遍，在一一記數，如果x出現小於x次，就移除全部的x，否則就把x個x保留，移除多餘的X。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int n,x;\n    vector<int>v;\n    cin>>n;\n    for(int i=0;i<n;i++){\n        cin>>x;\n        v.push_back(x);\n    }\n    sort(v.begin(),v.end());\n    int ans=0,tmp=v[0],c=1;\n    for(int i=1;i<v.size();i++){\n        if(v[i]==v[i-1])c++;\n        else{\n            if(c!=tmp){\n                ans+=(c>tmp?c-tmp:c);\n            }\n            tmp=v[i];\n            c=1;\n        }\n    }\n    if(c!=tmp){\n            ans+=(c>tmp?c-tmp:c);\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n\npD\n有一個機器人接受兩種命令，T和F\nT:轉向90度，順時或逆時皆可。\nF:往目前方向前進一步\n一開始的位置在(0,0)並且面對+x方向\n給定命令串s及x,y\n問你可不可以走到(x,y)\n我的做法是分別對x/y方向做背包dp，看看能不能走到x/y的位置，但要注意一開始第一次一定是朝+x方向，不可加入dp中(我就是卡在這裡QQ)。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    string s;\n    int x,y;\n    cin>>s>>x>>y;\n    vector<int>a,b;\n    bool isx=1;\n    int c=0;\n    for(int i=0;i<s.size();i++){\n        if(s[i]=='F'){\n            c++;\n        }else{\n            if(isx){\n                a.push_back(c);\n            }else{\n                b.push_back(c);\n            }\n            c=0;\n            isx=(!isx);\n        }\n    }\n    if(s[s.size()-1]=='F'){\n        if(isx){\n            a.push_back(c);\n        }else{\n            b.push_back(c);\n        }\n    }\n    const int N=8005;\n    bool dpa[N]={1},dpb[N]={1};\n    int suma=0,sumb=0;\n    for(int i=1;i<a.size();i++){\n        suma+=a[i];\n        for(int j=suma;j-a[i]>=0;j--){\n            if(dpa[j-a[i]])dpa[j]=1;\n        }\n    }\n    for(int i=0;i<b.size();i++){\n        sumb+=b[i];\n        for(int j=sumb;j-b[i]>=0;j--){\n            if(dpb[j-b[i]])dpb[j]=1;\n        }\n    }\n    x=abs(x-a[0]);\n    y=abs(y);\n    if((suma>=x&&sumb>=y)&&(((suma-x)%2==0&&dpa[(suma-x)/2]))&&(((sumb-y)%2==0&&dpb[(sumb-y)/2]))){\n        cout<<\"Yes\\n\";\n    }else{\n        cout<<\"No\\n\";\n    }\n}\n{% endcodeblock %}","slug":"AtCoder Beginner Contest 082 心得","published":1,"updated":"2019-01-21T02:30:54.769Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sak0003hwu4ywtmcrzz","content":"<p>這次的難度老實說比上次簡單，但最後一題一直有bug所以解不出來，賽後詢問才發現。<br>A 基礎 AC<br>B algorithm函式庫 AC<br>C 基礎 AC<br>D DP 賽後AC</p>\n<p>pA<br>這題要把兩個數平均在四捨五入，直接把兩數相加再加1然後除以2就可以得到答案了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;(a+b+<span class=\"number\">1</span>)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pB<br>這題要把第一個字串由a到z排，第二個字串由z到a排，然後比較大小。<br>我的辦法是用sort排過，把第二個字串用reverse顛倒，在比大小就AC了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    sort(a.begin(),a.end());</span><br><span class=\"line\">    sort(b.begin(),b.end());</span><br><span class=\"line\">    reverse(b.begin(),b.end());</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;b)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>這題是要讓數字x在數列中剛好出現x次，如果不符合，就把一些數移除，問最少要移除多少次。<br>我的作法是先sort一遍，在一一記數，如果x出現小於x次，就移除全部的x，否則就把x個x保留，移除多餘的X。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        v.push_back(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(v.begin(),v.end());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>,tmp=v[<span class=\"number\">0</span>],c=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;v.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v[i]==v[i<span class=\"number\">-1</span>])c++;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c!=tmp)&#123;</span><br><span class=\"line\">                ans+=(c&gt;tmp?c-tmp:c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            tmp=v[i];</span><br><span class=\"line\">            c=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(c!=tmp)&#123;</span><br><span class=\"line\">            ans+=(c&gt;tmp?c-tmp:c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>有一個機器人接受兩種命令，T和F<br>T:轉向90度，順時或逆時皆可。<br>F:往目前方向前進一步<br>一開始的位置在(0,0)並且面對+x方向<br>給定命令串s及x,y<br>問你可不可以走到(x,y)<br>我的做法是分別對x/y方向做背包dp，看看能不能走到x/y的位置，但要注意一開始第一次一定是朝+x方向，不可加入dp中(我就是卡在這裡QQ)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;s&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a,b;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> isx=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i]==<span class=\"string\">'F'</span>)&#123;</span><br><span class=\"line\">            c++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isx)&#123;</span><br><span class=\"line\">                a.push_back(c);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                b.push_back(c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c=<span class=\"number\">0</span>;</span><br><span class=\"line\">            isx=(!isx);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s[s.size()<span class=\"number\">-1</span>]==<span class=\"string\">'F'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isx)&#123;</span><br><span class=\"line\">            a.push_back(c);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            b.push_back(c);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">8005</span>;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> dpa[N]=&#123;<span class=\"number\">1</span>&#125;,dpb[N]=&#123;<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> suma=<span class=\"number\">0</span>,sumb=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;a.size();i++)&#123;</span><br><span class=\"line\">        suma+=a[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=suma;j-a[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dpa[j-a[i]])dpa[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;b.size();i++)&#123;</span><br><span class=\"line\">        sumb+=b[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=sumb;j-b[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dpb[j-b[i]])dpb[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    x=<span class=\"built_in\">abs</span>(x-a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    y=<span class=\"built_in\">abs</span>(y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((suma&gt;=x&amp;&amp;sumb&gt;=y)&amp;&amp;(((suma-x)%<span class=\"number\">2</span>==<span class=\"number\">0</span>&amp;&amp;dpa[(suma-x)/<span class=\"number\">2</span>]))&amp;&amp;(((sumb-y)%<span class=\"number\">2</span>==<span class=\"number\">0</span>&amp;&amp;dpb[(sumb-y)/<span class=\"number\">2</span>])))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這次的難度老實說比上次簡單，但最後一題一直有bug所以解不出來，賽後詢問才發現。<br>A 基礎 AC<br>B algorithm函式庫 AC<br>C 基礎 AC<br>D DP 賽後AC</p>\n<p>pA<br>這題要把兩個數平均在四捨五入，直接把兩數相加再加1然後除以2就可以得到答案了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;(a+b+<span class=\"number\">1</span>)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pB<br>這題要把第一個字串由a到z排，第二個字串由z到a排，然後比較大小。<br>我的辦法是用sort排過，把第二個字串用reverse顛倒，在比大小就AC了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> a,b;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    sort(a.begin(),a.end());</span><br><span class=\"line\">    sort(b.begin(),b.end());</span><br><span class=\"line\">    reverse(b.begin(),b.end());</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&lt;b)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pC<br>這題是要讓數字x在數列中剛好出現x次，如果不符合，就把一些數移除，問最少要移除多少次。<br>我的作法是先sort一遍，在一一記數，如果x出現小於x次，就移除全部的x，否則就把x個x保留，移除多餘的X。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;v;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">        v.push_back(x);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(v.begin(),v.end());</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>,tmp=v[<span class=\"number\">0</span>],c=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;v.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v[i]==v[i<span class=\"number\">-1</span>])c++;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c!=tmp)&#123;</span><br><span class=\"line\">                ans+=(c&gt;tmp?c-tmp:c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            tmp=v[i];</span><br><span class=\"line\">            c=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(c!=tmp)&#123;</span><br><span class=\"line\">            ans+=(c&gt;tmp?c-tmp:c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>pD<br>有一個機器人接受兩種命令，T和F<br>T:轉向90度，順時或逆時皆可。<br>F:往目前方向前進一步<br>一開始的位置在(0,0)並且面對+x方向<br>給定命令串s及x,y<br>問你可不可以走到(x,y)<br>我的做法是分別對x/y方向做背包dp，看看能不能走到x/y的位置，但要注意一開始第一次一定是朝+x方向，不可加入dp中(我就是卡在這裡QQ)。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;s&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">    <span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt;a,b;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> isx=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> c=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i]==<span class=\"string\">'F'</span>)&#123;</span><br><span class=\"line\">            c++;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(isx)&#123;</span><br><span class=\"line\">                a.push_back(c);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                b.push_back(c);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            c=<span class=\"number\">0</span>;</span><br><span class=\"line\">            isx=(!isx);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s[s.size()<span class=\"number\">-1</span>]==<span class=\"string\">'F'</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(isx)&#123;</span><br><span class=\"line\">            a.push_back(c);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            b.push_back(c);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">8005</span>;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> dpa[N]=&#123;<span class=\"number\">1</span>&#125;,dpb[N]=&#123;<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> suma=<span class=\"number\">0</span>,sumb=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;a.size();i++)&#123;</span><br><span class=\"line\">        suma+=a[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=suma;j-a[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dpa[j-a[i]])dpa[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;b.size();i++)&#123;</span><br><span class=\"line\">        sumb+=b[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=sumb;j-b[i]&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dpb[j-b[i]])dpb[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    x=<span class=\"built_in\">abs</span>(x-a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    y=<span class=\"built_in\">abs</span>(y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((suma&gt;=x&amp;&amp;sumb&gt;=y)&amp;&amp;(((suma-x)%<span class=\"number\">2</span>==<span class=\"number\">0</span>&amp;&amp;dpa[(suma-x)/<span class=\"number\">2</span>]))&amp;&amp;(((sumb-y)%<span class=\"number\">2</span>==<span class=\"number\">0</span>&amp;&amp;dpb[(sumb-y)/<span class=\"number\">2</span>])))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Yes\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"No\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 083 心得","date":"2017-12-24T00:41:35.000Z","_content":"這次的題目算簡單，第四題賽中我想到的解法已經很靠近答案了，但後來沒解出來。\nA 基礎 AC\nB 基礎 AC\nC 基礎 AC\nD 基礎 賽後AC\npA\n比較a*b和c*d的大小\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b,c,d;\n    cin>>a>>b>>c>>d;\n    a+=b;\n    c+=d;\n    if(a==c){\n        cout<<\"Balanced\\n\";\n    }else if(a>c){\n        cout<<\"Left\\n\";\n    }else{\n        cout<<\"Right\\n\";\n    }\n}\n{% endcodeblock %}\npB\n這題就照題目給的去做就可以了\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint sod(int x){\n    int v=0;\n    while(x){\n        v+=x%10;\n        x/=10;\n    }\n    return v;\n}\n \nint main(){\n    int n,a,b,ans=0,v;\n    cin>>n>>a>>b;\n    for(int i=1;i<=n;i++){\n        v=sod(i);\n        if(v>=a&&v<=b)ans+=i;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\npC\n題目要求找出一個最長序列A，裡面的數介於[x,y]，且每個數都要是前面所有數的倍數(不能一樣)。\n要讓A裡面放越多，所乘的倍數要越小，2是題目所給的條件內最好的數字，所以一直讓x*2，直到x>y時結束即可。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    unsigned long long x,y,ans=0;\n    cin>>x>>y;\n    while(x<=y){\n        ans++;\n        x*=2;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\npD\n給你一串為由0和1組成的字串，找一段連續區間，將0變成1，1變成0，問你選取的區間長度的最大最小值。\n如果相鄰兩數字不一樣，那勢必有一邊要換，所以要找出不一樣的地方，它們之間較大的那一條(先把它們全部變成1在一次轉換也是一種方法)，然後再取最小值就是答案。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    string s;\n    cin>>s;\n    int ans=s.size();\n    for(int i=1;i<s.size();i++){\n        if(s[i]!=s[i-1]){\n           ans=min(ans,max(i,int(s.size()-i)));\n        }\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}","source":"_posts/AtCoder Beginner Contest 083 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 083 心得\ndate: 2017-12-24 08:41:35\ncategory: Atcoder\ntags:\n- Atcoder\n- 基礎\n---\n這次的題目算簡單，第四題賽中我想到的解法已經很靠近答案了，但後來沒解出來。\nA 基礎 AC\nB 基礎 AC\nC 基礎 AC\nD 基礎 賽後AC\npA\n比較a*b和c*d的大小\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint main(){\n    int a,b,c,d;\n    cin>>a>>b>>c>>d;\n    a+=b;\n    c+=d;\n    if(a==c){\n        cout<<\"Balanced\\n\";\n    }else if(a>c){\n        cout<<\"Left\\n\";\n    }else{\n        cout<<\"Right\\n\";\n    }\n}\n{% endcodeblock %}\npB\n這題就照題目給的去做就可以了\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n \nint sod(int x){\n    int v=0;\n    while(x){\n        v+=x%10;\n        x/=10;\n    }\n    return v;\n}\n \nint main(){\n    int n,a,b,ans=0,v;\n    cin>>n>>a>>b;\n    for(int i=1;i<=n;i++){\n        v=sod(i);\n        if(v>=a&&v<=b)ans+=i;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\npC\n題目要求找出一個最長序列A，裡面的數介於[x,y]，且每個數都要是前面所有數的倍數(不能一樣)。\n要讓A裡面放越多，所乘的倍數要越小，2是題目所給的條件內最好的數字，所以一直讓x*2，直到x>y時結束即可。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    unsigned long long x,y,ans=0;\n    cin>>x>>y;\n    while(x<=y){\n        ans++;\n        x*=2;\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\npD\n給你一串為由0和1組成的字串，找一段連續區間，將0變成1，1變成0，問你選取的區間長度的最大最小值。\n如果相鄰兩數字不一樣，那勢必有一邊要換，所以要找出不一樣的地方，它們之間較大的那一條(先把它們全部變成1在一次轉換也是一種方法)，然後再取最小值就是答案。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    string s;\n    cin>>s;\n    int ans=s.size();\n    for(int i=1;i<s.size();i++){\n        if(s[i]!=s[i-1]){\n           ans=min(ans,max(i,int(s.size()-i)));\n        }\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}","slug":"AtCoder Beginner Contest 083 心得","published":1,"updated":"2019-01-21T02:30:54.771Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sal0004hwu4nw9173r6","content":"<p>這次的題目算簡單，第四題賽中我想到的解法已經很靠近答案了，但後來沒解出來。<br>A 基礎 AC<br>B 基礎 AC<br>C 基礎 AC<br>D 基礎 賽後AC<br>pA<br>比較a<em>b和c</em>d的大小<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c,d;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class=\"line\">    a+=b;</span><br><span class=\"line\">    c+=d;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a==c)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Balanced\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;c)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Left\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Right\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB<br>這題就照題目給的去做就可以了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sod</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x)&#123;</span><br><span class=\"line\">        v+=x%<span class=\"number\">10</span>;</span><br><span class=\"line\">        x/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,a,b,ans=<span class=\"number\">0</span>,v;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        v=sod(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v&gt;=a&amp;&amp;v&lt;=b)ans+=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pC<br>題目要求找出一個最長序列A，裡面的數介於[x,y]，且每個數都要是前面所有數的倍數(不能一樣)。<br>要讓A裡面放越多，所乘的倍數要越小，2是題目所給的條件內最好的數字，所以一直讓x*2，直到x&gt;y時結束即可。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,y,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x&lt;=y)&#123;</span><br><span class=\"line\">        ans++;</span><br><span class=\"line\">        x*=<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pD<br>給你一串為由0和1組成的字串，找一段連續區間，將0變成1，1變成0，問你選取的區間長度的最大最小值。<br>如果相鄰兩數字不一樣，那勢必有一邊要換，所以要找出不一樣的地方，它們之間較大的那一條(先把它們全部變成1在一次轉換也是一種方法)，然後再取最小值就是答案。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=s.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i]!=s[i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">           ans=min(ans,max(i,<span class=\"keyword\">int</span>(s.size()-i)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這次的題目算簡單，第四題賽中我想到的解法已經很靠近答案了，但後來沒解出來。<br>A 基礎 AC<br>B 基礎 AC<br>C 基礎 AC<br>D 基礎 賽後AC<br>pA<br>比較a<em>b和c</em>d的大小<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c,d;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;</span><br><span class=\"line\">    a+=b;</span><br><span class=\"line\">    c+=d;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a==c)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Balanced\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a&gt;c)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Left\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"Right\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB<br>這題就照題目給的去做就可以了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sod</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x)&#123;</span><br><span class=\"line\">        v+=x%<span class=\"number\">10</span>;</span><br><span class=\"line\">        x/=<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,a,b,ans=<span class=\"number\">0</span>,v;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;i++)&#123;</span><br><span class=\"line\">        v=sod(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v&gt;=a&amp;&amp;v&lt;=b)ans+=i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pC<br>題目要求找出一個最長序列A，裡面的數介於[x,y]，且每個數都要是前面所有數的倍數(不能一樣)。<br>要讓A裡面放越多，所乘的倍數要越小，2是題目所給的條件內最好的數字，所以一直讓x*2，直到x&gt;y時結束即可。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,y,ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(x&lt;=y)&#123;</span><br><span class=\"line\">        ans++;</span><br><span class=\"line\">        x*=<span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pD<br>給你一串為由0和1組成的字串，找一段連續區間，將0變成1，1變成0，問你選取的區間長度的最大最小值。<br>如果相鄰兩數字不一樣，那勢必有一邊要換，所以要找出不一樣的地方，它們之間較大的那一條(先把它們全部變成1在一次轉換也是一種方法)，然後再取最小值就是答案。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;s;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=s.size();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(s[i]!=s[i<span class=\"number\">-1</span>])&#123;</span><br><span class=\"line\">           ans=min(ans,max(i,<span class=\"keyword\">int</span>(s.size()-i)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"AtCoder Beginner Contest 107 心得","date":"2018-10-24T14:12:00.000Z","_content":"這場很久以前打的，只是都沒時間整理，PD是賽後AC的，這題值得好好思考。\n\nPA水題，有N節車廂，從前看是M節，從後看是第X節，X+M=N+1，故X=N-M+1。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\n \nint main(){\n\tint n,m;\n\twhile(cin>>n>>m){\n\t\tcout<<n-m+1<<'\\n';\n\t}\n}\n{% endcodeblock %}\n\nPB，把只有`.`的行列刪掉，用陣列紀錄是不是只有`.`，最後輸出跳過這些行列就好了。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\nconst int N = 105;\n \nint main() {\n\tint n, m, r[N] = {}, c[N] = {};\n\tstring s[N];\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s[i];\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (s[i][j] == '#') {\n\t\t\t\tr[i]++;\n\t\t\t\tc[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (!r[i])continue;\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (!c[j])continue;\n\t\t\tcout << s[i][j];\n\t\t}\n\t\tcout << '\\n';\n\t}\n}\n{% endcodeblock %}\n\nPC枚舉範圍，要點的蠟燭要是連續才會有最小時間。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\n \nint main() {\n\tint n, m;\n\tlong long a[N], ans = 10000000000;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tif (a[i] <= 0 && 0 <= a[i + m - 1]) {\n\t\t\tans = min(ans, 2 * (a[i + m - 1] - a[i]) - max(-a[i], a[i + m - 1]));\n\t\t} else {\n\t\t\tans = min(ans, max(abs(a[i + m - 1]), abs(a[i])));\n\t\t}\n\t\t// cout << i << ' ' << ans << '\\n';\n\t}\n\tcout << ans << '\\n';\n}\n{% endcodeblock %}\nPD這題我還不太了解為什麼可以這樣轉，詳情可見這篇 https://blog.csdn.net/qq_31645627/article/details/82113914 ，之後我會再補解釋。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\ntypedef long long LL;\n#define lowbit(x) (x&(-x))\nLL n;\nLL a[N], b[N], bit[4 * N];\n \nvoid add(LL x, LL val) {\n\tx += n + 1;\n\tfor (; x <= 2 * n + 1; x += lowbit(x)) {\n\t\tbit[x] += val;\n\t}\n}\n \nLL sum(LL x) {\n\tLL val = 0;\n\tx += n + 1;\n\tfor (; x > 0; x -= lowbit(x)) {\n\t\tval += bit[x];\n\t}\n\treturn val;\n}\n \nLL sol(LL x) {\n\tLL tmp = 0, ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] <= x) {\n\t\t\ttmp++;\n\t\t} else {\n\t\t\ttmp--;\n\t\t}\n\t\tans += sum(tmp - 1);\n\t\tadd(tmp, 1);\n\t}\n\ttmp = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] <= x) {\n\t\t\ttmp++;\n\t\t} else {\n\t\t\ttmp--;\n\t\t}\n\t\tadd(tmp, -1);\n\t}\n\treturn ans;\n}\n \nint main(int argc, char const *argv[]) {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tb[i] = a[i];\n\t}\n\tmemset(bit, 0, sizeof(bit));\n\tsort(b, b + n);\n\tLL nn = unique(b + 1, b + 1 + n) - b - 1;\n\tLL L = 1, R = nn, M, ans;\n\tLL tar = (n * (n + 1) / 2) / 2 + 1;\n\tadd(0, 1);\n\twhile (L <= R) {\n\t\tM = (L + R) >> 1;\n\t\tLL res = sol(b[M]);\n\t\tif (res >= tar) {\n\t\t\tans = b[M];\n\t\t\tR = M - 1;\n\t\t} else {\n\t\t\tL = M + 1;\n\t\t}\n\t}\n\tcout << ans << '\\n';\n\treturn 0;\n}\n{% endcodeblock %}\n","source":"_posts/AtCoder Beginner Contest 107 心得.md","raw":"<!-- layout: layout -->\ntitle: AtCoder Beginner Contest 107 心得\ndate: 2018-10-24 22:12:00\ncategory: Atcoder\ntags:\n- Atcoder\n---\n這場很久以前打的，只是都沒時間整理，PD是賽後AC的，這題值得好好思考。\n\nPA水題，有N節車廂，從前看是M節，從後看是第X節，X+M=N+1，故X=N-M+1。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\n \nint main(){\n\tint n,m;\n\twhile(cin>>n>>m){\n\t\tcout<<n-m+1<<'\\n';\n\t}\n}\n{% endcodeblock %}\n\nPB，把只有`.`的行列刪掉，用陣列紀錄是不是只有`.`，最後輸出跳過這些行列就好了。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\nconst int N = 105;\n \nint main() {\n\tint n, m, r[N] = {}, c[N] = {};\n\tstring s[N];\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> s[i];\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (s[i][j] == '#') {\n\t\t\t\tr[i]++;\n\t\t\t\tc[j]++;\n\t\t\t}\n\t\t}\n\t}\n\tfor (int i = 0; i < n; i++) {\n\t\tif (!r[i])continue;\n\t\tfor (int j = 0; j < m; j++) {\n\t\t\tif (!c[j])continue;\n\t\t\tcout << s[i][j];\n\t\t}\n\t\tcout << '\\n';\n\t}\n}\n{% endcodeblock %}\n\nPC枚舉範圍，要點的蠟燭要是連續才會有最小時間。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\n \nint main() {\n\tint n, m;\n\tlong long a[N], ans = 10000000000;\n\tcin >> n >> m;\n\tfor (int i = 0; i < n; i++) {\n\t\tcin >> a[i];\n\t}\n\tfor (int i = 0; i + m <= n; i++) {\n\t\tif (a[i] <= 0 && 0 <= a[i + m - 1]) {\n\t\t\tans = min(ans, 2 * (a[i + m - 1] - a[i]) - max(-a[i], a[i + m - 1]));\n\t\t} else {\n\t\t\tans = min(ans, max(abs(a[i + m - 1]), abs(a[i])));\n\t\t}\n\t\t// cout << i << ' ' << ans << '\\n';\n\t}\n\tcout << ans << '\\n';\n}\n{% endcodeblock %}\nPD這題我還不太了解為什麼可以這樣轉，詳情可見這篇 https://blog.csdn.net/qq_31645627/article/details/82113914 ，之後我會再補解釋。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 100005;\ntypedef long long LL;\n#define lowbit(x) (x&(-x))\nLL n;\nLL a[N], b[N], bit[4 * N];\n \nvoid add(LL x, LL val) {\n\tx += n + 1;\n\tfor (; x <= 2 * n + 1; x += lowbit(x)) {\n\t\tbit[x] += val;\n\t}\n}\n \nLL sum(LL x) {\n\tLL val = 0;\n\tx += n + 1;\n\tfor (; x > 0; x -= lowbit(x)) {\n\t\tval += bit[x];\n\t}\n\treturn val;\n}\n \nLL sol(LL x) {\n\tLL tmp = 0, ans = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] <= x) {\n\t\t\ttmp++;\n\t\t} else {\n\t\t\ttmp--;\n\t\t}\n\t\tans += sum(tmp - 1);\n\t\tadd(tmp, 1);\n\t}\n\ttmp = 0;\n\tfor (int i = 1; i <= n; i++) {\n\t\tif (a[i] <= x) {\n\t\t\ttmp++;\n\t\t} else {\n\t\t\ttmp--;\n\t\t}\n\t\tadd(tmp, -1);\n\t}\n\treturn ans;\n}\n \nint main(int argc, char const *argv[]) {\n\tcin >> n;\n\tfor (int i = 1; i <= n; i++) {\n\t\tcin >> a[i];\n\t\tb[i] = a[i];\n\t}\n\tmemset(bit, 0, sizeof(bit));\n\tsort(b, b + n);\n\tLL nn = unique(b + 1, b + 1 + n) - b - 1;\n\tLL L = 1, R = nn, M, ans;\n\tLL tar = (n * (n + 1) / 2) / 2 + 1;\n\tadd(0, 1);\n\twhile (L <= R) {\n\t\tM = (L + R) >> 1;\n\t\tLL res = sol(b[M]);\n\t\tif (res >= tar) {\n\t\t\tans = b[M];\n\t\t\tR = M - 1;\n\t\t} else {\n\t\t\tL = M + 1;\n\t\t}\n\t}\n\tcout << ans << '\\n';\n\treturn 0;\n}\n{% endcodeblock %}\n","slug":"AtCoder Beginner Contest 107 心得","published":1,"updated":"2019-01-21T02:30:54.773Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sam0005hwu49al6ka6s","content":"<p>這場很久以前打的，只是都沒時間整理，PD是賽後AC的，這題值得好好思考。</p>\n<p>PA水題，有N節車廂，從前看是M節，從後看是第X節，X+M=N+1，故X=N-M+1。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;n-m+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>PB，把只有<code>.</code>的行列刪掉，用陣列紀錄是不是只有<code>.</code>，最後輸出跳過這些行列就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">105</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m, r[N] = &#123;&#125;, c[N] = &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s[N];</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s[i][j] == <span class=\"string\">'#'</span>) &#123;</span><br><span class=\"line\">\t\t\t\tr[i]++;</span><br><span class=\"line\">\t\t\t\tc[j]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!r[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!c[j])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; s[i][j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>PC枚舉範圍，要點的蠟燭要是連續才會有最小時間。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100005</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[N], ans = <span class=\"number\">10000000000</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i + m &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"number\">0</span> &lt;= a[i + m - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">\t\t\tans = min(ans, <span class=\"number\">2</span> * (a[i + m - <span class=\"number\">1</span>] - a[i]) - max(-a[i], a[i + m - <span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans = min(ans, max(<span class=\"built_in\">abs</span>(a[i + m - <span class=\"number\">1</span>]), <span class=\"built_in\">abs</span>(a[i])));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; ans &lt;&lt; '\\n';</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>PD這題我還不太了解為什麼可以這樣轉，詳情可見這篇 <a href=\"https://blog.csdn.net/qq_31645627/article/details/82113914\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31645627/article/details/82113914</a> ，之後我會再補解釋。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lowbit(x) (x&amp;(-x))</span></span><br><span class=\"line\">LL n;</span><br><span class=\"line\">LL a[N], b[N], bit[<span class=\"number\">4</span> * N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(LL x, LL val)</span> </span>&#123;</span><br><span class=\"line\">\tx += n + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; x &lt;= <span class=\"number\">2</span> * n + <span class=\"number\">1</span>; x += lowbit(x)) &#123;</span><br><span class=\"line\">\t\tbit[x] += val;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">sum</span><span class=\"params\">(LL x)</span> </span>&#123;</span><br><span class=\"line\">\tLL val = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tx += n + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; x &gt; <span class=\"number\">0</span>; x -= lowbit(x)) &#123;</span><br><span class=\"line\">\t\tval += bit[x];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">sol</span><span class=\"params\">(LL x)</span> </span>&#123;</span><br><span class=\"line\">\tLL tmp = <span class=\"number\">0</span>, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= x) &#123;</span><br><span class=\"line\">\t\t\ttmp++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttmp--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans += sum(tmp - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tadd(tmp, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= x) &#123;</span><br><span class=\"line\">\t\t\ttmp++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttmp--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tadd(tmp, <span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">\t\tb[i] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(bit, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(bit));</span><br><span class=\"line\">\tsort(b, b + n);</span><br><span class=\"line\">\tLL nn = unique(b + <span class=\"number\">1</span>, b + <span class=\"number\">1</span> + n) - b - <span class=\"number\">1</span>;</span><br><span class=\"line\">\tLL L = <span class=\"number\">1</span>, R = nn, M, ans;</span><br><span class=\"line\">\tLL tar = (n * (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>) / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tadd(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (L &lt;= R) &#123;</span><br><span class=\"line\">\t\tM = (L + R) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tLL res = sol(b[M]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (res &gt;= tar) &#123;</span><br><span class=\"line\">\t\t\tans = b[M];</span><br><span class=\"line\">\t\t\tR = M - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tL = M + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>這場很久以前打的，只是都沒時間整理，PD是賽後AC的，這題值得好好思考。</p>\n<p>PA水題，有N節車廂，從前看是M節，從後看是第X節，X+M=N+1，故X=N-M+1。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span>&lt;&lt;n-m+<span class=\"number\">1</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>PB，把只有<code>.</code>的行列刪掉，用陣列紀錄是不是只有<code>.</code>，最後輸出跳過這些行列就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">105</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m, r[N] = &#123;&#125;, c[N] = &#123;&#125;;</span><br><span class=\"line\">\t<span class=\"built_in\">string</span> s[N];</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; s[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (s[i][j] == <span class=\"string\">'#'</span>) &#123;</span><br><span class=\"line\">\t\t\t\tr[i]++;</span><br><span class=\"line\">\t\t\t\tc[j]++;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (!r[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; m; j++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (!c[j])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; s[i][j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>PC枚舉範圍，要點的蠟燭要是連續才會有最小時間。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100005</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n, m;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a[N], ans = <span class=\"number\">10000000000</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i + m &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= <span class=\"number\">0</span> &amp;&amp; <span class=\"number\">0</span> &lt;= a[i + m - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">\t\t\tans = min(ans, <span class=\"number\">2</span> * (a[i + m - <span class=\"number\">1</span>] - a[i]) - max(-a[i], a[i + m - <span class=\"number\">1</span>]));</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tans = min(ans, max(<span class=\"built_in\">abs</span>(a[i + m - <span class=\"number\">1</span>]), <span class=\"built_in\">abs</span>(a[i])));</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; ans &lt;&lt; '\\n';</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>PD這題我還不太了解為什麼可以這樣轉，詳情可見這篇 <a href=\"https://blog.csdn.net/qq_31645627/article/details/82113914\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/qq_31645627/article/details/82113914</a> ，之後我會再補解釋。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lowbit(x) (x&amp;(-x))</span></span><br><span class=\"line\">LL n;</span><br><span class=\"line\">LL a[N], b[N], bit[<span class=\"number\">4</span> * N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(LL x, LL val)</span> </span>&#123;</span><br><span class=\"line\">\tx += n + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; x &lt;= <span class=\"number\">2</span> * n + <span class=\"number\">1</span>; x += lowbit(x)) &#123;</span><br><span class=\"line\">\t\tbit[x] += val;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">sum</span><span class=\"params\">(LL x)</span> </span>&#123;</span><br><span class=\"line\">\tLL val = <span class=\"number\">0</span>;</span><br><span class=\"line\">\tx += n + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; x &gt; <span class=\"number\">0</span>; x -= lowbit(x)) &#123;</span><br><span class=\"line\">\t\tval += bit[x];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> val;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\">LL <span class=\"title\">sol</span><span class=\"params\">(LL x)</span> </span>&#123;</span><br><span class=\"line\">\tLL tmp = <span class=\"number\">0</span>, ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= x) &#123;</span><br><span class=\"line\">\t\t\ttmp++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttmp--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tans += sum(tmp - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tadd(tmp, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ttmp = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (a[i] &lt;= x) &#123;</span><br><span class=\"line\">\t\t\ttmp++;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\ttmp--;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tadd(tmp, <span class=\"number\">-1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cin</span> &gt;&gt; a[i];</span><br><span class=\"line\">\t\tb[i] = a[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(bit, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(bit));</span><br><span class=\"line\">\tsort(b, b + n);</span><br><span class=\"line\">\tLL nn = unique(b + <span class=\"number\">1</span>, b + <span class=\"number\">1</span> + n) - b - <span class=\"number\">1</span>;</span><br><span class=\"line\">\tLL L = <span class=\"number\">1</span>, R = nn, M, ans;</span><br><span class=\"line\">\tLL tar = (n * (n + <span class=\"number\">1</span>) / <span class=\"number\">2</span>) / <span class=\"number\">2</span> + <span class=\"number\">1</span>;</span><br><span class=\"line\">\tadd(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (L &lt;= R) &#123;</span><br><span class=\"line\">\t\tM = (L + R) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tLL res = sol(b[M]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (res &gt;= tar) &#123;</span><br><span class=\"line\">\t\t\tans = b[M];</span><br><span class=\"line\">\t\t\tR = M - <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tL = M + <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"ITSA58心得","date":"2017-10-29T03:08:32.000Z","_content":"ITSA58雖然是已經比了好久，但是因為要做新北市模擬賽，所以一直都沒有發文。\n結果:\nA 基礎 AC\nB greedy AC\nC 字串處理 樹 AC\nD 最短路徑 AC\nE 暴力法 AC\n好久都沒破台了，XDD。\n題解:\npA\n水題一題，秒殺。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int n,m;\n    cin>>m;\n    for(int i=0;i<m;i++){\n            cin>>n;\n            n=(n/3)*3;\n            cout<<(3+n)*(n/3)/2<<'\\n';\n    }\n} \n\n{% endcodeblock %}\npB\n這題是用greedy的概念，先照每條路的起點排序，在按照終點排序，如果一條路的起點小於另一條路的終點，那就合併這兩條路，依此類推。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nstruct road{\n    int x,y;\n};\n\nbool cmp(road a,road b){\n    if(a.x!=b.x)\n        return a.x<b.x;\n    return a.y<b.y;\n}\n\nint main(){\n    int n,x,y,ans;\n    road arr[10005];\n    for(;cin>>n;){\n            x=y=ans=0;\n            for(int i=0;i<n;i++){\n                    cin>>arr[i].x>>arr[i].y;\n            }\n            sort(arr,arr+n,cmp);\n            for(int i=0;i<n;i++){\n                    if(arr[i].x>=y){\n                        ans+=y-x;\n                        x=arr[i].x;\n                        y=arr[i].y;\n                    }else{\n                        y=max(y,arr[i].y);\n                    }\n            }\n            cout<<ans+y-x<<'\\n';\n    }\n} \n{% endcodeblock %}\npC\n這題我是用cin來處理輸入，不過善用scanf的[]會比較方便，接下來儲存及判斷的採用heap存點的概念，左右子樹分別為2n和2n+1，就可以得到答案。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\n\nint main(){\n    int m,c,a[100];\n    string s;\n    cin>>m;\n    for(int i=0;i<m;i++){\n            cin>>c;\n            int x=0,o=0,n=0;\n            cin>>s;\n            for(int i=0;i<s.size();i++){\n                     if(n&&(s[i]>'9'||s[i]<'0')){\n                         x++; a[x]=n; n=0;\n                    }\n                     else if(s[i]<='9'&&s[i]>='0')n=n*10+(s[i]-'0');\n            }\n            for(int i=1;i<=x;i++){\n                    if(i*2<=x&&abs(a[i*2]-a[i])<=c){\n                        if(o)cout<<' ';\n                        o=1;\n                        cout<<char('A'+i-1)<<char('A'+i*2-1);\n                    }\n                     if(i*2+1<=x&&abs(a[i*2+1]-a[i])<=c){\n                        if(o)cout<<' ';\n                        o=1;\n                        cout<<char('A'+i-1)<<char('A'+i*2+1-1);\n                    }\n            }\n            cout<<'\\n';\n    }\n}\n{% endcodeblock %}\npD\n看起來就很像是floyd-warshall，就趕快寫一個上去，AC。要寫Dijkstra也可以。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cmath>\nusing namespace std;\nconst int N=1005;\nint n,m,adj[N][N],dp[N][N],x,y;\nint main(){\n    cin>>n>>m;\n    for(int i=0;i<m;i++){\n        for(int j=0;j<m;j++){\n            cin>>adj[i][j];\n            dp[i][j]=100000;\n        }\n   }\n   for(int k=0;k<m;k++){\n       for(int i=0;i<m;i++){\n           for(int j=0;j<m;j++){\n               dp[i][j]=min(dp[i][j],adj[i][k]+adj[k][j]);\n           \t}\n      \t}\n   }\n   for(int i=0;i<n;i++){\n           cin>>x>>y;\n           cout<<dp[x][y]<<'\\n';\n    }       \n}\n{% endcodeblock %}\npE 原本想用DP，但是太難了，所以改用爆搜方式，先建好n!及C(n,m)的表，再遞迴出每種可能，把每種情況加起來就AC了。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cstring>\nusing namespace std;\nunsigned long long n,ans,sel[20],noc[20][20],step[20]={1,1};\nvoid sol(unsigned long long s,unsigned long long x,unsigned long long y){\n    //cout<<s<<' '<< x<<' '<<y<<'\\n';\n    //for(int i=1,j;i<=15;i++){cout<<sel[i]<<\"+\";}cout<<'\\n';\n    if(y<0)return;\n    if(!x){\n        if(y)return;\n        unsigned long long nn=n,sum=1;\n        for(int i=1,j;i<=15;i++){\n            for(j=0;sel[i]&&j<sel[i];j++){\n                sum*=noc[nn][i];\n                nn-=i;\n             }\n            sum/=step[sel[i]];\n        }\n        //for(int i=1,j;i<=15;i++){cout<<sel[i]<<\"+\";}cout<<'\\n';\n        ans+=sum;\n        return;\n    }\n    for(int i=s;i<=x;i++){\n        sel[i]++;\n        sol(i,x-i,y-1);\n        sel[i]--;\n    }\n    return;\n}\n\nint main(){\n    unsigned long long int t,m;\n    char ch;\n    cin>>t;\n    for(int i=2;i<=15;i++){\n        step[i]=i*step[i-1];\n    }\n    for(int i=1;i<=15;i++){\n        for(int j=0;j<=i;j++){\n            if(!j||i==j)noc[i][j]=1;\n            else noc[i][j]=noc[i-1][j-1]+noc[i-1][j];\n        }\n    }\n    memset(sel,0,sizeof(sel));\n    for(int i=0;i!=t;i++){\n            cin>>n>>ch>>m;\n            if(n<m)cout<<\"0\\n\";\n            else if(n==1||m==1||n==m)cout<<\"1\\n\";\n            else{\n                ans=0;\n                sol(1,n,m);\n                cout<<ans<<'\\n';\n            }\n    }\n}\n{% endcodeblock %}","source":"_posts/ITSA58.md","raw":"<!-- layout: layout -->\ntitle: ITSA58心得\ndate: 2017-10-29 11:08:32\ncategory: ITSA\ntags:\n- ITSA\n- 基礎\n- greedy\n- 字串處理\n- 樹\n- 最短路徑\n- 暴力法\n---\nITSA58雖然是已經比了好久，但是因為要做新北市模擬賽，所以一直都沒有發文。\n結果:\nA 基礎 AC\nB greedy AC\nC 字串處理 樹 AC\nD 最短路徑 AC\nE 暴力法 AC\n好久都沒破台了，XDD。\n題解:\npA\n水題一題，秒殺。\n{% codeblock lang:cpp %}\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int n,m;\n    cin>>m;\n    for(int i=0;i<m;i++){\n            cin>>n;\n            n=(n/3)*3;\n            cout<<(3+n)*(n/3)/2<<'\\n';\n    }\n} \n\n{% endcodeblock %}\npB\n這題是用greedy的概念，先照每條路的起點排序，在按照終點排序，如果一條路的起點小於另一條路的終點，那就合併這兩條路，依此類推。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\nstruct road{\n    int x,y;\n};\n\nbool cmp(road a,road b){\n    if(a.x!=b.x)\n        return a.x<b.x;\n    return a.y<b.y;\n}\n\nint main(){\n    int n,x,y,ans;\n    road arr[10005];\n    for(;cin>>n;){\n            x=y=ans=0;\n            for(int i=0;i<n;i++){\n                    cin>>arr[i].x>>arr[i].y;\n            }\n            sort(arr,arr+n,cmp);\n            for(int i=0;i<n;i++){\n                    if(arr[i].x>=y){\n                        ans+=y-x;\n                        x=arr[i].x;\n                        y=arr[i].y;\n                    }else{\n                        y=max(y,arr[i].y);\n                    }\n            }\n            cout<<ans+y-x<<'\\n';\n    }\n} \n{% endcodeblock %}\npC\n這題我是用cin來處理輸入，不過善用scanf的[]會比較方便，接下來儲存及判斷的採用heap存點的概念，左右子樹分別為2n和2n+1，就可以得到答案。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cmath>\n#include <string>\nusing namespace std;\n\nint main(){\n    int m,c,a[100];\n    string s;\n    cin>>m;\n    for(int i=0;i<m;i++){\n            cin>>c;\n            int x=0,o=0,n=0;\n            cin>>s;\n            for(int i=0;i<s.size();i++){\n                     if(n&&(s[i]>'9'||s[i]<'0')){\n                         x++; a[x]=n; n=0;\n                    }\n                     else if(s[i]<='9'&&s[i]>='0')n=n*10+(s[i]-'0');\n            }\n            for(int i=1;i<=x;i++){\n                    if(i*2<=x&&abs(a[i*2]-a[i])<=c){\n                        if(o)cout<<' ';\n                        o=1;\n                        cout<<char('A'+i-1)<<char('A'+i*2-1);\n                    }\n                     if(i*2+1<=x&&abs(a[i*2+1]-a[i])<=c){\n                        if(o)cout<<' ';\n                        o=1;\n                        cout<<char('A'+i-1)<<char('A'+i*2+1-1);\n                    }\n            }\n            cout<<'\\n';\n    }\n}\n{% endcodeblock %}\npD\n看起來就很像是floyd-warshall，就趕快寫一個上去，AC。要寫Dijkstra也可以。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cmath>\nusing namespace std;\nconst int N=1005;\nint n,m,adj[N][N],dp[N][N],x,y;\nint main(){\n    cin>>n>>m;\n    for(int i=0;i<m;i++){\n        for(int j=0;j<m;j++){\n            cin>>adj[i][j];\n            dp[i][j]=100000;\n        }\n   }\n   for(int k=0;k<m;k++){\n       for(int i=0;i<m;i++){\n           for(int j=0;j<m;j++){\n               dp[i][j]=min(dp[i][j],adj[i][k]+adj[k][j]);\n           \t}\n      \t}\n   }\n   for(int i=0;i<n;i++){\n           cin>>x>>y;\n           cout<<dp[x][y]<<'\\n';\n    }       \n}\n{% endcodeblock %}\npE 原本想用DP，但是太難了，所以改用爆搜方式，先建好n!及C(n,m)的表，再遞迴出每種可能，把每種情況加起來就AC了。\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cstring>\nusing namespace std;\nunsigned long long n,ans,sel[20],noc[20][20],step[20]={1,1};\nvoid sol(unsigned long long s,unsigned long long x,unsigned long long y){\n    //cout<<s<<' '<< x<<' '<<y<<'\\n';\n    //for(int i=1,j;i<=15;i++){cout<<sel[i]<<\"+\";}cout<<'\\n';\n    if(y<0)return;\n    if(!x){\n        if(y)return;\n        unsigned long long nn=n,sum=1;\n        for(int i=1,j;i<=15;i++){\n            for(j=0;sel[i]&&j<sel[i];j++){\n                sum*=noc[nn][i];\n                nn-=i;\n             }\n            sum/=step[sel[i]];\n        }\n        //for(int i=1,j;i<=15;i++){cout<<sel[i]<<\"+\";}cout<<'\\n';\n        ans+=sum;\n        return;\n    }\n    for(int i=s;i<=x;i++){\n        sel[i]++;\n        sol(i,x-i,y-1);\n        sel[i]--;\n    }\n    return;\n}\n\nint main(){\n    unsigned long long int t,m;\n    char ch;\n    cin>>t;\n    for(int i=2;i<=15;i++){\n        step[i]=i*step[i-1];\n    }\n    for(int i=1;i<=15;i++){\n        for(int j=0;j<=i;j++){\n            if(!j||i==j)noc[i][j]=1;\n            else noc[i][j]=noc[i-1][j-1]+noc[i-1][j];\n        }\n    }\n    memset(sel,0,sizeof(sel));\n    for(int i=0;i!=t;i++){\n            cin>>n>>ch>>m;\n            if(n<m)cout<<\"0\\n\";\n            else if(n==1||m==1||n==m)cout<<\"1\\n\";\n            else{\n                ans=0;\n                sol(1,n,m);\n                cout<<ans<<'\\n';\n            }\n    }\n}\n{% endcodeblock %}","slug":"ITSA58","published":1,"updated":"2019-01-21T02:30:54.776Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5san0006hwu4457im2vf","content":"<p>ITSA58雖然是已經比了好久，但是因為要做新北市模擬賽，所以一直都沒有發文。<br>結果:<br>A 基礎 AC<br>B greedy AC<br>C 字串處理 樹 AC<br>D 最短路徑 AC<br>E 暴力法 AC<br>好久都沒破台了，XDD。<br>題解:<br>pA<br>水題一題，秒殺。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">            n=(n/<span class=\"number\">3</span>)*<span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;(<span class=\"number\">3</span>+n)*(n/<span class=\"number\">3</span>)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>pB<br>這題是用greedy的概念，先照每條路的起點排序，在按照終點排序，如果一條路的起點小於另一條路的終點，那就合併這兩條路，依此類推。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">road</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(road a,road b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.x!=b.x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x,y,ans;</span><br><span class=\"line\">    road arr[<span class=\"number\">10005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;<span class=\"built_in\">cin</span>&gt;&gt;n;)&#123;</span><br><span class=\"line\">            x=y=ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cin</span>&gt;&gt;arr[i].x&gt;&gt;arr[i].y;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sort(arr,arr+n,cmp);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(arr[i].x&gt;=y)&#123;</span><br><span class=\"line\">                        ans+=y-x;</span><br><span class=\"line\">                        x=arr[i].x;</span><br><span class=\"line\">                        y=arr[i].y;</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        y=max(y,arr[i].y);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;ans+y-x&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure><br>pC<br>這題我是用cin來處理輸入，不過善用scanf的[]會比較方便，接下來儲存及判斷的採用heap存點的概念，左右子樹分別為2n和2n+1，就可以得到答案。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m,c,a[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;c;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=<span class=\"number\">0</span>,o=<span class=\"number\">0</span>,n=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;s;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">                     <span class=\"keyword\">if</span>(n&amp;&amp;(s[i]&gt;<span class=\"string\">'9'</span>||s[i]&lt;<span class=\"string\">'0'</span>))&#123;</span><br><span class=\"line\">                         x++; a[x]=n; n=<span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                     <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i]&lt;=<span class=\"string\">'9'</span>&amp;&amp;s[i]&gt;=<span class=\"string\">'0'</span>)n=n*<span class=\"number\">10</span>+(s[i]-<span class=\"string\">'0'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=x;i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i*<span class=\"number\">2</span>&lt;=x&amp;&amp;<span class=\"built_in\">abs</span>(a[i*<span class=\"number\">2</span>]-a[i])&lt;=c)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(o)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                        o=<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i<span class=\"number\">-1</span>)&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i*<span class=\"number\">2</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                     <span class=\"keyword\">if</span>(i*<span class=\"number\">2</span>+<span class=\"number\">1</span>&lt;=x&amp;&amp;<span class=\"built_in\">abs</span>(a[i*<span class=\"number\">2</span>+<span class=\"number\">1</span>]-a[i])&lt;=c)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(o)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                        o=<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i<span class=\"number\">-1</span>)&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i*<span class=\"number\">2</span>+<span class=\"number\">1</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pD<br>看起來就很像是floyd-warshall，就趕快寫一個上去，AC。要寫Dijkstra也可以。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1005</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,adj[N][N],dp[N][N],x,y;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;adj[i][j];</span><br><span class=\"line\">            dp[i][j]=<span class=\"number\">100000</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">               dp[i][j]=min(dp[i][j],adj[i][k]+adj[k][j]);</span><br><span class=\"line\">           \t&#125;</span><br><span class=\"line\">      \t&#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">           <span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">           <span class=\"built_in\">cout</span>&lt;&lt;dp[x][y]&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pE 原本想用DP，但是太難了，所以改用爆搜方式，先建好n!及C(n,m)的表，再遞迴出每種可能，把每種情況加起來就AC了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,ans,sel[<span class=\"number\">20</span>],noc[<span class=\"number\">20</span>][<span class=\"number\">20</span>],step[<span class=\"number\">20</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sol</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> s,<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//cout&lt;&lt;s&lt;&lt;' '&lt;&lt; x&lt;&lt;' '&lt;&lt;y&lt;&lt;'\\n';</span></span><br><span class=\"line\">    <span class=\"comment\">//for(int i=1,j;i&lt;=15;i++)&#123;cout&lt;&lt;sel[i]&lt;&lt;\"+\";&#125;cout&lt;&lt;'\\n';</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!x)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> nn=n,sum=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;sel[i]&amp;&amp;j&lt;sel[i];j++)&#123;</span><br><span class=\"line\">                sum*=noc[nn][i];</span><br><span class=\"line\">                nn-=i;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">            sum/=step[sel[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//for(int i=1,j;i&lt;=15;i++)&#123;cout&lt;&lt;sel[i]&lt;&lt;\"+\";&#125;cout&lt;&lt;'\\n';</span></span><br><span class=\"line\">        ans+=sum;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=s;i&lt;=x;i++)&#123;</span><br><span class=\"line\">        sel[i]++;</span><br><span class=\"line\">        sol(i,x-i,y<span class=\"number\">-1</span>);</span><br><span class=\"line\">        sel[i]--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> t,m;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">        step[i]=i*step[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!j||i==j)noc[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> noc[i][j]=noc[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+noc[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(sel,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(sel));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i!=t;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;ch&gt;&gt;m;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n&lt;m)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"0\\n\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>||m==<span class=\"number\">1</span>||n==m)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"1\\n\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">                sol(<span class=\"number\">1</span>,n,m);</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>ITSA58雖然是已經比了好久，但是因為要做新北市模擬賽，所以一直都沒有發文。<br>結果:<br>A 基礎 AC<br>B greedy AC<br>C 字串處理 樹 AC<br>D 最短路徑 AC<br>E 暴力法 AC<br>好久都沒破台了，XDD。<br>題解:<br>pA<br>水題一題，秒殺。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">            n=(n/<span class=\"number\">3</span>)*<span class=\"number\">3</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;(<span class=\"number\">3</span>+n)*(n/<span class=\"number\">3</span>)/<span class=\"number\">2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><br>pB<br>這題是用greedy的概念，先照每條路的起點排序，在按照終點排序，如果一條路的起點小於另一條路的終點，那就合併這兩條路，依此類推。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">road</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> x,y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(road a,road b)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a.x!=b.x)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.x&lt;b.x;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.y&lt;b.y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,x,y,ans;</span><br><span class=\"line\">    road arr[<span class=\"number\">10005</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;<span class=\"built_in\">cin</span>&gt;&gt;n;)&#123;</span><br><span class=\"line\">            x=y=ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cin</span>&gt;&gt;arr[i].x&gt;&gt;arr[i].y;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sort(arr,arr+n,cmp);</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(arr[i].x&gt;=y)&#123;</span><br><span class=\"line\">                        ans+=y-x;</span><br><span class=\"line\">                        x=arr[i].x;</span><br><span class=\"line\">                        y=arr[i].y;</span><br><span class=\"line\">                    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                        y=max(y,arr[i].y);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;ans+y-x&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure><br>pC<br>這題我是用cin來處理輸入，不過善用scanf的[]會比較方便，接下來儲存及判斷的採用heap存點的概念，左右子樹分別為2n和2n+1，就可以得到答案。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m,c,a[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;c;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> x=<span class=\"number\">0</span>,o=<span class=\"number\">0</span>,n=<span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;s;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;s.size();i++)&#123;</span><br><span class=\"line\">                     <span class=\"keyword\">if</span>(n&amp;&amp;(s[i]&gt;<span class=\"string\">'9'</span>||s[i]&lt;<span class=\"string\">'0'</span>))&#123;</span><br><span class=\"line\">                         x++; a[x]=n; n=<span class=\"number\">0</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                     <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(s[i]&lt;=<span class=\"string\">'9'</span>&amp;&amp;s[i]&gt;=<span class=\"string\">'0'</span>)n=n*<span class=\"number\">10</span>+(s[i]-<span class=\"string\">'0'</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=x;i++)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(i*<span class=\"number\">2</span>&lt;=x&amp;&amp;<span class=\"built_in\">abs</span>(a[i*<span class=\"number\">2</span>]-a[i])&lt;=c)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(o)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                        o=<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i<span class=\"number\">-1</span>)&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i*<span class=\"number\">2</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                     <span class=\"keyword\">if</span>(i*<span class=\"number\">2</span>+<span class=\"number\">1</span>&lt;=x&amp;&amp;<span class=\"built_in\">abs</span>(a[i*<span class=\"number\">2</span>+<span class=\"number\">1</span>]-a[i])&lt;=c)&#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span>(o)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                        o=<span class=\"number\">1</span>;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i<span class=\"number\">-1</span>)&lt;&lt;<span class=\"keyword\">char</span>(<span class=\"string\">'A'</span>+i*<span class=\"number\">2</span>+<span class=\"number\">1</span><span class=\"number\">-1</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pD<br>看起來就很像是floyd-warshall，就趕快寫一個上去，AC。要寫Dijkstra也可以。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cmath&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">1005</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,adj[N][N],dp[N][N],x,y;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;adj[i][j];</span><br><span class=\"line\">            dp[i][j]=<span class=\"number\">100000</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;m;i++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)&#123;</span><br><span class=\"line\">               dp[i][j]=min(dp[i][j],adj[i][k]+adj[k][j]);</span><br><span class=\"line\">           \t&#125;</span><br><span class=\"line\">      \t&#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">           <span class=\"built_in\">cin</span>&gt;&gt;x&gt;&gt;y;</span><br><span class=\"line\">           <span class=\"built_in\">cout</span>&lt;&lt;dp[x][y]&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pE 原本想用DP，但是太難了，所以改用爆搜方式，先建好n!及C(n,m)的表，再遞迴出每種可能，把每種情況加起來就AC了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,ans,sel[<span class=\"number\">20</span>],noc[<span class=\"number\">20</span>][<span class=\"number\">20</span>],step[<span class=\"number\">20</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sol</span><span class=\"params\">(<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> s,<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> x,<span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> y)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//cout&lt;&lt;s&lt;&lt;' '&lt;&lt; x&lt;&lt;' '&lt;&lt;y&lt;&lt;'\\n';</span></span><br><span class=\"line\">    <span class=\"comment\">//for(int i=1,j;i&lt;=15;i++)&#123;cout&lt;&lt;sel[i]&lt;&lt;\"+\";&#125;cout&lt;&lt;'\\n';</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(y&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!x)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> nn=n,sum=<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,j;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(j=<span class=\"number\">0</span>;sel[i]&amp;&amp;j&lt;sel[i];j++)&#123;</span><br><span class=\"line\">                sum*=noc[nn][i];</span><br><span class=\"line\">                nn-=i;</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">            sum/=step[sel[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//for(int i=1,j;i&lt;=15;i++)&#123;cout&lt;&lt;sel[i]&lt;&lt;\"+\";&#125;cout&lt;&lt;'\\n';</span></span><br><span class=\"line\">        ans+=sum;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=s;i&lt;=x;i++)&#123;</span><br><span class=\"line\">        sel[i]++;</span><br><span class=\"line\">        sol(i,x-i,y<span class=\"number\">-1</span>);</span><br><span class=\"line\">        sel[i]--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> <span class=\"keyword\">int</span> t,m;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> ch;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">        step[i]=i*step[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">15</span>;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!j||i==j)noc[i][j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> noc[i][j]=noc[i<span class=\"number\">-1</span>][j<span class=\"number\">-1</span>]+noc[i<span class=\"number\">-1</span>][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(sel,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(sel));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i!=t;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;ch&gt;&gt;m;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n&lt;m)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"0\\n\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n==<span class=\"number\">1</span>||m==<span class=\"number\">1</span>||n==m)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">\"1\\n\"</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">                sol(<span class=\"number\">1</span>,n,m);</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"POJ1419 Graph Coloring","date":"2019-02-13T12:25:40.000Z","_content":"http://poj.org/problem?id=1419\n題意：求最大點集合使得集合內的點兩兩皆不相鄰。\n\n這題就是要求最大點獨立集，也就是求補圖最大團，而最大團藉由枚舉來求得。\n\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <vector>\n#include <cstring>\nusing namespace std;\nconst int N = 105;\nint n;\nint adj[N][N];\nint tmp, ans;\nint tmp_res[N], ans_res[N];\n\nvoid dfs(int s){\n    if(s > n){// all vertexes are searched\n        memcpy(ans_res, tmp_res,sizeof(ans_res));\n        ans = tmp;\n        return;\n    }\n    bool ok = true;\n    for(int i = 0; i < tmp; i++){\n        if(adj[s][tmp_res[i]] == 0){\n            ok = false;\n            break;\n        }\n    }\n    if(ok){// add vertex s\n        tmp_res[tmp++] = s;\n        dfs(s + 1);\n        tmp--;\n    }\n    if(tmp + (n - s) > ans){// not to add vertex s\n        dfs(s + 1);\n    }\n}\n\nint main(){\n    int t, m;\n    cin >> t;\n    while(t--){\n        cin >> n >> m;\n        memset(adj, -1, sizeof(adj));\n        for(int i = 0, x, y; i < m; i++){\n            cin >> x >> y;\n            adj[x][y] = adj[y][x] = 0;\n        }\n        tmp = ans = 0;\n        dfs(1);\n        cout << ans << '\\n';\n        for(int i = 0 ;i < ans; i++){\n            if(i)cout<<' ';\n            cout << ans_res[i];\n        }\n        cout << '\\n';\n    }\n}\n{% endcodeblock %}","source":"_posts/POJ1419-Graph-Coloring.md","raw":"---\ntitle: POJ1419 Graph Coloring\ndate: 2019-02-13 20:25:40\ncategory: POJ\ntags:\n- POJ\n- graph\n---\nhttp://poj.org/problem?id=1419\n題意：求最大點集合使得集合內的點兩兩皆不相鄰。\n\n這題就是要求最大點獨立集，也就是求補圖最大團，而最大團藉由枚舉來求得。\n\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <vector>\n#include <cstring>\nusing namespace std;\nconst int N = 105;\nint n;\nint adj[N][N];\nint tmp, ans;\nint tmp_res[N], ans_res[N];\n\nvoid dfs(int s){\n    if(s > n){// all vertexes are searched\n        memcpy(ans_res, tmp_res,sizeof(ans_res));\n        ans = tmp;\n        return;\n    }\n    bool ok = true;\n    for(int i = 0; i < tmp; i++){\n        if(adj[s][tmp_res[i]] == 0){\n            ok = false;\n            break;\n        }\n    }\n    if(ok){// add vertex s\n        tmp_res[tmp++] = s;\n        dfs(s + 1);\n        tmp--;\n    }\n    if(tmp + (n - s) > ans){// not to add vertex s\n        dfs(s + 1);\n    }\n}\n\nint main(){\n    int t, m;\n    cin >> t;\n    while(t--){\n        cin >> n >> m;\n        memset(adj, -1, sizeof(adj));\n        for(int i = 0, x, y; i < m; i++){\n            cin >> x >> y;\n            adj[x][y] = adj[y][x] = 0;\n        }\n        tmp = ans = 0;\n        dfs(1);\n        cout << ans << '\\n';\n        for(int i = 0 ;i < ans; i++){\n            if(i)cout<<' ';\n            cout << ans_res[i];\n        }\n        cout << '\\n';\n    }\n}\n{% endcodeblock %}","slug":"POJ1419-Graph-Coloring","published":1,"updated":"2019-02-13T12:44:47.069Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sap0007hwu4otzheh7h","content":"<p><a href=\"http://poj.org/problem?id=1419\" target=\"_blank\" rel=\"noopener\">http://poj.org/problem?id=1419</a><br>題意：求最大點集合使得集合內的點兩兩皆不相鄰。</p>\n<p>這題就是要求最大點獨立集，也就是求補圖最大團，而最大團藉由枚舉來求得。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> adj[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp, ans;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp_res[N], ans_res[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s &gt; n)&#123;<span class=\"comment\">// all vertexes are searched</span></span><br><span class=\"line\">        <span class=\"built_in\">memcpy</span>(ans_res, tmp_res,<span class=\"keyword\">sizeof</span>(ans_res));</span><br><span class=\"line\">        ans = tmp;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> ok = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; tmp; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(adj[s][tmp_res[i]] == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            ok = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ok)&#123;<span class=\"comment\">// add vertex s</span></span><br><span class=\"line\">        tmp_res[tmp++] = s;</span><br><span class=\"line\">        dfs(s + <span class=\"number\">1</span>);</span><br><span class=\"line\">        tmp--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tmp + (n - s) &gt; ans)&#123;<span class=\"comment\">// not to add vertex s</span></span><br><span class=\"line\">        dfs(s + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(adj, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(adj));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, x, y; i &lt; m; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            adj[x][y] = adj[y][x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tmp = ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        dfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; ans; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; ans_res[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://poj.org/problem?id=1419\" target=\"_blank\" rel=\"noopener\">http://poj.org/problem?id=1419</a><br>題意：求最大點集合使得集合內的點兩兩皆不相鄰。</p>\n<p>這題就是要求最大點獨立集，也就是求補圖最大團，而最大團藉由枚舉來求得。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">105</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> adj[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp, ans;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tmp_res[N], ans_res[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(s &gt; n)&#123;<span class=\"comment\">// all vertexes are searched</span></span><br><span class=\"line\">        <span class=\"built_in\">memcpy</span>(ans_res, tmp_res,<span class=\"keyword\">sizeof</span>(ans_res));</span><br><span class=\"line\">        ans = tmp;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> ok = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; tmp; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(adj[s][tmp_res[i]] == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">            ok = <span class=\"literal\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ok)&#123;<span class=\"comment\">// add vertex s</span></span><br><span class=\"line\">        tmp_res[tmp++] = s;</span><br><span class=\"line\">        dfs(s + <span class=\"number\">1</span>);</span><br><span class=\"line\">        tmp--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(tmp + (n - s) &gt; ans)&#123;<span class=\"comment\">// not to add vertex s</span></span><br><span class=\"line\">        dfs(s + <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, m;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(adj, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(adj));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, x, y; i &lt; m; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            adj[x][y] = adj[y][x] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        tmp = ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        dfs(<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ;i &lt; ans; i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; ans_res[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"TIOJ1387 / 1407 多重背包問題","date":"2019-02-11T04:44:16.000Z","_content":"https://tioj.ck.tp.edu.tw/problems/1387\nhttps://tioj.ck.tp.edu.tw/problems/1407\n這兩題是多包問題，1307測資範圍比較鬆，可以用O(NTC)的做法試試，1407就要用單調隊列優化來AC(複雜度為O(NT))。我在解1407時，因為deque放迴圈，所以吃了TLE，後來才想到要放迴圈外面，我原本是想讓它自動clear，沒想到要付出時間代價。\n\n附上TIOJ1407的code\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000005;\nconst int M = 100005;\nconst int INF = 1e9;\nstruct Data{\n    int id,val;\n};\nint dp[N], ww[M], mm[M], cc[M];\nint main(){\n    int n, t;\n    deque<Data> dq[1005];\n    fill(dp, dp + N, -INF);\n    dp[0] = 0;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> ww[i] >> mm[i] >> cc[i];\n    }\n    cin >> t;\n    for(int i = 0, w, m, c; i < n; i++){\n        w = ww[i]; m = mm[i]; c = cc[i];\n        for(int j = 0; j <= t; j++){\n            if(j < w){\n                dq[j].clear();\n                dq[j].push_back({j,dp[j]});\n                continue;\n            }\n            int id = j % w;\n            while(dq[id].front().id + c * w < j)dq[id].pop_front();\n            int tmp = dq[id].front().val + (j - dq[id].front().id) / w * m;\n            while(!dq[id].empty() && dq[id].back().val + (j - dq[id].back().id) / w * m <= dp[j])\n                dq[id].pop_back();\n            dq[id].push_back({j,dp[j]});\n            dp[j] = max(dp[j], tmp);\n        }\n    }\n    int ans = -INF;\n    for(int i = 0; i <= t; i++){\n        ans = max(ans, dp[i]);\n    }\n    cout << ans << '\\n';\n}\n{% endcodeblock %}","source":"_posts/TIOJ1387-1407-多重背包問題.md","raw":"---\ntitle: TIOJ1387 / 1407 多重背包問題\ndate: 2019-02-11 12:44:16\ncategory: TIOJ\ntags:\n- TIOJ\n- dp\n- 背包dp\n---\nhttps://tioj.ck.tp.edu.tw/problems/1387\nhttps://tioj.ck.tp.edu.tw/problems/1407\n這兩題是多包問題，1307測資範圍比較鬆，可以用O(NTC)的做法試試，1407就要用單調隊列優化來AC(複雜度為O(NT))。我在解1407時，因為deque放迴圈，所以吃了TLE，後來才想到要放迴圈外面，我原本是想讓它自動clear，沒想到要付出時間代價。\n\n附上TIOJ1407的code\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 1000005;\nconst int M = 100005;\nconst int INF = 1e9;\nstruct Data{\n    int id,val;\n};\nint dp[N], ww[M], mm[M], cc[M];\nint main(){\n    int n, t;\n    deque<Data> dq[1005];\n    fill(dp, dp + N, -INF);\n    dp[0] = 0;\n    cin >> n;\n    for(int i = 0; i < n; i++){\n        cin >> ww[i] >> mm[i] >> cc[i];\n    }\n    cin >> t;\n    for(int i = 0, w, m, c; i < n; i++){\n        w = ww[i]; m = mm[i]; c = cc[i];\n        for(int j = 0; j <= t; j++){\n            if(j < w){\n                dq[j].clear();\n                dq[j].push_back({j,dp[j]});\n                continue;\n            }\n            int id = j % w;\n            while(dq[id].front().id + c * w < j)dq[id].pop_front();\n            int tmp = dq[id].front().val + (j - dq[id].front().id) / w * m;\n            while(!dq[id].empty() && dq[id].back().val + (j - dq[id].back().id) / w * m <= dp[j])\n                dq[id].pop_back();\n            dq[id].push_back({j,dp[j]});\n            dp[j] = max(dp[j], tmp);\n        }\n    }\n    int ans = -INF;\n    for(int i = 0; i <= t; i++){\n        ans = max(ans, dp[i]);\n    }\n    cout << ans << '\\n';\n}\n{% endcodeblock %}","slug":"TIOJ1387-1407-多重背包問題","published":1,"updated":"2019-02-12T06:49:07.465Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5saq0008hwu47rwd5xga","content":"<p><a href=\"https://tioj.ck.tp.edu.tw/problems/1387\" target=\"_blank\" rel=\"noopener\">https://tioj.ck.tp.edu.tw/problems/1387</a><br><a href=\"https://tioj.ck.tp.edu.tw/problems/1407\" target=\"_blank\" rel=\"noopener\">https://tioj.ck.tp.edu.tw/problems/1407</a><br>這兩題是多包問題，1307測資範圍比較鬆，可以用O(NTC)的做法試試，1407就要用單調隊列優化來AC(複雜度為O(NT))。我在解1407時，因為deque放迴圈，所以吃了TLE，後來才想到要放迴圈外面，我原本是想讓它自動clear，沒想到要付出時間代價。</p>\n<p>附上TIOJ1407的code<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1000005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M = <span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Data</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> id,val;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[N], ww[M], mm[M], cc[M];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, t;</span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;Data&gt; dq[<span class=\"number\">1005</span>];</span><br><span class=\"line\">    fill(dp, dp + N, -INF);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; ww[i] &gt;&gt; mm[i] &gt;&gt; cc[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, w, m, c; i &lt; n; i++)&#123;</span><br><span class=\"line\">        w = ww[i]; m = mm[i]; c = cc[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= t; j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; w)&#123;</span><br><span class=\"line\">                dq[j].clear();</span><br><span class=\"line\">                dq[j].push_back(&#123;j,dp[j]&#125;);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> id = j % w;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(dq[id].front().id + c * w &lt; j)dq[id].pop_front();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp = dq[id].front().val + (j - dq[id].front().id) / w * m;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!dq[id].empty() &amp;&amp; dq[id].back().val + (j - dq[id].back().id) / w * m &lt;= dp[j])</span><br><span class=\"line\">                dq[id].pop_back();</span><br><span class=\"line\">            dq[id].push_back(&#123;j,dp[j]&#125;);</span><br><span class=\"line\">            dp[j] = max(dp[j], tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= t; i++)&#123;</span><br><span class=\"line\">        ans = max(ans, dp[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://tioj.ck.tp.edu.tw/problems/1387\" target=\"_blank\" rel=\"noopener\">https://tioj.ck.tp.edu.tw/problems/1387</a><br><a href=\"https://tioj.ck.tp.edu.tw/problems/1407\" target=\"_blank\" rel=\"noopener\">https://tioj.ck.tp.edu.tw/problems/1407</a><br>這兩題是多包問題，1307測資範圍比較鬆，可以用O(NTC)的做法試試，1407就要用單調隊列優化來AC(複雜度為O(NT))。我在解1407時，因為deque放迴圈，所以吃了TLE，後來才想到要放迴圈外面，我原本是想讓它自動clear，沒想到要付出時間代價。</p>\n<p>附上TIOJ1407的code<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">1000005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M = <span class=\"number\">100005</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> INF = <span class=\"number\">1e9</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Data</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> id,val;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dp[N], ww[M], mm[M], cc[M];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n, t;</span><br><span class=\"line\">    <span class=\"built_in\">deque</span>&lt;Data&gt; dq[<span class=\"number\">1005</span>];</span><br><span class=\"line\">    fill(dp, dp + N, -INF);</span><br><span class=\"line\">    dp[<span class=\"number\">0</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span> &gt;&gt; ww[i] &gt;&gt; mm[i] &gt;&gt; cc[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, w, m, c; i &lt; n; i++)&#123;</span><br><span class=\"line\">        w = ww[i]; m = mm[i]; c = cc[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt;= t; j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(j &lt; w)&#123;</span><br><span class=\"line\">                dq[j].clear();</span><br><span class=\"line\">                dq[j].push_back(&#123;j,dp[j]&#125;);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> id = j % w;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(dq[id].front().id + c * w &lt; j)dq[id].pop_front();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> tmp = dq[id].front().val + (j - dq[id].front().id) / w * m;</span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!dq[id].empty() &amp;&amp; dq[id].back().val + (j - dq[id].back().id) / w * m &lt;= dp[j])</span><br><span class=\"line\">                dq[id].pop_back();</span><br><span class=\"line\">            dq[id].push_back(&#123;j,dp[j]&#125;);</span><br><span class=\"line\">            dp[j] = max(dp[j], tmp);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans = -INF;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= t; i++)&#123;</span><br><span class=\"line\">        ans = max(ans, dp[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; ans &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"POJ3692 Kindergarten","date":"2019-02-12T07:41:28.000Z","_content":"http://poj.org/problem?id=3692\n題意：所有的男生認識彼此，所有的女生也認識彼此，有些男女互相認識，求最大群體使得當中所有人都認識彼此。\n\n題解：二分圖上的最大團，先把圖轉換成補圖，找出最大匹配後，答案即為|V(男女生總人數)|-|最大匹配|。\n\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cstring>\n#include <bitset>\nusing namespace std;\nconst int N=205;\nint g, b;\nint adj[N][N];\nint Left[N];\nbitset<N> used;\n\nvoid init(){\n    for(int i = 1; i <= g; i++){\n        for(int j = 1; j <= b; j++){\n            adj[i][j] = 1;\n        }\n    }\n}\n\nbool dfs(int s){\n    for(int i = 1; i <= b; i++){\n        if(!adj[s][i] || used[i])continue;\n        used[i] = true;\n        if(Left[i] == -1 || dfs(Left[i])){\n            Left[i] = s;\n            return true;\n        }\n    }\n    return false;\n}\n\nint sol(){\n    int ret = 0;\n    memset(Left, -1, sizeof(Left));\n    for(int i = 1; i <= g; i++){\n        used.reset();\n        if(dfs(i))ret++;\n    }\n    return ret;\n}\n\nint main(){\n    int m, ti = 0;\n    while(cin >> g >> b >> m, g || b || m){\n        init();\n        for(int i = 0, x, y; i < m; i++){\n            cin >> x >> y;\n            adj[x][y] = 0;\n        }\n        cout << \"Case \" << ++ti << \": \" << g + b - sol() << \"\\n\";\n    }\n}\n{% endcodeblock %}","source":"_posts/POJ3692-Kindergarten.md","raw":"---\ntitle: POJ3692 Kindergarten\ndate: 2019-02-12 15:41:28\ncategory: POJ\ntags:\n- POJ\n- bipartite graph\n---\nhttp://poj.org/problem?id=3692\n題意：所有的男生認識彼此，所有的女生也認識彼此，有些男女互相認識，求最大群體使得當中所有人都認識彼此。\n\n題解：二分圖上的最大團，先把圖轉換成補圖，找出最大匹配後，答案即為|V(男女生總人數)|-|最大匹配|。\n\n{% codeblock lang:cpp %}\n#include <iostream>\n#include <cstring>\n#include <bitset>\nusing namespace std;\nconst int N=205;\nint g, b;\nint adj[N][N];\nint Left[N];\nbitset<N> used;\n\nvoid init(){\n    for(int i = 1; i <= g; i++){\n        for(int j = 1; j <= b; j++){\n            adj[i][j] = 1;\n        }\n    }\n}\n\nbool dfs(int s){\n    for(int i = 1; i <= b; i++){\n        if(!adj[s][i] || used[i])continue;\n        used[i] = true;\n        if(Left[i] == -1 || dfs(Left[i])){\n            Left[i] = s;\n            return true;\n        }\n    }\n    return false;\n}\n\nint sol(){\n    int ret = 0;\n    memset(Left, -1, sizeof(Left));\n    for(int i = 1; i <= g; i++){\n        used.reset();\n        if(dfs(i))ret++;\n    }\n    return ret;\n}\n\nint main(){\n    int m, ti = 0;\n    while(cin >> g >> b >> m, g || b || m){\n        init();\n        for(int i = 0, x, y; i < m; i++){\n            cin >> x >> y;\n            adj[x][y] = 0;\n        }\n        cout << \"Case \" << ++ti << \": \" << g + b - sol() << \"\\n\";\n    }\n}\n{% endcodeblock %}","slug":"POJ3692-Kindergarten","published":1,"updated":"2019-02-12T07:52:40.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sar0009hwu4depy587m","content":"<p><a href=\"http://poj.org/problem?id=3692\" target=\"_blank\" rel=\"noopener\">http://poj.org/problem?id=3692</a><br>題意：所有的男生認識彼此，所有的女生也認識彼此，有些男女互相認識，求最大群體使得當中所有人都認識彼此。</p>\n<p>題解：二分圖上的最大團，先把圖轉換成補圖，找出最大匹配後，答案即為|V(男女生總人數)|-|最大匹配|。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">205</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> g, b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> adj[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> Left[N];</span><br><span class=\"line\"><span class=\"built_in\">bitset</span>&lt;N&gt; used;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= g; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= b; j++)&#123;</span><br><span class=\"line\">            adj[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= b; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!adj[s][i] || used[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        used[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Left[i] == <span class=\"number\">-1</span> || dfs(Left[i]))&#123;</span><br><span class=\"line\">            Left[i] = s;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sol</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Left, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(Left));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= g; i++)&#123;</span><br><span class=\"line\">        used.reset();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dfs(i))ret++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m, ti = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; g &gt;&gt; b &gt;&gt; m, g || b || m)&#123;</span><br><span class=\"line\">        init();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, x, y; i &lt; m; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            adj[x][y] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Case \"</span> &lt;&lt; ++ti &lt;&lt; <span class=\"string\">\": \"</span> &lt;&lt; g + b - sol() &lt;&lt; <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><a href=\"http://poj.org/problem?id=3692\" target=\"_blank\" rel=\"noopener\">http://poj.org/problem?id=3692</a><br>題意：所有的男生認識彼此，所有的女生也認識彼此，有些男女互相認識，求最大群體使得當中所有人都認識彼此。</p>\n<p>題解：二分圖上的最大團，先把圖轉換成補圖，找出最大匹配後，答案即為|V(男女生總人數)|-|最大匹配|。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bitset&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">205</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> g, b;</span><br><span class=\"line\"><span class=\"keyword\">int</span> adj[N][N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> Left[N];</span><br><span class=\"line\"><span class=\"built_in\">bitset</span>&lt;N&gt; used;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= g; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= b; j++)&#123;</span><br><span class=\"line\">            adj[i][j] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= b; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!adj[s][i] || used[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        used[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(Left[i] == <span class=\"number\">-1</span> || dfs(Left[i]))&#123;</span><br><span class=\"line\">            Left[i] = s;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">sol</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ret = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(Left, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(Left));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= g; i++)&#123;</span><br><span class=\"line\">        used.reset();</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dfs(i))ret++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m, ti = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; g &gt;&gt; b &gt;&gt; m, g || b || m)&#123;</span><br><span class=\"line\">        init();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, x, y; i &lt; m; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; x &gt;&gt; y;</span><br><span class=\"line\">            adj[x][y] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Case \"</span> &lt;&lt; ++ti &lt;&lt; <span class=\"string\">\": \"</span> &lt;&lt; g + b - sol() &lt;&lt; <span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"ioicamp系列-1 2016","date":"2019-01-25T06:31:55.000Z","_content":"2016年是我第一次參加ioicamp，我的隊友都是和我同齡的，一個就是後來拿IOI金牌的何達睿，一個後來跟我很要好，用學測進了台大資工。那年的課程對我來說都是新的，所以都聽不太懂。那幾天我有很長時間都在整理我的code，把Zerojudge的UVa題目上傳到UVa，再來就是看Running Man，於是在我隔壁的何達睿就對我說\"別耍廢了\"，我聽到他這句話就收斂了一點，因為當時我對競賽界沒那麼熟，不知道他的實力，直到他出書之後才了解他的歷程，但我有預感他會拿金牌就是了。\n\n2016的主題有DP、流、圖論、資料結構、字串、Game、數論，有些課有分基礎進階，dp是比較進階的優化，基礎圖論是有關圖的關節點，基礎資結除了STL及並查集，還有線段樹和treap，字串則是教字串匹配(KMP,Zvalue)，現在來看覺得其實也還好，2017的比較進階。\n\n那年住宿是教師會館，我覺得不錯，頗優，兩位室友人也很好。伙食部分則是重複性高，前幾天都重複相同東西，後面兩天才改善。\n\n下篇來講2017的心得。","source":"_posts/ioicamp系列-1-2016.md","raw":"---\ntitle: ioicamp系列-1 2016\ndate: 2019-01-25 14:31:55\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n2016年是我第一次參加ioicamp，我的隊友都是和我同齡的，一個就是後來拿IOI金牌的何達睿，一個後來跟我很要好，用學測進了台大資工。那年的課程對我來說都是新的，所以都聽不太懂。那幾天我有很長時間都在整理我的code，把Zerojudge的UVa題目上傳到UVa，再來就是看Running Man，於是在我隔壁的何達睿就對我說\"別耍廢了\"，我聽到他這句話就收斂了一點，因為當時我對競賽界沒那麼熟，不知道他的實力，直到他出書之後才了解他的歷程，但我有預感他會拿金牌就是了。\n\n2016的主題有DP、流、圖論、資料結構、字串、Game、數論，有些課有分基礎進階，dp是比較進階的優化，基礎圖論是有關圖的關節點，基礎資結除了STL及並查集，還有線段樹和treap，字串則是教字串匹配(KMP,Zvalue)，現在來看覺得其實也還好，2017的比較進階。\n\n那年住宿是教師會館，我覺得不錯，頗優，兩位室友人也很好。伙食部分則是重複性高，前幾天都重複相同東西，後面兩天才改善。\n\n下篇來講2017的心得。","slug":"ioicamp系列-1-2016","published":1,"updated":"2019-01-25T08:07:14.114Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sas000ahwu4lbixkrz1","content":"<p>2016年是我第一次參加ioicamp，我的隊友都是和我同齡的，一個就是後來拿IOI金牌的何達睿，一個後來跟我很要好，用學測進了台大資工。那年的課程對我來說都是新的，所以都聽不太懂。那幾天我有很長時間都在整理我的code，把Zerojudge的UVa題目上傳到UVa，再來就是看Running Man，於是在我隔壁的何達睿就對我說”別耍廢了”，我聽到他這句話就收斂了一點，因為當時我對競賽界沒那麼熟，不知道他的實力，直到他出書之後才了解他的歷程，但我有預感他會拿金牌就是了。</p>\n<p>2016的主題有DP、流、圖論、資料結構、字串、Game、數論，有些課有分基礎進階，dp是比較進階的優化，基礎圖論是有關圖的關節點，基礎資結除了STL及並查集，還有線段樹和treap，字串則是教字串匹配(KMP,Zvalue)，現在來看覺得其實也還好，2017的比較進階。</p>\n<p>那年住宿是教師會館，我覺得不錯，頗優，兩位室友人也很好。伙食部分則是重複性高，前幾天都重複相同東西，後面兩天才改善。</p>\n<p>下篇來講2017的心得。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2016年是我第一次參加ioicamp，我的隊友都是和我同齡的，一個就是後來拿IOI金牌的何達睿，一個後來跟我很要好，用學測進了台大資工。那年的課程對我來說都是新的，所以都聽不太懂。那幾天我有很長時間都在整理我的code，把Zerojudge的UVa題目上傳到UVa，再來就是看Running Man，於是在我隔壁的何達睿就對我說”別耍廢了”，我聽到他這句話就收斂了一點，因為當時我對競賽界沒那麼熟，不知道他的實力，直到他出書之後才了解他的歷程，但我有預感他會拿金牌就是了。</p>\n<p>2016的主題有DP、流、圖論、資料結構、字串、Game、數論，有些課有分基礎進階，dp是比較進階的優化，基礎圖論是有關圖的關節點，基礎資結除了STL及並查集，還有線段樹和treap，字串則是教字串匹配(KMP,Zvalue)，現在來看覺得其實也還好，2017的比較進階。</p>\n<p>那年住宿是教師會館，我覺得不錯，頗優，兩位室友人也很好。伙食部分則是重複性高，前幾天都重複相同東西，後面兩天才改善。</p>\n<p>下篇來講2017的心得。</p>\n"},{"<!-- layout":"layout -->","title":"Codeforce Farm 競賽日記 24 心得","date":"2017-02-18T07:48:12.000Z","_content":"2/17參加cf競賽日記的比賽，以下是我的感想\n結果:\nA 陣列 AC\nB 數學 賽後AC\nC QQ\nD QQ\nE QQ\n題解:\npA:水題一題，只要sort一遍，然後把奇數個和偶數個相減就AC了\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100\n\nint main(){\n\tlong long n,a[N],ans=0;\n\tcin>>n;\n\tfor(int i=0;i<2*n;i++)cin>>a[i];\n\tsort(a,a+2*n);\n\tfor(int i=0;i<n;i++)\n\t\tans+=a[2*i+1]-a[2*i];\n\tcout<<ans<<endl;\n}\n{% endcodeblock %}\npB:我原本沒想到，是學弟告訴我的，對每個數字i，先求出i個倍數個數，在C(個數,3)，在減i所有倍數的答案就AC了，至於陣列大小，A和B最大差為10^6，而(3i-i)=2i<|B-A|，所以陣列大小只要5*10^5就好了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 1000000\nlong long a,b,c,d,x,i,j,k,m,ans[N];\n\nint main(){\n\tcin>>a>>b;\n\tfor(i=1;;i++){\n\t\tc=(a/i)+1*(a%i>0);\n\t\td=(b/i);\n\t\tx=d-c+1;\n\t\tif(x<3)break;\n\t\tans[i]=x*(x-1)*(x-2)/6;\n\t\t}\n\tfor(k=i;i;i--){\n\t\tfor(j=k;j>i;j--){\n\t\t\tif(j%i==0)\n\t\t\t\tans[i]-=ans[j];\n\t\t}\n\t}\n\tfor(i=1;i<=k;i++){\n\t\tif(ans[i]>0)\n\t\t\tcout<<i<<' '<<ans[i]<<endl;\n\t}\n}\n{% endcodeblock %}","source":"_posts/farm24心得.md","raw":"<!-- layout: layout -->\ntitle: Codeforce Farm 競賽日記 24 心得\ndate: 2017-02-18 15:48:12\ncategory: Codeforce\ntags: \n- Codeforce\n- Twicpc\n- 陣列\n- 數學\n---\n2/17參加cf競賽日記的比賽，以下是我的感想\n結果:\nA 陣列 AC\nB 數學 賽後AC\nC QQ\nD QQ\nE QQ\n題解:\npA:水題一題，只要sort一遍，然後把奇數個和偶數個相減就AC了\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 100\n\nint main(){\n\tlong long n,a[N],ans=0;\n\tcin>>n;\n\tfor(int i=0;i<2*n;i++)cin>>a[i];\n\tsort(a,a+2*n);\n\tfor(int i=0;i<n;i++)\n\t\tans+=a[2*i+1]-a[2*i];\n\tcout<<ans<<endl;\n}\n{% endcodeblock %}\npB:我原本沒想到，是學弟告訴我的，對每個數字i，先求出i個倍數個數，在C(個數,3)，在減i所有倍數的答案就AC了，至於陣列大小，A和B最大差為10^6，而(3i-i)=2i<|B-A|，所以陣列大小只要5*10^5就好了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\n#define N 1000000\nlong long a,b,c,d,x,i,j,k,m,ans[N];\n\nint main(){\n\tcin>>a>>b;\n\tfor(i=1;;i++){\n\t\tc=(a/i)+1*(a%i>0);\n\t\td=(b/i);\n\t\tx=d-c+1;\n\t\tif(x<3)break;\n\t\tans[i]=x*(x-1)*(x-2)/6;\n\t\t}\n\tfor(k=i;i;i--){\n\t\tfor(j=k;j>i;j--){\n\t\t\tif(j%i==0)\n\t\t\t\tans[i]-=ans[j];\n\t\t}\n\t}\n\tfor(i=1;i<=k;i++){\n\t\tif(ans[i]>0)\n\t\t\tcout<<i<<' '<<ans[i]<<endl;\n\t}\n}\n{% endcodeblock %}","slug":"farm24心得","published":1,"updated":"2019-01-21T02:30:54.783Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sau000bhwu44sfl4pu7","content":"<p>2/17參加cf競賽日記的比賽，以下是我的感想<br>結果:<br>A 陣列 AC<br>B 數學 賽後AC<br>C QQ<br>D QQ<br>E QQ<br>題解:<br>pA:水題一題，只要sort一遍，然後把奇數個和偶數個相減就AC了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,a[N],ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>*n;i++)<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">2</span>*n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\tans+=a[<span class=\"number\">2</span>*i+<span class=\"number\">1</span>]-a[<span class=\"number\">2</span>*i];</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB:我原本沒想到，是學弟告訴我的，對每個數字i，先求出i個倍數個數，在C(個數,3)，在減i所有倍數的答案就AC了，至於陣列大小，A和B最大差為10^6，而(3i-i)=2i&lt;|B-A|，所以陣列大小只要5*10^5就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 1000000</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,b,c,d,x,i,j,k,m,ans[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;;i++)&#123;</span><br><span class=\"line\">\t\tc=(a/i)+<span class=\"number\">1</span>*(a%i&gt;<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\td=(b/i);</span><br><span class=\"line\">\t\tx=d-c+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">3</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tans[i]=x*(x<span class=\"number\">-1</span>)*(x<span class=\"number\">-2</span>)/<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(k=i;i;i--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=k;j&gt;i;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\tans[i]-=ans[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=k;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans[i]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;ans[i]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>2/17參加cf競賽日記的比賽，以下是我的感想<br>結果:<br>A 陣列 AC<br>B 數學 賽後AC<br>C QQ<br>D QQ<br>E QQ<br>題解:<br>pA:水題一題，只要sort一遍，然後把奇數個和偶數個相減就AC了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">long</span> <span class=\"keyword\">long</span> n,a[N],ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">2</span>*n;i++)<span class=\"built_in\">cin</span>&gt;&gt;a[i];</span><br><span class=\"line\">\tsort(a,a+<span class=\"number\">2</span>*n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)</span><br><span class=\"line\">\t\tans+=a[<span class=\"number\">2</span>*i+<span class=\"number\">1</span>]-a[<span class=\"number\">2</span>*i];</span><br><span class=\"line\">\t<span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>pB:我原本沒想到，是學弟告訴我的，對每個數字i，先求出i個倍數個數，在C(個數,3)，在減i所有倍數的答案就AC了，至於陣列大小，A和B最大差為10^6，而(3i-i)=2i&lt;|B-A|，所以陣列大小只要5*10^5就好了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 1000000</span></span><br><span class=\"line\"><span class=\"keyword\">long</span> <span class=\"keyword\">long</span> a,b,c,d,x,i,j,k,m,ans[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span>&gt;&gt;a&gt;&gt;b;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;;i++)&#123;</span><br><span class=\"line\">\t\tc=(a/i)+<span class=\"number\">1</span>*(a%i&gt;<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\td=(b/i);</span><br><span class=\"line\">\t\tx=d-c+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">3</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\tans[i]=x*(x<span class=\"number\">-1</span>)*(x<span class=\"number\">-2</span>)/<span class=\"number\">6</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(k=i;i;i--)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(j=k;j&gt;i;j--)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(j%i==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t\tans[i]-=ans[j];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=k;i++)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ans[i]&gt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span>&lt;&lt;i&lt;&lt;<span class=\"string\">' '</span>&lt;&lt;ans[i]&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"ioicamp系列-10 總結","date":"2019-02-03T01:47:59.000Z","_content":"經過這次營隊，我收穫的滿多，有很多以前聽不懂的，這次終於聽懂了，也學到一些沒有看過的東西，如果要精熟這些東西，就只有一個方法，那就是不段的think, create, solve，才能成為電神。","source":"_posts/ioicamp系列-10-總結.md","raw":"---\ntitle: ioicamp系列-10 總結\ndate: 2019-02-03 09:47:59\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n經過這次營隊，我收穫的滿多，有很多以前聽不懂的，這次終於聽懂了，也學到一些沒有看過的東西，如果要精熟這些東西，就只有一個方法，那就是不段的think, create, solve，才能成為電神。","slug":"ioicamp系列-10-總結","published":1,"updated":"2019-02-03T02:24:34.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sax000chwu4ahb70bxp","content":"<p>經過這次營隊，我收穫的滿多，有很多以前聽不懂的，這次終於聽懂了，也學到一些沒有看過的東西，如果要精熟這些東西，就只有一個方法，那就是不段的think, create, solve，才能成為電神。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>經過這次營隊，我收穫的滿多，有很多以前聽不懂的，這次終於聽懂了，也學到一些沒有看過的東西，如果要精熟這些東西，就只有一個方法，那就是不段的think, create, solve，才能成為電神。</p>\n"},{"title":"ioicamp系列-2 2017","date":"2019-01-26T06:23:45.000Z","_content":"2017就是我第二次去ioicamp，先提一下，16年板中有一位學長跟我一起去，17年則是有一位學弟Brian Tsai陪我去，兩位都滿有實力，其中學弟去年還進入TOI 2!。而我的隊友一位是和我同年的虞樸，一位是和我學弟同年的建中學弟(OT*n)。經過上一次經驗，這次比較能吸收，算是有進步吧。\n\n這次的第一天同樣是講DP，課程也同樣是斜率優化，其他課程有數論、數、字串、Game，但比前一次多很多東西，增加幾何還有捲積，捲積根本不知道在幹嘛。然後來分享的講師是黃以文，他提供了一個網站(https://github.com/lnishan/awesome-competitive-programming) ，滿好用的，之後大一升大二暑假訓練營的講師，也是由他幫忙找到的。\n\n這次住宿是在西門的高絲旅館，和學弟及兩位宜蘭的人一起住，一個上次跟我同隊，但我忘記了(母湯)，一個上次跟我也是室友，我們四個相處不錯，還在CF上創了一支隊伍teawater，但後來發現沒什麼用就是了，這旅館跟16年比還算可以，只是聽的到麻將聲。至於餐點部分應該是根據前次的經驗，每天都不一樣，吃得很開心。\n\n下篇來講今年期許。","source":"_posts/ioicamp系列-2-2017.md","raw":"---\ntitle: ioicamp系列-2 2017\ndate: 2019-01-26 14:23:45\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n2017就是我第二次去ioicamp，先提一下，16年板中有一位學長跟我一起去，17年則是有一位學弟Brian Tsai陪我去，兩位都滿有實力，其中學弟去年還進入TOI 2!。而我的隊友一位是和我同年的虞樸，一位是和我學弟同年的建中學弟(OT*n)。經過上一次經驗，這次比較能吸收，算是有進步吧。\n\n這次的第一天同樣是講DP，課程也同樣是斜率優化，其他課程有數論、數、字串、Game，但比前一次多很多東西，增加幾何還有捲積，捲積根本不知道在幹嘛。然後來分享的講師是黃以文，他提供了一個網站(https://github.com/lnishan/awesome-competitive-programming) ，滿好用的，之後大一升大二暑假訓練營的講師，也是由他幫忙找到的。\n\n這次住宿是在西門的高絲旅館，和學弟及兩位宜蘭的人一起住，一個上次跟我同隊，但我忘記了(母湯)，一個上次跟我也是室友，我們四個相處不錯，還在CF上創了一支隊伍teawater，但後來發現沒什麼用就是了，這旅館跟16年比還算可以，只是聽的到麻將聲。至於餐點部分應該是根據前次的經驗，每天都不一樣，吃得很開心。\n\n下篇來講今年期許。","slug":"ioicamp系列-2-2017","published":1,"updated":"2019-01-26T07:39:03.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5say000dhwu447rdtv26","content":"<p>2017就是我第二次去ioicamp，先提一下，16年板中有一位學長跟我一起去，17年則是有一位學弟Brian Tsai陪我去，兩位都滿有實力，其中學弟去年還進入TOI 2!。而我的隊友一位是和我同年的虞樸，一位是和我學弟同年的建中學弟(OT*n)。經過上一次經驗，這次比較能吸收，算是有進步吧。</p>\n<p>這次的第一天同樣是講DP，課程也同樣是斜率優化，其他課程有數論、數、字串、Game，但比前一次多很多東西，增加幾何還有捲積，捲積根本不知道在幹嘛。然後來分享的講師是黃以文，他提供了一個網站(<a href=\"https://github.com/lnishan/awesome-competitive-programming\" target=\"_blank\" rel=\"noopener\">https://github.com/lnishan/awesome-competitive-programming</a>) ，滿好用的，之後大一升大二暑假訓練營的講師，也是由他幫忙找到的。</p>\n<p>這次住宿是在西門的高絲旅館，和學弟及兩位宜蘭的人一起住，一個上次跟我同隊，但我忘記了(母湯)，一個上次跟我也是室友，我們四個相處不錯，還在CF上創了一支隊伍teawater，但後來發現沒什麼用就是了，這旅館跟16年比還算可以，只是聽的到麻將聲。至於餐點部分應該是根據前次的經驗，每天都不一樣，吃得很開心。</p>\n<p>下篇來講今年期許。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>2017就是我第二次去ioicamp，先提一下，16年板中有一位學長跟我一起去，17年則是有一位學弟Brian Tsai陪我去，兩位都滿有實力，其中學弟去年還進入TOI 2!。而我的隊友一位是和我同年的虞樸，一位是和我學弟同年的建中學弟(OT*n)。經過上一次經驗，這次比較能吸收，算是有進步吧。</p>\n<p>這次的第一天同樣是講DP，課程也同樣是斜率優化，其他課程有數論、數、字串、Game，但比前一次多很多東西，增加幾何還有捲積，捲積根本不知道在幹嘛。然後來分享的講師是黃以文，他提供了一個網站(<a href=\"https://github.com/lnishan/awesome-competitive-programming\" target=\"_blank\" rel=\"noopener\">https://github.com/lnishan/awesome-competitive-programming</a>) ，滿好用的，之後大一升大二暑假訓練營的講師，也是由他幫忙找到的。</p>\n<p>這次住宿是在西門的高絲旅館，和學弟及兩位宜蘭的人一起住，一個上次跟我同隊，但我忘記了(母湯)，一個上次跟我也是室友，我們四個相處不錯，還在CF上創了一支隊伍teawater，但後來發現沒什麼用就是了，這旅館跟16年比還算可以，只是聽的到麻將聲。至於餐點部分應該是根據前次的經驗，每天都不一樣，吃得很開心。</p>\n<p>下篇來講今年期許。</p>\n"},{"title":"ioicamp系列-3 今年期許","date":"2019-01-27T12:45:52.000Z","_content":"對於今年，我當然希望能吸收越多越好，可是這個目標不夠具體，所以我就以每天的練習賽做為目標，希望個人賽(2場)維持在前20名，團體賽(3場)維持在前7名。就等到最後再來回顧到底達標幾天呢?\n\n接下來的幾天，我都會發每日心得文(最晚隔一天po)，還請各位持續鎖定(根本沒什麼人在看)。","source":"_posts/ioicamp系列-3-今年期許.md","raw":"---\ntitle: ioicamp系列-3 今年期許\ndate: 2019-01-27 20:45:52\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n對於今年，我當然希望能吸收越多越好，可是這個目標不夠具體，所以我就以每天的練習賽做為目標，希望個人賽(2場)維持在前20名，團體賽(3場)維持在前7名。就等到最後再來回顧到底達標幾天呢?\n\n接下來的幾天，我都會發每日心得文(最晚隔一天po)，還請各位持續鎖定(根本沒什麼人在看)。","slug":"ioicamp系列-3-今年期許","published":1,"updated":"2019-01-27T12:58:37.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb0000ehwu45o7lkqv8","content":"<p>對於今年，我當然希望能吸收越多越好，可是這個目標不夠具體，所以我就以每天的練習賽做為目標，希望個人賽(2場)維持在前20名，團體賽(3場)維持在前7名。就等到最後再來回顧到底達標幾天呢?</p>\n<p>接下來的幾天，我都會發每日心得文(最晚隔一天po)，還請各位持續鎖定(根本沒什麼人在看)。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>對於今年，我當然希望能吸收越多越好，可是這個目標不夠具體，所以我就以每天的練習賽做為目標，希望個人賽(2場)維持在前20名，團體賽(3場)維持在前7名。就等到最後再來回顧到底達標幾天呢?</p>\n<p>接下來的幾天，我都會發每日心得文(最晚隔一天po)，還請各位持續鎖定(根本沒什麼人在看)。</p>\n"},{"title":"ioicamp系列-4 Day0","date":"2019-01-28T10:53:41.000Z","_content":"營隊前一天，我在寫選修課的習題，維持手感，研究課表，規劃學習時程。確認有沒有整理好東西，晚上早早就去睡，以免隔天很累。全天沉浸在程式中，對於營隊有滿滿的信心，這次可以進步非常多。","source":"_posts/ioicamp系列-4-Day0.md","raw":"---\ntitle: ioicamp系列-4 Day0\ndate: 2019-01-28 18:53:41\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n營隊前一天，我在寫選修課的習題，維持手感，研究課表，規劃學習時程。確認有沒有整理好東西，晚上早早就去睡，以免隔天很累。全天沉浸在程式中，對於營隊有滿滿的信心，這次可以進步非常多。","slug":"ioicamp系列-4-Day0","published":1,"updated":"2019-01-29T05:55:05.297Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb1000fhwu4j38jdc46","content":"<p>營隊前一天，我在寫選修課的習題，維持手感，研究課表，規劃學習時程。確認有沒有整理好東西，晚上早早就去睡，以免隔天很累。全天沉浸在程式中，對於營隊有滿滿的信心，這次可以進步非常多。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>營隊前一天，我在寫選修課的習題，維持手感，研究課表，規劃學習時程。確認有沒有整理好東西，晚上早早就去睡，以免隔天很累。全天沉浸在程式中，對於營隊有滿滿的信心，這次可以進步非常多。</p>\n"},{"title":"ioicamp系列-5 Day1","date":"2019-01-29T05:52:30.000Z","_content":"第一天早上就先來個暖身，eddy時間，來分享一些程式競賽的經驗，因為今年有4個贊助，所以前4天下午都有業配，在業配時就在繼續打選修課的題目，意識到下學期選修課要多一點幾何題目才行。\n\n接下來下午的課是Game，以往第一堂都是DP，今年這樣改變我覺得不錯，因為Game比較簡單，這是我第三次上這個課我這次終於懂了一題題目，成就感微升。\n\n晚上是趣味賽，這次有四種題目，除蟲題、駭客題、建構題以及填充題，最有趣的是所有EX題，會因為有更好的解會在rejudge，最後排名15/24，算是有點差強人意，尤其是我只貢獻了一題QQ。\n\n今年的Judge是有TIOJ的系統，匿名可以用latex，就出現很多有趣的名字XD。","source":"_posts/ioicamp系列-5-Day1.md","raw":"---\ntitle: ioicamp系列-5 Day1\ndate: 2019-01-29 13:52:30\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n第一天早上就先來個暖身，eddy時間，來分享一些程式競賽的經驗，因為今年有4個贊助，所以前4天下午都有業配，在業配時就在繼續打選修課的題目，意識到下學期選修課要多一點幾何題目才行。\n\n接下來下午的課是Game，以往第一堂都是DP，今年這樣改變我覺得不錯，因為Game比較簡單，這是我第三次上這個課我這次終於懂了一題題目，成就感微升。\n\n晚上是趣味賽，這次有四種題目，除蟲題、駭客題、建構題以及填充題，最有趣的是所有EX題，會因為有更好的解會在rejudge，最後排名15/24，算是有點差強人意，尤其是我只貢獻了一題QQ。\n\n今年的Judge是有TIOJ的系統，匿名可以用latex，就出現很多有趣的名字XD。","slug":"ioicamp系列-5-Day1","published":1,"updated":"2019-01-29T06:16:24.373Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb1000ghwu40cpccaim","content":"<p>第一天早上就先來個暖身，eddy時間，來分享一些程式競賽的經驗，因為今年有4個贊助，所以前4天下午都有業配，在業配時就在繼續打選修課的題目，意識到下學期選修課要多一點幾何題目才行。</p>\n<p>接下來下午的課是Game，以往第一堂都是DP，今年這樣改變我覺得不錯，因為Game比較簡單，這是我第三次上這個課我這次終於懂了一題題目，成就感微升。</p>\n<p>晚上是趣味賽，這次有四種題目，除蟲題、駭客題、建構題以及填充題，最有趣的是所有EX題，會因為有更好的解會在rejudge，最後排名15/24，算是有點差強人意，尤其是我只貢獻了一題QQ。</p>\n<p>今年的Judge是有TIOJ的系統，匿名可以用latex，就出現很多有趣的名字XD。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一天早上就先來個暖身，eddy時間，來分享一些程式競賽的經驗，因為今年有4個贊助，所以前4天下午都有業配，在業配時就在繼續打選修課的題目，意識到下學期選修課要多一點幾何題目才行。</p>\n<p>接下來下午的課是Game，以往第一堂都是DP，今年這樣改變我覺得不錯，因為Game比較簡單，這是我第三次上這個課我這次終於懂了一題題目，成就感微升。</p>\n<p>晚上是趣味賽，這次有四種題目，除蟲題、駭客題、建構題以及填充題，最有趣的是所有EX題，會因為有更好的解會在rejudge，最後排名15/24，算是有點差強人意，尤其是我只貢獻了一題QQ。</p>\n<p>今年的Judge是有TIOJ的系統，匿名可以用latex，就出現很多有趣的名字XD。</p>\n"},{"title":"ioicamp系列-6 Day2","date":"2019-01-30T12:48:12.000Z","_content":"第二天上的課就是數論和圖論了，數論前面還算可以，但到後面就逐漸母湯，先是從上次就是魔王的捲積，這次好不容易聽比較懂了，沒想到後面又來個線性組合(翻桌。下午是圖論，前面再講圖的連通，後面再講其他圖的問題。然後Day2業配是微軟，覺得不錯，有幾位打ICPC的，O(1)梗依然持續用。\n\n而第二天是個人賽，我解了兩題，算普通，一題梗題，一題Game，有Nim一題卡住了，我一直誤會他的算法。排名中等，順便一題，解2題的約40~50位。","source":"_posts/ioicamp系列-6-Day2.md","raw":"---\ntitle: ioicamp系列-6 Day2\ndate: 2019-01-30 20:48:12\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n第二天上的課就是數論和圖論了，數論前面還算可以，但到後面就逐漸母湯，先是從上次就是魔王的捲積，這次好不容易聽比較懂了，沒想到後面又來個線性組合(翻桌。下午是圖論，前面再講圖的連通，後面再講其他圖的問題。然後Day2業配是微軟，覺得不錯，有幾位打ICPC的，O(1)梗依然持續用。\n\n而第二天是個人賽，我解了兩題，算普通，一題梗題，一題Game，有Nim一題卡住了，我一直誤會他的算法。排名中等，順便一題，解2題的約40~50位。","slug":"ioicamp系列-6-Day2","published":1,"updated":"2019-01-30T16:33:57.427Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb3000hhwu45weens2r","content":"<p>第二天上的課就是數論和圖論了，數論前面還算可以，但到後面就逐漸母湯，先是從上次就是魔王的捲積，這次好不容易聽比較懂了，沒想到後面又來個線性組合(翻桌。下午是圖論，前面再講圖的連通，後面再講其他圖的問題。然後Day2業配是微軟，覺得不錯，有幾位打ICPC的，O(1)梗依然持續用。</p>\n<p>而第二天是個人賽，我解了兩題，算普通，一題梗題，一題Game，有Nim一題卡住了，我一直誤會他的算法。排名中等，順便一題，解2題的約40~50位。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第二天上的課就是數論和圖論了，數論前面還算可以，但到後面就逐漸母湯，先是從上次就是魔王的捲積，這次好不容易聽比較懂了，沒想到後面又來個線性組合(翻桌。下午是圖論，前面再講圖的連通，後面再講其他圖的問題。然後Day2業配是微軟，覺得不錯，有幾位打ICPC的，O(1)梗依然持續用。</p>\n<p>而第二天是個人賽，我解了兩題，算普通，一題梗題，一題Game，有Nim一題卡住了，我一直誤會他的算法。排名中等，順便一題，解2題的約40~50位。</p>\n"},{"title":"ioicamp系列-8 Day4","date":"2019-02-01T01:44:19.000Z","_content":"早上起來發現感冒了，最先吃喉糖潤喉一下。然後上午的課是流，課程大部分的時間都在教如何建模，讓我吸收很多，下午的課是DP，前面教得比較基礎，後面突然跳到斜率優化，甚至是Aliens優化(???。晚餐是吃披薩，滿驚喜的，比賽之前有填問卷，有一個人只有填\"貓\"，大家都笑了XD。晚上是個人賽，題目頗難，很多人都是一題，我因為從下午就不舒服，比到一半就睡了，這場比賽最後半小時有封版，雖然AC的人很少，不過還是很好玩。","source":"_posts/ioicamp系列-8-Day4.md","raw":"---\ntitle: ioicamp系列-8 Day4\ndate: 2019-02-01 09:44:19\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n早上起來發現感冒了，最先吃喉糖潤喉一下。然後上午的課是流，課程大部分的時間都在教如何建模，讓我吸收很多，下午的課是DP，前面教得比較基礎，後面突然跳到斜率優化，甚至是Aliens優化(???。晚餐是吃披薩，滿驚喜的，比賽之前有填問卷，有一個人只有填\"貓\"，大家都笑了XD。晚上是個人賽，題目頗難，很多人都是一題，我因為從下午就不舒服，比到一半就睡了，這場比賽最後半小時有封版，雖然AC的人很少，不過還是很好玩。","slug":"ioicamp系列-8-Day4","published":1,"updated":"2019-02-01T02:08:45.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb4000ihwu41oni1tg2","content":"<p>早上起來發現感冒了，最先吃喉糖潤喉一下。然後上午的課是流，課程大部分的時間都在教如何建模，讓我吸收很多，下午的課是DP，前面教得比較基礎，後面突然跳到斜率優化，甚至是Aliens優化(???。晚餐是吃披薩，滿驚喜的，比賽之前有填問卷，有一個人只有填”貓”，大家都笑了XD。晚上是個人賽，題目頗難，很多人都是一題，我因為從下午就不舒服，比到一半就睡了，這場比賽最後半小時有封版，雖然AC的人很少，不過還是很好玩。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>早上起來發現感冒了，最先吃喉糖潤喉一下。然後上午的課是流，課程大部分的時間都在教如何建模，讓我吸收很多，下午的課是DP，前面教得比較基礎，後面突然跳到斜率優化，甚至是Aliens優化(???。晚餐是吃披薩，滿驚喜的，比賽之前有填問卷，有一個人只有填”貓”，大家都笑了XD。晚上是個人賽，題目頗難，很多人都是一題，我因為從下午就不舒服，比到一半就睡了，這場比賽最後半小時有封版，雖然AC的人很少，不過還是很好玩。</p>\n"},{"title":"ioicamp系列-7 Day3","date":"2019-02-01T01:18:41.000Z","_content":"第三天早上是總召上的序列課程，前面上是整體分治跟分塊，還聽得懂，後面講一些難的題目就聽不太懂了。下午先是MixerBox，是最好的業配時間，我還拿到了禮物，接下來就是團體賽，第一題一樣是梗題，被騙了，第二題是Nim，一下就解了兩題，後來就靠隊友Carry，最終第三名。晚上是題解時間，把前三天的題目說一下，不得不說有些題目真的根本解不出來。","source":"_posts/ioicamp系列-7-Day3.md","raw":"---\ntitle: ioicamp系列-7 Day3\ndate: 2019-02-01 09:18:41\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n第三天早上是總召上的序列課程，前面上是整體分治跟分塊，還聽得懂，後面講一些難的題目就聽不太懂了。下午先是MixerBox，是最好的業配時間，我還拿到了禮物，接下來就是團體賽，第一題一樣是梗題，被騙了，第二題是Nim，一下就解了兩題，後來就靠隊友Carry，最終第三名。晚上是題解時間，把前三天的題目說一下，不得不說有些題目真的根本解不出來。","slug":"ioicamp系列-7-Day3","published":1,"updated":"2019-02-01T01:43:24.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb4000jhwu41qergd3p","content":"<p>第三天早上是總召上的序列課程，前面上是整體分治跟分塊，還聽得懂，後面講一些難的題目就聽不太懂了。下午先是MixerBox，是最好的業配時間，我還拿到了禮物，接下來就是團體賽，第一題一樣是梗題，被騙了，第二題是Nim，一下就解了兩題，後來就靠隊友Carry，最終第三名。晚上是題解時間，把前三天的題目說一下，不得不說有些題目真的根本解不出來。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第三天早上是總召上的序列課程，前面上是整體分治跟分塊，還聽得懂，後面講一些難的題目就聽不太懂了。下午先是MixerBox，是最好的業配時間，我還拿到了禮物，接下來就是團體賽，第一題一樣是梗題，被騙了，第二題是Nim，一下就解了兩題，後來就靠隊友Carry，最終第三名。晚上是題解時間，把前三天的題目說一下，不得不說有些題目真的根本解不出來。</p>\n"},{"title":"ioicamp系列-9 Day5","date":"2019-02-02T13:08:49.000Z","_content":"這天起來覺得身體比較好了，可以比較專心聽課。早上是Dreamoon上課，他先放閃一波，接著講他的經歷後，才進入正題，講的是用枚舉的觀念來講一些例題，最後帶到枚舉+二分搜來講第K短路問題，覺得滿實用的。下午就是團體賽，首先我們先去拍照，拍照是利用了O(1)之亂的梗。再來進入正式賽，我前面一直在解Game題，解不出來，後來看到PB，發現只要一直DFS就過了，就只AC了那一題，同樣地靠著我的隊友們，我們最後獲得第三名，一人得到一隻滑鼠+優惠券*3。最後90mins是封版的，後來開講的過程超刺激，最後一名的寶座一直在換XDD。比完賽就結束了。","source":"_posts/ioicamp系列-9-Day5.md","raw":"---\ntitle: ioicamp系列-9 Day5\ndate: 2019-02-02 21:08:49\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\n這天起來覺得身體比較好了，可以比較專心聽課。早上是Dreamoon上課，他先放閃一波，接著講他的經歷後，才進入正題，講的是用枚舉的觀念來講一些例題，最後帶到枚舉+二分搜來講第K短路問題，覺得滿實用的。下午就是團體賽，首先我們先去拍照，拍照是利用了O(1)之亂的梗。再來進入正式賽，我前面一直在解Game題，解不出來，後來看到PB，發現只要一直DFS就過了，就只AC了那一題，同樣地靠著我的隊友們，我們最後獲得第三名，一人得到一隻滑鼠+優惠券*3。最後90mins是封版的，後來開講的過程超刺激，最後一名的寶座一直在換XDD。比完賽就結束了。","slug":"ioicamp系列-9-Day5","published":1,"updated":"2019-02-02T14:40:20.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb8000khwu40r9nj0e2","content":"<p>這天起來覺得身體比較好了，可以比較專心聽課。早上是Dreamoon上課，他先放閃一波，接著講他的經歷後，才進入正題，講的是用枚舉的觀念來講一些例題，最後帶到枚舉+二分搜來講第K短路問題，覺得滿實用的。下午就是團體賽，首先我們先去拍照，拍照是利用了O(1)之亂的梗。再來進入正式賽，我前面一直在解Game題，解不出來，後來看到PB，發現只要一直DFS就過了，就只AC了那一題，同樣地靠著我的隊友們，我們最後獲得第三名，一人得到一隻滑鼠+優惠券*3。最後90mins是封版的，後來開講的過程超刺激，最後一名的寶座一直在換XDD。比完賽就結束了。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>這天起來覺得身體比較好了，可以比較專心聽課。早上是Dreamoon上課，他先放閃一波，接著講他的經歷後，才進入正題，講的是用枚舉的觀念來講一些例題，最後帶到枚舉+二分搜來講第K短路問題，覺得滿實用的。下午就是團體賽，首先我們先去拍照，拍照是利用了O(1)之亂的梗。再來進入正式賽，我前面一直在解Game題，解不出來，後來看到PB，發現只要一直DFS就過了，就只AC了那一題，同樣地靠著我的隊友們，我們最後獲得第三名，一人得到一隻滑鼠+優惠券*3。最後90mins是封版的，後來開講的過程超刺激，最後一名的寶座一直在換XDD。比完賽就結束了。</p>\n"},{"title":"ioicamp系列 前文","date":"2019-01-24T14:16:27.000Z","_content":"ioicamp是台大辦的程式競賽解題營隊，我第一次參加是三年前，也就是我高二，因為課程非常地難，所以我剛開始聽不懂。接下來隔一年再次參加，我停得懂一些，在遇到某些章節還是覺得像天書一樣無法理解。這個營隊我覺得成果要一段時間才能浮現，當然練習是必要的。今年，我想藉由寫日誌的方式，回顧以往的經驗，記錄今年的足跡，進而規劃未來。\n\n先說一下現在情況好了，寫上學期選修給的UVs題目維持手感。這幾天背部有點酸痛，希望可以趕快消除，否則ioicamp可能會更不舒服。這兩天在系上資安寒訓，在心已飄在ioicamp，期待著五天的課程，期待著隊友是誰，期待著自己能夠進步，並跟著輔大的同學們一起進步，期待著......\n\n總之，連續這幾天都會發有關ioicamp的文章，和大家分享我在ioicamp的歷程。","source":"_posts/ioicamp系列-前文.md","raw":"---\ntitle: ioicamp系列 前文\ndate: 2019-01-24 22:16:27\ncategory: Ioicamp\ntags:\n- Ioicamp\n---\nioicamp是台大辦的程式競賽解題營隊，我第一次參加是三年前，也就是我高二，因為課程非常地難，所以我剛開始聽不懂。接下來隔一年再次參加，我停得懂一些，在遇到某些章節還是覺得像天書一樣無法理解。這個營隊我覺得成果要一段時間才能浮現，當然練習是必要的。今年，我想藉由寫日誌的方式，回顧以往的經驗，記錄今年的足跡，進而規劃未來。\n\n先說一下現在情況好了，寫上學期選修給的UVs題目維持手感。這幾天背部有點酸痛，希望可以趕快消除，否則ioicamp可能會更不舒服。這兩天在系上資安寒訓，在心已飄在ioicamp，期待著五天的課程，期待著隊友是誰，期待著自己能夠進步，並跟著輔大的同學們一起進步，期待著......\n\n總之，連續這幾天都會發有關ioicamp的文章，和大家分享我在ioicamp的歷程。","slug":"ioicamp系列-前文","published":1,"updated":"2019-01-24T14:52:39.799Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sb9000lhwu44h9vg65b","content":"<p>ioicamp是台大辦的程式競賽解題營隊，我第一次參加是三年前，也就是我高二，因為課程非常地難，所以我剛開始聽不懂。接下來隔一年再次參加，我停得懂一些，在遇到某些章節還是覺得像天書一樣無法理解。這個營隊我覺得成果要一段時間才能浮現，當然練習是必要的。今年，我想藉由寫日誌的方式，回顧以往的經驗，記錄今年的足跡，進而規劃未來。</p>\n<p>先說一下現在情況好了，寫上學期選修給的UVs題目維持手感。這幾天背部有點酸痛，希望可以趕快消除，否則ioicamp可能會更不舒服。這兩天在系上資安寒訓，在心已飄在ioicamp，期待著五天的課程，期待著隊友是誰，期待著自己能夠進步，並跟著輔大的同學們一起進步，期待著……</p>\n<p>總之，連續這幾天都會發有關ioicamp的文章，和大家分享我在ioicamp的歷程。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>ioicamp是台大辦的程式競賽解題營隊，我第一次參加是三年前，也就是我高二，因為課程非常地難，所以我剛開始聽不懂。接下來隔一年再次參加，我停得懂一些，在遇到某些章節還是覺得像天書一樣無法理解。這個營隊我覺得成果要一段時間才能浮現，當然練習是必要的。今年，我想藉由寫日誌的方式，回顧以往的經驗，記錄今年的足跡，進而規劃未來。</p>\n<p>先說一下現在情況好了，寫上學期選修給的UVs題目維持手感。這幾天背部有點酸痛，希望可以趕快消除，否則ioicamp可能會更不舒服。這兩天在系上資安寒訓，在心已飄在ioicamp，期待著五天的課程，期待著隊友是誰，期待著自己能夠進步，並跟著輔大的同學們一起進步，期待著……</p>\n<p>總之，連續這幾天都會發有關ioicamp的文章，和大家分享我在ioicamp的歷程。</p>\n"},{"title":"prefix and postfix","date":"2019-04-05T06:14:33.000Z","_content":"在很多程式語言都有prefix and postfix ++/--，常用在迴圈上。通常我們會看到的差異是先改值或先傳值，在使用設面沒有特別注意其他事情。最近我了解到實作上的差異，prefix是直接改值，postfix則是先複製一份物件，然後再改值，這樣的結果會使postfix多生成一個物件，因此如果可以的話，要使用prefix++/--。\nexample from https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019\n{% codeblock lang:cpp %}\n// increment_and_decrement1.cpp\nclass Point\n{\npublic:\n   // Declare prefix and postfix increment operators.\n   Point& operator++();       // Prefix increment operator.\n   Point operator++(int);     // Postfix increment operator.\n\n   // Declare prefix and postfix decrement operators.\n   Point& operator--();       // Prefix decrement operator.\n   Point operator--(int);     // Postfix decrement operator.\n\n   // Define default constructor.\n   Point() { _x = _y = 0; }\n\n   // Define accessor functions.\n   int x() { return _x; }\n   int y() { return _y; }\nprivate:\n   int _x, _y;\n};\n\n// Define prefix increment operator.\nPoint& Point::operator++()\n{\n   _x++;\n   _y++;\n   return *this;\n}\n\n// Define postfix increment operator.\nPoint Point::operator++(int)\n{\n   Point temp = *this;\n   ++*this;\n   return temp;\n}\n\n// Define prefix decrement operator.\nPoint& Point::operator--()\n{\n   _x--;\n   _y--;\n   return *this;\n}\n\n// Define postfix decrement operator.\nPoint Point::operator--(int)\n{\n   Point temp = *this;\n   --*this;\n   return temp;\n}\nint main()\n{\n}\n{% endcodeblock %}","source":"_posts/prefix-and-postfix.md","raw":"---\ntitle: prefix and postfix\ndate: 2019-04-05 14:14:33\ncategory: 隨筆\ntags:\n- 隨筆\n---\n在很多程式語言都有prefix and postfix ++/--，常用在迴圈上。通常我們會看到的差異是先改值或先傳值，在使用設面沒有特別注意其他事情。最近我了解到實作上的差異，prefix是直接改值，postfix則是先複製一份物件，然後再改值，這樣的結果會使postfix多生成一個物件，因此如果可以的話，要使用prefix++/--。\nexample from https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019\n{% codeblock lang:cpp %}\n// increment_and_decrement1.cpp\nclass Point\n{\npublic:\n   // Declare prefix and postfix increment operators.\n   Point& operator++();       // Prefix increment operator.\n   Point operator++(int);     // Postfix increment operator.\n\n   // Declare prefix and postfix decrement operators.\n   Point& operator--();       // Prefix decrement operator.\n   Point operator--(int);     // Postfix decrement operator.\n\n   // Define default constructor.\n   Point() { _x = _y = 0; }\n\n   // Define accessor functions.\n   int x() { return _x; }\n   int y() { return _y; }\nprivate:\n   int _x, _y;\n};\n\n// Define prefix increment operator.\nPoint& Point::operator++()\n{\n   _x++;\n   _y++;\n   return *this;\n}\n\n// Define postfix increment operator.\nPoint Point::operator++(int)\n{\n   Point temp = *this;\n   ++*this;\n   return temp;\n}\n\n// Define prefix decrement operator.\nPoint& Point::operator--()\n{\n   _x--;\n   _y--;\n   return *this;\n}\n\n// Define postfix decrement operator.\nPoint Point::operator--(int)\n{\n   Point temp = *this;\n   --*this;\n   return temp;\n}\nint main()\n{\n}\n{% endcodeblock %}","slug":"prefix-and-postfix","published":1,"updated":"2019-07-12T08:37:51.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sba000mhwu40dju22ro","content":"<p>在很多程式語言都有prefix and postfix ++/–，常用在迴圈上。通常我們會看到的差異是先改值或先傳值，在使用設面沒有特別注意其他事情。最近我了解到實作上的差異，prefix是直接改值，postfix則是先複製一份物件，然後再改值，這樣的結果會使postfix多生成一個物件，因此如果可以的話，要使用prefix++/–。<br>example from <a href=\"https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019</a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// increment_and_decrement1.cpp</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">   <span class=\"comment\">// Declare prefix and postfix increment operators.</span></span><br><span class=\"line\">   Point&amp; <span class=\"keyword\">operator</span>++();       <span class=\"comment\">// Prefix increment operator.</span></span><br><span class=\"line\">   Point <span class=\"keyword\">operator</span>++(<span class=\"keyword\">int</span>);     <span class=\"comment\">// Postfix increment operator.</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Declare prefix and postfix decrement operators.</span></span><br><span class=\"line\">   Point&amp; <span class=\"keyword\">operator</span>--();       <span class=\"comment\">// Prefix decrement operator.</span></span><br><span class=\"line\">   Point <span class=\"keyword\">operator</span>--(<span class=\"keyword\">int</span>);     <span class=\"comment\">// Postfix decrement operator.</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Define default constructor.</span></span><br><span class=\"line\">   Point() &#123; _x = _y = <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Define accessor functions.</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">x</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> _x; &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">y</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> _y; &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">   <span class=\"keyword\">int</span> _x, _y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define prefix increment operator.</span></span><br><span class=\"line\">Point&amp; Point::<span class=\"keyword\">operator</span>++()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   _x++;</span><br><span class=\"line\">   _y++;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define postfix increment operator.</span></span><br><span class=\"line\">Point Point::<span class=\"keyword\">operator</span>++(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   ++*<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define prefix decrement operator.</span></span><br><span class=\"line\">Point&amp; Point::<span class=\"keyword\">operator</span>--()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   _x--;</span><br><span class=\"line\">   _y--;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define postfix decrement operator.</span></span><br><span class=\"line\">Point Point::<span class=\"keyword\">operator</span>--(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   --*<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在很多程式語言都有prefix and postfix ++/–，常用在迴圈上。通常我們會看到的差異是先改值或先傳值，在使用設面沒有特別注意其他事情。最近我了解到實作上的差異，prefix是直接改值，postfix則是先複製一份物件，然後再改值，這樣的結果會使postfix多生成一個物件，因此如果可以的話，要使用prefix++/–。<br>example from <a href=\"https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/zh-tw/cpp/cpp/increment-and-decrement-operator-overloading-cpp?view=vs-2019</a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// increment_and_decrement1.cpp</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Point</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">   <span class=\"comment\">// Declare prefix and postfix increment operators.</span></span><br><span class=\"line\">   Point&amp; <span class=\"keyword\">operator</span>++();       <span class=\"comment\">// Prefix increment operator.</span></span><br><span class=\"line\">   Point <span class=\"keyword\">operator</span>++(<span class=\"keyword\">int</span>);     <span class=\"comment\">// Postfix increment operator.</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Declare prefix and postfix decrement operators.</span></span><br><span class=\"line\">   Point&amp; <span class=\"keyword\">operator</span>--();       <span class=\"comment\">// Prefix decrement operator.</span></span><br><span class=\"line\">   Point <span class=\"keyword\">operator</span>--(<span class=\"keyword\">int</span>);     <span class=\"comment\">// Postfix decrement operator.</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Define default constructor.</span></span><br><span class=\"line\">   Point() &#123; _x = _y = <span class=\"number\">0</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">// Define accessor functions.</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">x</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> _x; &#125;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">y</span><span class=\"params\">()</span> </span>&#123; <span class=\"keyword\">return</span> _y; &#125;</span><br><span class=\"line\"><span class=\"keyword\">private</span>:</span><br><span class=\"line\">   <span class=\"keyword\">int</span> _x, _y;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define prefix increment operator.</span></span><br><span class=\"line\">Point&amp; Point::<span class=\"keyword\">operator</span>++()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   _x++;</span><br><span class=\"line\">   _y++;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define postfix increment operator.</span></span><br><span class=\"line\">Point Point::<span class=\"keyword\">operator</span>++(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   ++*<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define prefix decrement operator.</span></span><br><span class=\"line\">Point&amp; Point::<span class=\"keyword\">operator</span>--()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   _x--;</span><br><span class=\"line\">   _y--;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Define postfix decrement operator.</span></span><br><span class=\"line\">Point Point::<span class=\"keyword\">operator</span>--(<span class=\"keyword\">int</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   Point temp = *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   --*<span class=\"keyword\">this</span>;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"uva00562 Dividing coins (Zerojudge d390)","date":"2017-12-31T14:30:47.000Z","_content":"連結1:http://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=503\n連結2:https://zerojudge.tw/ShowProblem?problemid=d390\n這題題意是要問所給出的m個幣值，分兩推的最小差距。\n做法:先背包dp，再從可能的方法找出答案\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=50005;\n\nint main(){\n    int n,m,x,sum,ans;\n    bool dp[N];\n    cin>>n;\n    while(n--){\n        memset(dp,0,sizeof(dp));\n        sum=0;\n        cin>>m;\n        while(m--){\n            cin>>x;\n            sum+=x;\n            for(int j=sum;j-x>=0;j--){\n                if(!(j-x)||dp[j-x]){\n                    dp[j]=1;\n                }\n            }\n        }\n        ans=sum;\n        for(int i=1;i<=sum/2;i++){\n            if(dp[i]){\n                ans=sum-2*i;\n            }\n        }\n        cout<<ans<<'\\n';\n    }\n}\n{% endcodeblock %}","source":"_posts/uva00562 Dividing coins.md","raw":"<!-- layout: layout -->\ntitle: uva00562 Dividing coins (Zerojudge d390)\ndate: 2017-12-31 22:30:47\ncategory: Uva\ntags:\n- Uva\n- Zerojudge\n- dp\n- 背包dp\n---\n連結1:http://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=503\n連結2:https://zerojudge.tw/ShowProblem?problemid=d390\n這題題意是要問所給出的m個幣值，分兩推的最小差距。\n做法:先背包dp，再從可能的方法找出答案\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=50005;\n\nint main(){\n    int n,m,x,sum,ans;\n    bool dp[N];\n    cin>>n;\n    while(n--){\n        memset(dp,0,sizeof(dp));\n        sum=0;\n        cin>>m;\n        while(m--){\n            cin>>x;\n            sum+=x;\n            for(int j=sum;j-x>=0;j--){\n                if(!(j-x)||dp[j-x]){\n                    dp[j]=1;\n                }\n            }\n        }\n        ans=sum;\n        for(int i=1;i<=sum/2;i++){\n            if(dp[i]){\n                ans=sum-2*i;\n            }\n        }\n        cout<<ans<<'\\n';\n    }\n}\n{% endcodeblock %}","slug":"uva00562 Dividing coins","published":1,"updated":"2019-01-21T02:30:54.786Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sba000nhwu47eui1se9","content":"<p>連結1:<a href=\"http://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=503\" target=\"_blank\" rel=\"noopener\">http://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=503</a><br>連結2:<a href=\"https://zerojudge.tw/ShowProblem?problemid=d390\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=d390</a><br>這題題意是要問所給出的m個幣值，分兩推的最小差距。<br>做法:先背包dp，再從可能的方法找出答案<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">50005</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m,x,sum,ans;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> dp[N];</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(dp,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">        sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">            sum+=x;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=sum;j-x&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!(j-x)||dp[j-x])&#123;</span><br><span class=\"line\">                    dp[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=sum;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=sum/<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dp[i])&#123;</span><br><span class=\"line\">                ans=sum<span class=\"number\">-2</span>*i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>連結1:<a href=\"http://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=503\" target=\"_blank\" rel=\"noopener\">http://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=503</a><br>連結2:<a href=\"https://zerojudge.tw/ShowProblem?problemid=d390\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=d390</a><br>這題題意是要問所給出的m個幣值，分兩推的最小差距。<br>做法:先背包dp，再從可能的方法找出答案<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">50005</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m,x,sum,ans;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> dp[N];</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">memset</span>(dp,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(dp));</span><br><span class=\"line\">        sum=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;m;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(m--)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">            sum+=x;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=sum;j-x&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(!(j-x)||dp[j-x])&#123;</span><br><span class=\"line\">                    dp[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ans=sum;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=sum/<span class=\"number\">2</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(dp[i])&#123;</span><br><span class=\"line\">                ans=sum<span class=\"number\">-2</span>*i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"uva00706 LCD-Display  (ZeroJudgec135)","date":"2017-12-21T16:00:00.000Z","_content":"連結1: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=647\n連結2: https://zerojudge.tw/ShowProblem?problemid=c135\n題目大意: 這題是給你長度及一串數字，要你印出指定長度的數字(像小綠人倒數的數字)。\n作法:我先建表(style)，把每個數字分五層，紀錄要不要顯示，一三五層是橫的如果是0就不輸出空白，1輸出橫線；二四層為直線(左右兩邊)，0(兩邊空白)，1(右邊直線)、2(左邊直線)、3(兩邊直線)，直線判斷的時候是用位元運算來實作。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int m,a[10],ar=0;\n    int style[10][5]={1,3,0,3,1,0,1,0,1,0,1,1,1,2,1,1,1,1,1,1,0,3,1,1,0,1,2,1,1,1,1,2,1,3,1,1,1,0,1,0,1,3,1,3,1,1,3,1,1,1};\n    string s;\n    while(cin>>m>>s,(s!=\"0\")||m){\n        ar=0;\n        for(int i=s.size()-1;i>=0;i--){\n            a[ar]=(s[i]-'0');\n            ar++;\n        }\n        for(int i=0;i<5;i++){\n            if(i&1){\n                s=\"\";\n                for(int j=ar-1;j>=0;j--){\n                    s+=((style[a[j]][i]&2)?'|':' ');\n                    for(int k=0;k<m;k++)s+=' ';\n                    s+=((style[a[j]][i]&1)?'|':' ');\n                    if(j)s+=' ';\n                }\n                for(int j=0;j<m;j++)cout<<s<<'\\n';\n            }else{\n                for(int j=ar-1;j>=0;j--){\n                    cout<<' ';\n                    for(int k=0;k<m;k++){\n                        cout<<((style[a[j]][i])?'-':' ');\n                    }\n                    cout<<' ';\n                    if(j)cout<<' ';\n                }\n                cout<<'\\n';\n            }\n        }\n        cout<<'\\n';\n    }\n}\n{% endcodeblock %}","source":"_posts/uva00706 LCD-Display.md","raw":"<!-- layout: layout -->\ntitle: uva00706 LCD-Display  (ZeroJudgec135)\ndate: 2017-12-22\ncategory: Uva \ntags:\n- Uva\n- Zerojudge\n- 建表\n---\n連結1: https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=24&page=show_problem&problem=647\n連結2: https://zerojudge.tw/ShowProblem?problemid=c135\n題目大意: 這題是給你長度及一串數字，要你印出指定長度的數字(像小綠人倒數的數字)。\n作法:我先建表(style)，把每個數字分五層，紀錄要不要顯示，一三五層是橫的如果是0就不輸出空白，1輸出橫線；二四層為直線(左右兩邊)，0(兩邊空白)，1(右邊直線)、2(左邊直線)、3(兩邊直線)，直線判斷的時候是用位元運算來實作。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nint main(){\n    int m,a[10],ar=0;\n    int style[10][5]={1,3,0,3,1,0,1,0,1,0,1,1,1,2,1,1,1,1,1,1,0,3,1,1,0,1,2,1,1,1,1,2,1,3,1,1,1,0,1,0,1,3,1,3,1,1,3,1,1,1};\n    string s;\n    while(cin>>m>>s,(s!=\"0\")||m){\n        ar=0;\n        for(int i=s.size()-1;i>=0;i--){\n            a[ar]=(s[i]-'0');\n            ar++;\n        }\n        for(int i=0;i<5;i++){\n            if(i&1){\n                s=\"\";\n                for(int j=ar-1;j>=0;j--){\n                    s+=((style[a[j]][i]&2)?'|':' ');\n                    for(int k=0;k<m;k++)s+=' ';\n                    s+=((style[a[j]][i]&1)?'|':' ');\n                    if(j)s+=' ';\n                }\n                for(int j=0;j<m;j++)cout<<s<<'\\n';\n            }else{\n                for(int j=ar-1;j>=0;j--){\n                    cout<<' ';\n                    for(int k=0;k<m;k++){\n                        cout<<((style[a[j]][i])?'-':' ');\n                    }\n                    cout<<' ';\n                    if(j)cout<<' ';\n                }\n                cout<<'\\n';\n            }\n        }\n        cout<<'\\n';\n    }\n}\n{% endcodeblock %}","slug":"uva00706 LCD-Display","published":1,"updated":"2019-01-21T02:30:54.788Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbb000ohwu4ej3mbuki","content":"<p>連結1: <a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=647\" target=\"_blank\" rel=\"noopener\">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=647</a><br>連結2: <a href=\"https://zerojudge.tw/ShowProblem?problemid=c135\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=c135</a><br>題目大意: 這題是給你長度及一串數字，要你印出指定長度的數字(像小綠人倒數的數字)。<br>作法:我先建表(style)，把每個數字分五層，紀錄要不要顯示，一三五層是橫的如果是0就不輸出空白，1輸出橫線；二四層為直線(左右兩邊)，0(兩邊空白)，1(右邊直線)、2(左邊直線)、3(兩邊直線)，直線判斷的時候是用位元運算來實作。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m,a[<span class=\"number\">10</span>],ar=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> style[<span class=\"number\">10</span>][<span class=\"number\">5</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;m&gt;&gt;s,(s!=<span class=\"string\">\"0\"</span>)||m)&#123;</span><br><span class=\"line\">        ar=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=s.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            a[ar]=(s[i]-<span class=\"string\">'0'</span>);</span><br><span class=\"line\">            ar++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&amp;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                s=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ar<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                    s+=((style[a[j]][i]&amp;<span class=\"number\">2</span>)?<span class=\"string\">'|'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)s+=<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    s+=((style[a[j]][i]&amp;<span class=\"number\">1</span>)?<span class=\"string\">'|'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j)s+=<span class=\"string\">' '</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)<span class=\"built_in\">cout</span>&lt;&lt;s&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ar<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;((style[a[j]][i])?<span class=\"string\">'-'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>連結1: <a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=647\" target=\"_blank\" rel=\"noopener\">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;category=24&amp;page=show_problem&amp;problem=647</a><br>連結2: <a href=\"https://zerojudge.tw/ShowProblem?problemid=c135\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=c135</a><br>題目大意: 這題是給你長度及一串數字，要你印出指定長度的數字(像小綠人倒數的數字)。<br>作法:我先建表(style)，把每個數字分五層，紀錄要不要顯示，一三五層是橫的如果是0就不輸出空白，1輸出橫線；二四層為直線(左右兩邊)，0(兩邊空白)，1(右邊直線)、2(左邊直線)、3(兩邊直線)，直線判斷的時候是用位元運算來實作。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> m,a[<span class=\"number\">10</span>],ar=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> style[<span class=\"number\">10</span>][<span class=\"number\">5</span>]=&#123;<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">string</span> s;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;m&gt;&gt;s,(s!=<span class=\"string\">\"0\"</span>)||m)&#123;</span><br><span class=\"line\">        ar=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=s.size()<span class=\"number\">-1</span>;i&gt;=<span class=\"number\">0</span>;i--)&#123;</span><br><span class=\"line\">            a[ar]=(s[i]-<span class=\"string\">'0'</span>);</span><br><span class=\"line\">            ar++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">5</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i&amp;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                s=<span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ar<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                    s+=((style[a[j]][i]&amp;<span class=\"number\">2</span>)?<span class=\"string\">'|'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)s+=<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    s+=((style[a[j]][i]&amp;<span class=\"number\">1</span>)?<span class=\"string\">'|'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j)s+=<span class=\"string\">' '</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;m;j++)<span class=\"built_in\">cout</span>&lt;&lt;s&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=ar<span class=\"number\">-1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=<span class=\"number\">0</span>;k&lt;m;k++)&#123;</span><br><span class=\"line\">                        <span class=\"built_in\">cout</span>&lt;&lt;((style[a[j]][i])?<span class=\"string\">'-'</span>:<span class=\"string\">' '</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(j)<span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">' '</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"uva11478 Halum (差分約束)","date":"2019-02-14T12:34:54.000Z","_content":"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&category=550&problem=2473&mosmsg=Submission+received+with+ID+14137690\n題意：給一張圖，邊有權重，有個操作X(s,v)，點s為起點的邊+v，點s為終點的邊-v，可以有無限次操作，在最後所有邊權重大於0的情況，最小的權重最大可以為多少。\n\n解答：對於一條s到t的邊，他的權重增加Xsum(s)，減少了Xsum(t)(Xsum(s)為s操作的總值)，那麼我們可以二分搜答案x，Xsum(s)-Xsum(t)+w(s,t)>=x，Xsum(s)-Xsum(t)<=w(s,t)-x，這樣就可以轉化為差分約束了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 505;\nstruct Edge{\n    int t, w;\n};\nint v, e;\nint d[N], cnt[N];\nbitset<N> inq;\nqueue<int>Q;\nvector<Edge>G[N];\n\nvoid addEdge(int from, int to, int w){\n    G[from].push_back({to,w});\n}\n\nbool hasnegativeCycle(int x){\n    while(!Q.empty())Q.pop();\n    for(int i = 1; i <= v;i++){\n        inq[i] = true;\n        cnt[i] = d[i] = 0;\n        Q.push(i);\n    }\n    while(!Q.empty()){\n        int s = Q.front(); Q.pop();\n        inq[s] = false;\n        for(Edge it: G[s]){\n            if(d[it.t] > d[s] + it.w - x){\n                d[it.t] = d[s] + it.w - x;\n                if(inq[it.t])continue;\n                Q.push(it.t);\n                inq[it.t] = true;\n                if(++cnt[it.t] > v)return true;\n            }\n        }\n    }\n    return false;\n}\n\nvoid sol(int L, int R){\n    if(hasnegativeCycle(1)){\n        cout << \"No Solution\\n\";\n    }else if(!hasnegativeCycle(R + 1)){\n        cout << \"Infinite\\n\";\n    }else {\n        while(L != R){\n            int M= (L + R + 1) >> 1;\n            if(hasnegativeCycle(M))R = M - 1;\n            else L = M;\n        }\n        cout << L << '\\n';\n    }\n}\n\nint main(){\n    int mxw;\n    while(cin >> v >> e){\n        for(int i = 0; i <= v; i++)G[i].clear();\n        mxw = 0;\n        for(int i = 0, f, t, w; i < e; i++){\n            cin >> f >> t >> w;\n            addEdge(f, t, w);\n            mxw = max(mxw, w);\n        }\n        sol(1, mxw);\n    }\n}\n{% endcodeblock %}","source":"_posts/uva11478-Halum-差分約束.md","raw":"---\ntitle: uva11478 Halum (差分約束)\ndate: 2019-02-14 20:34:54\ncategory: Uva \ntags:\n- Uva\n- graph\n---\nhttps://uva.onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&category=550&problem=2473&mosmsg=Submission+received+with+ID+14137690\n題意：給一張圖，邊有權重，有個操作X(s,v)，點s為起點的邊+v，點s為終點的邊-v，可以有無限次操作，在最後所有邊權重大於0的情況，最小的權重最大可以為多少。\n\n解答：對於一條s到t的邊，他的權重增加Xsum(s)，減少了Xsum(t)(Xsum(s)為s操作的總值)，那麼我們可以二分搜答案x，Xsum(s)-Xsum(t)+w(s,t)>=x，Xsum(s)-Xsum(t)<=w(s,t)-x，這樣就可以轉化為差分約束了。\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N = 505;\nstruct Edge{\n    int t, w;\n};\nint v, e;\nint d[N], cnt[N];\nbitset<N> inq;\nqueue<int>Q;\nvector<Edge>G[N];\n\nvoid addEdge(int from, int to, int w){\n    G[from].push_back({to,w});\n}\n\nbool hasnegativeCycle(int x){\n    while(!Q.empty())Q.pop();\n    for(int i = 1; i <= v;i++){\n        inq[i] = true;\n        cnt[i] = d[i] = 0;\n        Q.push(i);\n    }\n    while(!Q.empty()){\n        int s = Q.front(); Q.pop();\n        inq[s] = false;\n        for(Edge it: G[s]){\n            if(d[it.t] > d[s] + it.w - x){\n                d[it.t] = d[s] + it.w - x;\n                if(inq[it.t])continue;\n                Q.push(it.t);\n                inq[it.t] = true;\n                if(++cnt[it.t] > v)return true;\n            }\n        }\n    }\n    return false;\n}\n\nvoid sol(int L, int R){\n    if(hasnegativeCycle(1)){\n        cout << \"No Solution\\n\";\n    }else if(!hasnegativeCycle(R + 1)){\n        cout << \"Infinite\\n\";\n    }else {\n        while(L != R){\n            int M= (L + R + 1) >> 1;\n            if(hasnegativeCycle(M))R = M - 1;\n            else L = M;\n        }\n        cout << L << '\\n';\n    }\n}\n\nint main(){\n    int mxw;\n    while(cin >> v >> e){\n        for(int i = 0; i <= v; i++)G[i].clear();\n        mxw = 0;\n        for(int i = 0, f, t, w; i < e; i++){\n            cin >> f >> t >> w;\n            addEdge(f, t, w);\n            mxw = max(mxw, w);\n        }\n        sol(1, mxw);\n    }\n}\n{% endcodeblock %}","slug":"uva11478-Halum-差分約束","published":1,"updated":"2019-02-14T12:50:07.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbc000phwu4r6lzqf29","content":"<p><a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=550&amp;problem=2473&amp;mosmsg=Submission+received+with+ID+14137690\" target=\"_blank\" rel=\"noopener\">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=550&amp;problem=2473&amp;mosmsg=Submission+received+with+ID+14137690</a><br>題意：給一張圖，邊有權重，有個操作X(s,v)，點s為起點的邊+v，點s為終點的邊-v，可以有無限次操作，在最後所有邊權重大於0的情況，最小的權重最大可以為多少。</p>\n<p>解答：對於一條s到t的邊，他的權重增加Xsum(s)，減少了Xsum(t)(Xsum(s)為s操作的總值)，那麼我們可以二分搜答案x，Xsum(s)-Xsum(t)+w(s,t)&gt;=x，Xsum(s)-Xsum(t)&lt;=w(s,t)-x，這樣就可以轉化為差分約束了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">505</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, w;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v, e;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[N], cnt[N];</span><br><span class=\"line\"><span class=\"built_in\">bitset</span>&lt;N&gt; inq;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;Q;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt;G[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(<span class=\"keyword\">int</span> from, <span class=\"keyword\">int</span> to, <span class=\"keyword\">int</span> w)</span></span>&#123;</span><br><span class=\"line\">    G[from].push_back(&#123;to,w&#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hasnegativeCycle</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())Q.pop();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= v;i++)&#123;</span><br><span class=\"line\">        inq[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        cnt[i] = d[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Q.push(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> s = Q.front(); Q.pop();</span><br><span class=\"line\">        inq[s] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Edge it: G[s])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(d[it.t] &gt; d[s] + it.w - x)&#123;</span><br><span class=\"line\">                d[it.t] = d[s] + it.w - x;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(inq[it.t])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                Q.push(it.t);</span><br><span class=\"line\">                inq[it.t] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(++cnt[it.t] &gt; v)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sol</span><span class=\"params\">(<span class=\"keyword\">int</span> L, <span class=\"keyword\">int</span> R)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(hasnegativeCycle(<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"No Solution\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!hasnegativeCycle(R + <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Infinite\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(L != R)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> M= (L + R + <span class=\"number\">1</span>) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hasnegativeCycle(M))R = M - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> L = M;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; L &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mxw;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; v &gt;&gt; e)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= v; i++)G[i].clear();</span><br><span class=\"line\">        mxw = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, f, t, w; i &lt; e; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; f &gt;&gt; t &gt;&gt; w;</span><br><span class=\"line\">            addEdge(f, t, w);</span><br><span class=\"line\">            mxw = max(mxw, w);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sol(<span class=\"number\">1</span>, mxw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=550&amp;problem=2473&amp;mosmsg=Submission+received+with+ID+14137690\" target=\"_blank\" rel=\"noopener\">https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;category=550&amp;problem=2473&amp;mosmsg=Submission+received+with+ID+14137690</a><br>題意：給一張圖，邊有權重，有個操作X(s,v)，點s為起點的邊+v，點s為終點的邊-v，可以有無限次操作，在最後所有邊權重大於0的情況，最小的權重最大可以為多少。</p>\n<p>解答：對於一條s到t的邊，他的權重增加Xsum(s)，減少了Xsum(t)(Xsum(s)為s操作的總值)，那麼我們可以二分搜答案x，Xsum(s)-Xsum(t)+w(s,t)&gt;=x，Xsum(s)-Xsum(t)&lt;=w(s,t)-x，這樣就可以轉化為差分約束了。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N = <span class=\"number\">505</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Edge</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> t, w;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v, e;</span><br><span class=\"line\"><span class=\"keyword\">int</span> d[N], cnt[N];</span><br><span class=\"line\"><span class=\"built_in\">bitset</span>&lt;N&gt; inq;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt;Q;</span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;Edge&gt;G[N];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(<span class=\"keyword\">int</span> from, <span class=\"keyword\">int</span> to, <span class=\"keyword\">int</span> w)</span></span>&#123;</span><br><span class=\"line\">    G[from].push_back(&#123;to,w&#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">hasnegativeCycle</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())Q.pop();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= v;i++)&#123;</span><br><span class=\"line\">        inq[i] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        cnt[i] = d[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        Q.push(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> s = Q.front(); Q.pop();</span><br><span class=\"line\">        inq[s] = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(Edge it: G[s])&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(d[it.t] &gt; d[s] + it.w - x)&#123;</span><br><span class=\"line\">                d[it.t] = d[s] + it.w - x;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(inq[it.t])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                Q.push(it.t);</span><br><span class=\"line\">                inq[it.t] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(++cnt[it.t] &gt; v)<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">sol</span><span class=\"params\">(<span class=\"keyword\">int</span> L, <span class=\"keyword\">int</span> R)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(hasnegativeCycle(<span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"No Solution\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!hasnegativeCycle(R + <span class=\"number\">1</span>))&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"Infinite\\n\"</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(L != R)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> M= (L + R + <span class=\"number\">1</span>) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(hasnegativeCycle(M))R = M - <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> L = M;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span> &lt;&lt; L &lt;&lt; <span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mxw;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span> &gt;&gt; v &gt;&gt; e)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt;= v; i++)G[i].clear();</span><br><span class=\"line\">        mxw = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, f, t, w; i &lt; e; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span> &gt;&gt; f &gt;&gt; t &gt;&gt; w;</span><br><span class=\"line\">            addEdge(f, t, w);</span><br><span class=\"line\">            mxw = max(mxw, w);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sol(<span class=\"number\">1</span>, mxw);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"<!-- layout":"layout -->","title":"zjc264 神奇的載物任務","date":"2018-04-15T12:18:01.000Z","_content":"連結:https://zerojudge.tw/ShowProblem?problemid=c264\n題意:要在大貨車上放貨物，但有重量和力矩限制，問你最大價值為多少\n這題顯然是背包問題，重量限制也很常見，可是\"力矩\"卻是很罕見了。\n力矩:為長度乘以重量，所以越重的物體放越前面(長度越短)越好，所以先排序一遍。\n而我dp兩個維度為重量和力矩，看在當重量及力矩長度下最大的價值。\n原本一開始我是用價值當狀態，紀錄最小的重量和力矩，但是一直WA，後來才明白不能一次變動兩個變數。\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=205;\nconst int M=2005;\nstruct Node{\n    int w,v;\n    bool operator <(const Node&b)const{\n        return w>b.w;\n    }\n};\n//#define debug\nint main(){\n    Node a[N];\n    int n,t,L;\n    cin>>n>>t>>L;\n    for(int i=0;i<n;i++){\n        cin>>a[i].w>>a[i].v;\n    }\n    sort(a,a+n);//越重的越先排\n    int dp[N][M]={};//重量weight,力矩torque\n    for(int i=0;i<n;i++){\n        for(int j=L-1,jj=a[i].w*L;j;j--,jj-=a[i].w){\n            if(jj>t)continue;\n            for(int k=t-jj;k>=0;k--){\n                if(dp[j][k]){\n                    dp[j+1][k+jj]=max(dp[j+1][k+jj],dp[j][k]+a[i].v);\n                }\n            }\n        }\n        dp[1][a[i].w]=max(dp[1][a[i].w],a[i].v);\n    }\n    int ans=0;\n    for(int i=1;i<=L;i++){\n        for(int j=0;j<=t;j++){\n            #ifdef debug\n                if(dp[i][j])printf(\"%d %d %d\\n\",i,j,dp[i][j]);\n            #endif // debug\n            ans=max(ans,dp[i][j]);\n        }\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n","source":"_posts/zjc264_神奇的載物任務.md","raw":"<!-- layout: layout -->\ntitle: zjc264 神奇的載物任務\ndate: 2018-04-15 20:18:01\ncategory: Zerojudge \ntags:\n- Zerojudge\n---\n連結:https://zerojudge.tw/ShowProblem?problemid=c264\n題意:要在大貨車上放貨物，但有重量和力矩限制，問你最大價值為多少\n這題顯然是背包問題，重量限制也很常見，可是\"力矩\"卻是很罕見了。\n力矩:為長度乘以重量，所以越重的物體放越前面(長度越短)越好，所以先排序一遍。\n而我dp兩個維度為重量和力矩，看在當重量及力矩長度下最大的價值。\n原本一開始我是用價值當狀態，紀錄最小的重量和力矩，但是一直WA，後來才明白不能一次變動兩個變數。\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\nconst int N=205;\nconst int M=2005;\nstruct Node{\n    int w,v;\n    bool operator <(const Node&b)const{\n        return w>b.w;\n    }\n};\n//#define debug\nint main(){\n    Node a[N];\n    int n,t,L;\n    cin>>n>>t>>L;\n    for(int i=0;i<n;i++){\n        cin>>a[i].w>>a[i].v;\n    }\n    sort(a,a+n);//越重的越先排\n    int dp[N][M]={};//重量weight,力矩torque\n    for(int i=0;i<n;i++){\n        for(int j=L-1,jj=a[i].w*L;j;j--,jj-=a[i].w){\n            if(jj>t)continue;\n            for(int k=t-jj;k>=0;k--){\n                if(dp[j][k]){\n                    dp[j+1][k+jj]=max(dp[j+1][k+jj],dp[j][k]+a[i].v);\n                }\n            }\n        }\n        dp[1][a[i].w]=max(dp[1][a[i].w],a[i].v);\n    }\n    int ans=0;\n    for(int i=1;i<=L;i++){\n        for(int j=0;j<=t;j++){\n            #ifdef debug\n                if(dp[i][j])printf(\"%d %d %d\\n\",i,j,dp[i][j]);\n            #endif // debug\n            ans=max(ans,dp[i][j]);\n        }\n    }\n    cout<<ans<<'\\n';\n}\n{% endcodeblock %}\n","slug":"zjc264_神奇的載物任務","published":1,"updated":"2019-01-21T02:30:54.789Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbd000qhwu4xvem7fyq","content":"<p>連結:<a href=\"https://zerojudge.tw/ShowProblem?problemid=c264\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=c264</a><br>題意:要在大貨車上放貨物，但有重量和力矩限制，問你最大價值為多少<br>這題顯然是背包問題，重量限制也很常見，可是”力矩”卻是很罕見了。<br>力矩:為長度乘以重量，所以越重的物體放越前面(長度越短)越好，所以先排序一遍。<br>而我dp兩個維度為重量和力矩，看在當重量及力矩長度下最大的價值。<br>原本一開始我是用價值當狀態，紀錄最小的重量和力矩，但是一直WA，後來才明白不能一次變動兩個變數。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">205</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M=<span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> w,v;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt;(<span class=\"keyword\">const</span> Node&amp;b)<span class=\"keyword\">const</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> w&gt;b.w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//#define debug</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    Node a[N];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t,L;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;t&gt;&gt;L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i].w&gt;&gt;a[i].v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(a,a+n);<span class=\"comment\">//越重的越先排</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> dp[N][M]=&#123;&#125;;<span class=\"comment\">//重量weight,力矩torque</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=L<span class=\"number\">-1</span>,jj=a[i].w*L;j;j--,jj-=a[i].w)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jj&gt;t)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=t-jj;k&gt;=<span class=\"number\">0</span>;k--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dp[j][k])&#123;</span><br><span class=\"line\">                    dp[j+<span class=\"number\">1</span>][k+jj]=max(dp[j+<span class=\"number\">1</span>][k+jj],dp[j][k]+a[i].v);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp[<span class=\"number\">1</span>][a[i].w]=max(dp[<span class=\"number\">1</span>][a[i].w],a[i].v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=L;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=t;j++)&#123;</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> debug</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dp[i][j])<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d %d\\n\"</span>,i,j,dp[i][j]);</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// debug</span></span></span><br><span class=\"line\">            ans=max(ans,dp[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>連結:<a href=\"https://zerojudge.tw/ShowProblem?problemid=c264\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=c264</a><br>題意:要在大貨車上放貨物，但有重量和力矩限制，問你最大價值為多少<br>這題顯然是背包問題，重量限制也很常見，可是”力矩”卻是很罕見了。<br>力矩:為長度乘以重量，所以越重的物體放越前面(長度越短)越好，所以先排序一遍。<br>而我dp兩個維度為重量和力矩，看在當重量及力矩長度下最大的價值。<br>原本一開始我是用價值當狀態，紀錄最小的重量和力矩，但是一直WA，後來才明白不能一次變動兩個變數。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> N=<span class=\"number\">205</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> M=<span class=\"number\">2005</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> w,v;</span><br><span class=\"line\">    <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt;(<span class=\"keyword\">const</span> Node&amp;b)<span class=\"keyword\">const</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> w&gt;b.w;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//#define debug</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    Node a[N];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,t,L;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;t&gt;&gt;L;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">cin</span>&gt;&gt;a[i].w&gt;&gt;a[i].v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sort(a,a+n);<span class=\"comment\">//越重的越先排</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> dp[N][M]=&#123;&#125;;<span class=\"comment\">//重量weight,力矩torque</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=L<span class=\"number\">-1</span>,jj=a[i].w*L;j;j--,jj-=a[i].w)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(jj&gt;t)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=t-jj;k&gt;=<span class=\"number\">0</span>;k--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dp[j][k])&#123;</span><br><span class=\"line\">                    dp[j+<span class=\"number\">1</span>][k+jj]=max(dp[j+<span class=\"number\">1</span>][k+jj],dp[j][k]+a[i].v);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dp[<span class=\"number\">1</span>][a[i].w]=max(dp[<span class=\"number\">1</span>][a[i].w],a[i].v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=L;i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=t;j++)&#123;</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> debug</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(dp[i][j])<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d %d %d\\n\"</span>,i,j,dp[i][j]);</span><br><span class=\"line\">            <span class=\"meta\">#<span class=\"meta-keyword\">endif</span> <span class=\"comment\">// debug</span></span></span><br><span class=\"line\">            ans=max(ans,dp[i][j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt;ans&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"<!-- layout":"layout -->","title":"zjd512_創造數字","date":"2018-04-16T14:17:30.000Z","_content":"連結:https://zerojudge.tw/ShowProblem?problemid=d512\n題意:給你N個數字，問你任取幾個數字出來做加總，有多少不同數字。\n這題乍看是DP，可是最大數字到2^31-1，這時可以用c++的STL，set來解決。set的實作是紅黑樹，尋找插入刪除複雜度皆O(logN)，這題方法就是依序和set裡的每一個數字加起來，如果還沒出現就插入set裡，注意這題要從後面做，因為set是從小排到大，從前面找會加到重複的。\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint main(){\n    set<LL>sb;\n    set<LL>::iterator it;\n    LL n,x;\n    while(cin>>n){\n        sb.clear();\n        sb.insert(-1);//當結束點9\n        sb.insert(0);\n        for(int i=0;i<n;i++){\n            cin>>x;\n            it=sb.end();\n            for(it--;it!=sb.begin();it--){\n                if(sb.find(*it+x)==sb.end()){\n                    sb.insert(*it+x);\n                }\n            }\n        }\n        cout<<sb.size()-2<<'\\n';\n    }\n}\n{% endcodeblock %}\n","source":"_posts/zjd512_創造數字.md","raw":"<!-- layout: layout -->\ntitle: zjd512_創造數字\ndate: 2018-04-16 22:17:30\ncategory: Zerojudge \ntags:\n- Zerojudge \n- stl\n- set\n---\n連結:https://zerojudge.tw/ShowProblem?problemid=d512\n題意:給你N個數字，問你任取幾個數字出來做加總，有多少不同數字。\n這題乍看是DP，可是最大數字到2^31-1，這時可以用c++的STL，set來解決。set的實作是紅黑樹，尋找插入刪除複雜度皆O(logN)，這題方法就是依序和set裡的每一個數字加起來，如果還沒出現就插入set裡，注意這題要從後面做，因為set是從小排到大，從前面找會加到重複的。\n\n{% codeblock lang:cpp %}\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long LL;\nint main(){\n    set<LL>sb;\n    set<LL>::iterator it;\n    LL n,x;\n    while(cin>>n){\n        sb.clear();\n        sb.insert(-1);//當結束點9\n        sb.insert(0);\n        for(int i=0;i<n;i++){\n            cin>>x;\n            it=sb.end();\n            for(it--;it!=sb.begin();it--){\n                if(sb.find(*it+x)==sb.end()){\n                    sb.insert(*it+x);\n                }\n            }\n        }\n        cout<<sb.size()-2<<'\\n';\n    }\n}\n{% endcodeblock %}\n","slug":"zjd512_創造數字","published":1,"updated":"2019-01-21T02:30:54.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbd000rhwu4r6hiv0st","content":"<p>連結:<a href=\"https://zerojudge.tw/ShowProblem?problemid=d512\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=d512</a><br>題意:給你N個數字，問你任取幾個數字出來做加總，有多少不同數字。<br>這題乍看是DP，可是最大數字到2^31-1，這時可以用c++的STL，set來解決。set的實作是紅黑樹，尋找插入刪除複雜度皆O(logN)，這題方法就是依序和set裡的每一個數字加起來，如果還沒出現就插入set裡，注意這題要從後面做，因為set是從小排到大，從前面找會加到重複的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;LL&gt;sb;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;LL&gt;::iterator it;</span><br><span class=\"line\">    LL n,x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;n)&#123;</span><br><span class=\"line\">        sb.clear();</span><br><span class=\"line\">        sb.insert(<span class=\"number\">-1</span>);<span class=\"comment\">//當結束點9</span></span><br><span class=\"line\">        sb.insert(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">            it=sb.end();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(it--;it!=sb.begin();it--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sb.find(*it+x)==sb.end())&#123;</span><br><span class=\"line\">                    sb.insert(*it+x);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;sb.size()<span class=\"number\">-2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>連結:<a href=\"https://zerojudge.tw/ShowProblem?problemid=d512\" target=\"_blank\" rel=\"noopener\">https://zerojudge.tw/ShowProblem?problemid=d512</a><br>題意:給你N個數字，問你任取幾個數字出來做加總，有多少不同數字。<br>這題乍看是DP，可是最大數字到2^31-1，這時可以用c++的STL，set來解決。set的實作是紅黑樹，尋找插入刪除複雜度皆O(logN)，這題方法就是依序和set裡的每一個數字加起來，如果還沒出現就插入set裡，注意這題要從後面做，因為set是從小排到大，從前面找會加到重複的。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">long</span> <span class=\"keyword\">long</span> LL;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;LL&gt;sb;</span><br><span class=\"line\">    <span class=\"built_in\">set</span>&lt;LL&gt;::iterator it;</span><br><span class=\"line\">    LL n,x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">cin</span>&gt;&gt;n)&#123;</span><br><span class=\"line\">        sb.clear();</span><br><span class=\"line\">        sb.insert(<span class=\"number\">-1</span>);<span class=\"comment\">//當結束點9</span></span><br><span class=\"line\">        sb.insert(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">cin</span>&gt;&gt;x;</span><br><span class=\"line\">            it=sb.end();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(it--;it!=sb.begin();it--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(sb.find(*it+x)==sb.end())&#123;</span><br><span class=\"line\">                    sb.insert(*it+x);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">cout</span>&lt;&lt;sb.size()<span class=\"number\">-2</span>&lt;&lt;<span class=\"string\">'\\n'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"二分圖筆記","date":"2019-02-12T06:47:36.000Z","_content":"今天我研究了二分圖，整理了以下兩件事。\n\n第一個是二分圖判定，有兩種方式可以判斷一張\"連通圖\"是否為二分圖。一個是DFS或BFS，首先把一個點標記為1，那麼與它相鄰的點都要標示為-1，當遍歷到-1的點，就要把它相鄰的點標記為1，以此類推，如果發現有不合規定的，那麼就不是二分圖了。第二種方式是用並查集，相鄰的點為兩個不同陣營，用並查集維護這件事情，如果遇到矛盾，那麼就不是二分圖了。\n\n第二個是二分圖的性質，先講幾個圖論中常遇見的問題。\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n這些問題在二分圖中有很好的性質，利用這些性質可以加快解題思考的時間。\n1. |最大匹配|=|最小點覆蓋|\n2. |最大獨立集|=|最小邊覆蓋|\n3. |最大獨立集|=|V|-|最大匹配|\n4. |最大圖|=|補圖的最大獨立集|\n\n筆記在寫到這裡，至於code暫時沒有要放上這篇文章，但之後會有關於二分圖的題目。","source":"_posts/二分圖筆記.md","raw":"---\ntitle: 二分圖筆記\ndate: 2019-02-12 14:47:36\ncategory: 隨筆\ntags:\n- bipartite graph\n---\n今天我研究了二分圖，整理了以下兩件事。\n\n第一個是二分圖判定，有兩種方式可以判斷一張\"連通圖\"是否為二分圖。一個是DFS或BFS，首先把一個點標記為1，那麼與它相鄰的點都要標示為-1，當遍歷到-1的點，就要把它相鄰的點標記為1，以此類推，如果發現有不合規定的，那麼就不是二分圖了。第二種方式是用並查集，相鄰的點為兩個不同陣營，用並查集維護這件事情，如果遇到矛盾，那麼就不是二分圖了。\n\n第二個是二分圖的性質，先講幾個圖論中常遇見的問題。\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n這些問題在二分圖中有很好的性質，利用這些性質可以加快解題思考的時間。\n1. |最大匹配|=|最小點覆蓋|\n2. |最大獨立集|=|最小邊覆蓋|\n3. |最大獨立集|=|V|-|最大匹配|\n4. |最大圖|=|補圖的最大獨立集|\n\n筆記在寫到這裡，至於code暫時沒有要放上這篇文章，但之後會有關於二分圖的題目。","slug":"二分圖筆記","published":1,"updated":"2019-02-12T07:17:56.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbe000shwu4pabq50tb","content":"<p>今天我研究了二分圖，整理了以下兩件事。</p>\n<p>第一個是二分圖判定，有兩種方式可以判斷一張”連通圖”是否為二分圖。一個是DFS或BFS，首先把一個點標記為1，那麼與它相鄰的點都要標示為-1，當遍歷到-1的點，就要把它相鄰的點標記為1，以此類推，如果發現有不合規定的，那麼就不是二分圖了。第二種方式是用並查集，相鄰的點為兩個不同陣營，用並查集維護這件事情，如果遇到矛盾，那麼就不是二分圖了。</p>\n<p>第二個是二分圖的性質，先講幾個圖論中常遇見的問題。</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>這些問題在二分圖中有很好的性質，利用這些性質可以加快解題思考的時間。</p>\n<ol>\n<li>|最大匹配|=|最小點覆蓋|</li>\n<li>|最大獨立集|=|最小邊覆蓋|</li>\n<li>|最大獨立集|=|V|-|最大匹配|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>筆記在寫到這裡，至於code暫時沒有要放上這篇文章，但之後會有關於二分圖的題目。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天我研究了二分圖，整理了以下兩件事。</p>\n<p>第一個是二分圖判定，有兩種方式可以判斷一張”連通圖”是否為二分圖。一個是DFS或BFS，首先把一個點標記為1，那麼與它相鄰的點都要標示為-1，當遍歷到-1的點，就要把它相鄰的點標記為1，以此類推，如果發現有不合規定的，那麼就不是二分圖了。第二種方式是用並查集，相鄰的點為兩個不同陣營，用並查集維護這件事情，如果遇到矛盾，那麼就不是二分圖了。</p>\n<p>第二個是二分圖的性質，先講幾個圖論中常遇見的問題。</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>這些問題在二分圖中有很好的性質，利用這些性質可以加快解題思考的時間。</p>\n<ol>\n<li>|最大匹配|=|最小點覆蓋|</li>\n<li>|最大獨立集|=|最小邊覆蓋|</li>\n<li>|最大獨立集|=|V|-|最大匹配|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>筆記在寫到這裡，至於code暫時沒有要放上這篇文章，但之後會有關於二分圖的題目。</p>\n"},{"title":"寒訓心得文系列-1 講義","date":"2019-01-21T03:41:09.000Z","_content":"首先先來講講義，講義是我12月初的時候先打在hackmd當草稿用，原本是想要找人幫忙，不過後來還是只有我一人，我預計12月底就會把所有內容打好了，不過可以講的東西太多了，一直編到大約1/10才打完，不過這還是一部分，我還要把他轉成LaTex和製作PPT(使用reveal.js)，再者，我還有許多code需要補齊，所以我直到寒訓前一天才完成工作。必須要提的一點是，要不是寒訓有人幫我講課，我講義就會開天窗了，真的感謝。\n\n至於講義，我放在github上開源，希望之後有人可以一起來編輯他，同時我也會不定期去擴充修改講義，使它變的更完善。\n\n講義連結：https://github.com/FjuOnlineJudge/training_handout","source":"_posts/寒訓心得文系列-1-講義.md","raw":"---\ntitle: 寒訓心得文系列-1 講義\ndate: 2019-01-21 11:41:09\ncategory: 輔大\ntags:\n- 寒訓\n---\n首先先來講講義，講義是我12月初的時候先打在hackmd當草稿用，原本是想要找人幫忙，不過後來還是只有我一人，我預計12月底就會把所有內容打好了，不過可以講的東西太多了，一直編到大約1/10才打完，不過這還是一部分，我還要把他轉成LaTex和製作PPT(使用reveal.js)，再者，我還有許多code需要補齊，所以我直到寒訓前一天才完成工作。必須要提的一點是，要不是寒訓有人幫我講課，我講義就會開天窗了，真的感謝。\n\n至於講義，我放在github上開源，希望之後有人可以一起來編輯他，同時我也會不定期去擴充修改講義，使它變的更完善。\n\n講義連結：https://github.com/FjuOnlineJudge/training_handout","slug":"寒訓心得文系列-1-講義","published":1,"updated":"2019-01-21T04:03:24.715Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbf000thwu495hgm558","content":"<p>首先先來講講義，講義是我12月初的時候先打在hackmd當草稿用，原本是想要找人幫忙，不過後來還是只有我一人，我預計12月底就會把所有內容打好了，不過可以講的東西太多了，一直編到大約1/10才打完，不過這還是一部分，我還要把他轉成LaTex和製作PPT(使用reveal.js)，再者，我還有許多code需要補齊，所以我直到寒訓前一天才完成工作。必須要提的一點是，要不是寒訓有人幫我講課，我講義就會開天窗了，真的感謝。</p>\n<p>至於講義，我放在github上開源，希望之後有人可以一起來編輯他，同時我也會不定期去擴充修改講義，使它變的更完善。</p>\n<p>講義連結：<a href=\"https://github.com/FjuOnlineJudge/training_handout\" target=\"_blank\" rel=\"noopener\">https://github.com/FjuOnlineJudge/training_handout</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>首先先來講講義，講義是我12月初的時候先打在hackmd當草稿用，原本是想要找人幫忙，不過後來還是只有我一人，我預計12月底就會把所有內容打好了，不過可以講的東西太多了，一直編到大約1/10才打完，不過這還是一部分，我還要把他轉成LaTex和製作PPT(使用reveal.js)，再者，我還有許多code需要補齊，所以我直到寒訓前一天才完成工作。必須要提的一點是，要不是寒訓有人幫我講課，我講義就會開天窗了，真的感謝。</p>\n<p>至於講義，我放在github上開源，希望之後有人可以一起來編輯他，同時我也會不定期去擴充修改講義，使它變的更完善。</p>\n<p>講義連結：<a href=\"https://github.com/FjuOnlineJudge/training_handout\" target=\"_blank\" rel=\"noopener\">https://github.com/FjuOnlineJudge/training_handout</a></p>\n"},{"title":"寒訓心得文系列-2 講課","date":"2019-01-23T12:34:36.000Z","_content":"關於講課，這部分我需要慢慢練習，雖然上學期的社課已經交了很多次，但這次在講課還是會一直吃螺絲，會有贅字產生，我想避掉都失敗，要改善這種情況，我想講課前要更熟悉課程，多多演習內容，才能講得更順暢。\n\n看看下學期的行事曆，我想先在就要開始準備下學期的內容了，因為有很多課程，是我不熟或是想突破自己而放上的，拖到過年後準備，只會讓品質不佳，也沒辦法改善關於講課的內容。","source":"_posts/寒訓心得文系列-2 講課.md","raw":"---\ntitle: 寒訓心得文系列-2 講課\ndate: 2019-01-23 20:34:36\ncategory: 輔大\ntags:\n- 寒訓\n---\n關於講課，這部分我需要慢慢練習，雖然上學期的社課已經交了很多次，但這次在講課還是會一直吃螺絲，會有贅字產生，我想避掉都失敗，要改善這種情況，我想講課前要更熟悉課程，多多演習內容，才能講得更順暢。\n\n看看下學期的行事曆，我想先在就要開始準備下學期的內容了，因為有很多課程，是我不熟或是想突破自己而放上的，拖到過年後準備，只會讓品質不佳，也沒辦法改善關於講課的內容。","slug":"寒訓心得文系列-2 講課","published":1,"updated":"2019-01-23T12:51:32.125Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbf000uhwu48jrho7f1","content":"<p>關於講課，這部分我需要慢慢練習，雖然上學期的社課已經交了很多次，但這次在講課還是會一直吃螺絲，會有贅字產生，我想避掉都失敗，要改善這種情況，我想講課前要更熟悉課程，多多演習內容，才能講得更順暢。</p>\n<p>看看下學期的行事曆，我想先在就要開始準備下學期的內容了，因為有很多課程，是我不熟或是想突破自己而放上的，拖到過年後準備，只會讓品質不佳，也沒辦法改善關於講課的內容。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>關於講課，這部分我需要慢慢練習，雖然上學期的社課已經交了很多次，但這次在講課還是會一直吃螺絲，會有贅字產生，我想避掉都失敗，要改善這種情況，我想講課前要更熟悉課程，多多演習內容，才能講得更順暢。</p>\n<p>看看下學期的行事曆，我想先在就要開始準備下學期的內容了，因為有很多課程，是我不熟或是想突破自己而放上的，拖到過年後準備，只會讓品質不佳，也沒辦法改善關於講課的內容。</p>\n"},{"title":"寒訓心得文系列-3 雜事","date":"2019-01-24T14:01:15.000Z","_content":"一個營隊除了課程內容，當然還有其他事要忙，簽到、訂午餐......，這些在前幾天當然沒什麼大不了，不過最後一天下午因為要辦比賽，所以要買pizza當晚餐，但是比賽時只有兩種人，比賽的人+監考的人，所以沒有人能幫忙，只到最後我和學長才去買，過程真的很費力氣。再來比賽也是前兩天突然決定，導致出題者辛苦。最後是押金，因為一開始沒訂好遊戲規則，導致原本想要扣押某些人的押金，卻因為理由站不住腳所以放棄，以上這些事讓我覺得我在綠光學的東西沒有好好利用，下次要好好計畫好才行。","source":"_posts/寒訓心得文系列-3-雜事.md","raw":"---\ntitle: 寒訓心得文系列-3 雜事\ndate: 2019-01-24 22:01:15\ncategory: 輔大\ntags:\n- 寒訓\n---\n一個營隊除了課程內容，當然還有其他事要忙，簽到、訂午餐......，這些在前幾天當然沒什麼大不了，不過最後一天下午因為要辦比賽，所以要買pizza當晚餐，但是比賽時只有兩種人，比賽的人+監考的人，所以沒有人能幫忙，只到最後我和學長才去買，過程真的很費力氣。再來比賽也是前兩天突然決定，導致出題者辛苦。最後是押金，因為一開始沒訂好遊戲規則，導致原本想要扣押某些人的押金，卻因為理由站不住腳所以放棄，以上這些事讓我覺得我在綠光學的東西沒有好好利用，下次要好好計畫好才行。","slug":"寒訓心得文系列-3-雜事","published":1,"updated":"2019-01-24T14:15:24.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbg000vhwu4ct2qd8n7","content":"<p>一個營隊除了課程內容，當然還有其他事要忙，簽到、訂午餐……，這些在前幾天當然沒什麼大不了，不過最後一天下午因為要辦比賽，所以要買pizza當晚餐，但是比賽時只有兩種人，比賽的人+監考的人，所以沒有人能幫忙，只到最後我和學長才去買，過程真的很費力氣。再來比賽也是前兩天突然決定，導致出題者辛苦。最後是押金，因為一開始沒訂好遊戲規則，導致原本想要扣押某些人的押金，卻因為理由站不住腳所以放棄，以上這些事讓我覺得我在綠光學的東西沒有好好利用，下次要好好計畫好才行。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一個營隊除了課程內容，當然還有其他事要忙，簽到、訂午餐……，這些在前幾天當然沒什麼大不了，不過最後一天下午因為要辦比賽，所以要買pizza當晚餐，但是比賽時只有兩種人，比賽的人+監考的人，所以沒有人能幫忙，只到最後我和學長才去買，過程真的很費力氣。再來比賽也是前兩天突然決定，導致出題者辛苦。最後是押金，因為一開始沒訂好遊戲規則，導致原本想要扣押某些人的押金，卻因為理由站不住腳所以放棄，以上這些事讓我覺得我在綠光學的東西沒有好好利用，下次要好好計畫好才行。</p>\n"},{"title":"寒訓心得文系列-4 找題目","date":"2019-01-24T14:40:46.000Z","_content":"這應該要接著\"講義\"寫的，但是忘記，所以就延到今天。\n\n我講義出到一個段落，內容就只剩下補一些code，以及找一些題目讓大家練習。而這是一件蠻不簡單的事，因為你要找到適合給第一次學的人寫的題目，這要需要花一點時間尋找及判斷。幸好的事我手邊有資源，可以讓我快速找好題目，省去時間。\n\n這個問題是我從上學期就一直思考要如何解決，而我想到的辦法是架一個專門討論程式競賽的網站，裡面可以發布一些題單，讓想學習或是教學的人，能夠花最小時間在找題目這一塊。只是不知道我能不能有時間做這一塊。","source":"_posts/寒訓心得文系列-4-找題目.md","raw":"---\ntitle: 寒訓心得文系列-4 找題目\ndate: 2019-01-24 22:40:46\ncategory: 輔大\ntags:\n- 寒訓\n---\n這應該要接著\"講義\"寫的，但是忘記，所以就延到今天。\n\n我講義出到一個段落，內容就只剩下補一些code，以及找一些題目讓大家練習。而這是一件蠻不簡單的事，因為你要找到適合給第一次學的人寫的題目，這要需要花一點時間尋找及判斷。幸好的事我手邊有資源，可以讓我快速找好題目，省去時間。\n\n這個問題是我從上學期就一直思考要如何解決，而我想到的辦法是架一個專門討論程式競賽的網站，裡面可以發布一些題單，讓想學習或是教學的人，能夠花最小時間在找題目這一塊。只是不知道我能不能有時間做這一塊。","slug":"寒訓心得文系列-4-找題目","published":1,"updated":"2019-01-24T14:51:23.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbh000whwu46pjpsle3","content":"<p>這應該要接著”講義”寫的，但是忘記，所以就延到今天。</p>\n<p>我講義出到一個段落，內容就只剩下補一些code，以及找一些題目讓大家練習。而這是一件蠻不簡單的事，因為你要找到適合給第一次學的人寫的題目，這要需要花一點時間尋找及判斷。幸好的事我手邊有資源，可以讓我快速找好題目，省去時間。</p>\n<p>這個問題是我從上學期就一直思考要如何解決，而我想到的辦法是架一個專門討論程式競賽的網站，裡面可以發布一些題單，讓想學習或是教學的人，能夠花最小時間在找題目這一塊。只是不知道我能不能有時間做這一塊。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>這應該要接著”講義”寫的，但是忘記，所以就延到今天。</p>\n<p>我講義出到一個段落，內容就只剩下補一些code，以及找一些題目讓大家練習。而這是一件蠻不簡單的事，因為你要找到適合給第一次學的人寫的題目，這要需要花一點時間尋找及判斷。幸好的事我手邊有資源，可以讓我快速找好題目，省去時間。</p>\n<p>這個問題是我從上學期就一直思考要如何解決，而我想到的辦法是架一個專門討論程式競賽的網站，裡面可以發布一些題單，讓想學習或是教學的人，能夠花最小時間在找題目這一塊。只是不知道我能不能有時間做這一塊。</p>\n"},{"title":"寒訓心得文系列-5 人","date":"2019-01-25T02:16:25.000Z","_content":"系列最後一篇文，我想要感謝幫助這個營隊的人。\n\n首先是老師和助教，協助我關於教室和經費、題目的來源、還有比賽的獎品，這樣的後盾讓我能更專注在講課上。再來是跟我一起講課及協助一些雜事的人，尤其是講課這一方面，如果沒人幫我講課，我就沒時間能夠寫完講義了!!!\n\n最後當然要感謝來聽課的同學，已開始我預設只有15位左右，最後多了一倍，有30位，而且出席率算高的，看到這樣，就覺得辦這次營隊是對的。","source":"_posts/寒訓心得文系列-5-人.md","raw":"---\ntitle: 寒訓心得文系列-5 人\ndate: 2019-01-25 10:16:25\ncategory: 輔大\ntags:\n- 寒訓\n---\n系列最後一篇文，我想要感謝幫助這個營隊的人。\n\n首先是老師和助教，協助我關於教室和經費、題目的來源、還有比賽的獎品，這樣的後盾讓我能更專注在講課上。再來是跟我一起講課及協助一些雜事的人，尤其是講課這一方面，如果沒人幫我講課，我就沒時間能夠寫完講義了!!!\n\n最後當然要感謝來聽課的同學，已開始我預設只有15位左右，最後多了一倍，有30位，而且出席率算高的，看到這樣，就覺得辦這次營隊是對的。","slug":"寒訓心得文系列-5-人","published":1,"updated":"2019-01-25T03:04:07.379Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbi000xhwu4acrnievt","content":"<p>系列最後一篇文，我想要感謝幫助這個營隊的人。</p>\n<p>首先是老師和助教，協助我關於教室和經費、題目的來源、還有比賽的獎品，這樣的後盾讓我能更專注在講課上。再來是跟我一起講課及協助一些雜事的人，尤其是講課這一方面，如果沒人幫我講課，我就沒時間能夠寫完講義了!!!</p>\n<p>最後當然要感謝來聽課的同學，已開始我預設只有15位左右，最後多了一倍，有30位，而且出席率算高的，看到這樣，就覺得辦這次營隊是對的。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>系列最後一篇文，我想要感謝幫助這個營隊的人。</p>\n<p>首先是老師和助教，協助我關於教室和經費、題目的來源、還有比賽的獎品，這樣的後盾讓我能更專注在講課上。再來是跟我一起講課及協助一些雜事的人，尤其是講課這一方面，如果沒人幫我講課，我就沒時間能夠寫完講義了!!!</p>\n<p>最後當然要感謝來聽課的同學，已開始我預設只有15位左右，最後多了一倍，有30位，而且出席率算高的，看到這樣，就覺得辦這次營隊是對的。</p>\n"},{"title":"寒訓心得文系列-6 總結","date":"2019-01-25T03:05:05.000Z","_content":"我從這次營隊中學到了很多，有做講義時遇到新的知識，有營隊一堆大小事的體悟，這些經驗會讓我下次在辦營隊，能夠有更好的品質。\n\n至於下次辦營隊應該是明年的寒訓，原本預期是要有春訓和暑訓，但後來想想辦那麼多次，不如辦一次好好吸收，取而代之的是開比賽來複習及增加實戰感。\n\n我的期許是兩年後能夠辦一個對外開放的程式訓練營，首先這需要許多人對程式競賽及辦營隊有一定經驗，再來就是參考別的程式訓練營(台大ioicamp、清大、交大)，找出適合我們的課程內容。兩年之間有太多的變數，現階段就還是以社課為主，等時機成熟再來說吧!","source":"_posts/寒訓心得文系列-6-總結.md","raw":"---\ntitle: 寒訓心得文系列-6 總結\ndate: 2019-01-25 11:05:05\ncategory: 輔大\ntags:\n- 寒訓\n---\n我從這次營隊中學到了很多，有做講義時遇到新的知識，有營隊一堆大小事的體悟，這些經驗會讓我下次在辦營隊，能夠有更好的品質。\n\n至於下次辦營隊應該是明年的寒訓，原本預期是要有春訓和暑訓，但後來想想辦那麼多次，不如辦一次好好吸收，取而代之的是開比賽來複習及增加實戰感。\n\n我的期許是兩年後能夠辦一個對外開放的程式訓練營，首先這需要許多人對程式競賽及辦營隊有一定經驗，再來就是參考別的程式訓練營(台大ioicamp、清大、交大)，找出適合我們的課程內容。兩年之間有太多的變數，現階段就還是以社課為主，等時機成熟再來說吧!","slug":"寒訓心得文系列-6-總結","published":1,"updated":"2019-01-25T06:27:40.258Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbi000yhwu4g7za2erz","content":"<p>我從這次營隊中學到了很多，有做講義時遇到新的知識，有營隊一堆大小事的體悟，這些經驗會讓我下次在辦營隊，能夠有更好的品質。</p>\n<p>至於下次辦營隊應該是明年的寒訓，原本預期是要有春訓和暑訓，但後來想想辦那麼多次，不如辦一次好好吸收，取而代之的是開比賽來複習及增加實戰感。</p>\n<p>我的期許是兩年後能夠辦一個對外開放的程式訓練營，首先這需要許多人對程式競賽及辦營隊有一定經驗，再來就是參考別的程式訓練營(台大ioicamp、清大、交大)，找出適合我們的課程內容。兩年之間有太多的變數，現階段就還是以社課為主，等時機成熟再來說吧!</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我從這次營隊中學到了很多，有做講義時遇到新的知識，有營隊一堆大小事的體悟，這些經驗會讓我下次在辦營隊，能夠有更好的品質。</p>\n<p>至於下次辦營隊應該是明年的寒訓，原本預期是要有春訓和暑訓，但後來想想辦那麼多次，不如辦一次好好吸收，取而代之的是開比賽來複習及增加實戰感。</p>\n<p>我的期許是兩年後能夠辦一個對外開放的程式訓練營，首先這需要許多人對程式競賽及辦營隊有一定經驗，再來就是參考別的程式訓練營(台大ioicamp、清大、交大)，找出適合我們的課程內容。兩年之間有太多的變數，現階段就還是以社課為主，等時機成熟再來說吧!</p>\n"},{"title":"寒訓心得文系列","date":"2019-01-21T02:49:32.000Z","_content":"大概11月底，我突然想到可以辦個程式競賽寒訓，來增進大家的能力，不辦不知道會是如何，辦下去才知道真硬，有寫到心很累的講義，有點小忙的午餐事宜，還有儘管上學期社課有經驗，還是跟博恩早期一樣(欸!)一直吃螺絲的講課。不過好家在身旁有支持我辦寒訓的老師及助教，來聽課的同學，以及一起來講課、出題、處理事務的人，才讓這次寒訓能夠辦得如此順暢。\n\n寒訓中，我突然想到我可以把這次的經驗寫在blog，當作紀錄。我會把這次的心得文寫成一個系列，這幾天會頻繁更新。","source":"_posts/寒訓心得文系列.md","raw":"---\ntitle: 寒訓心得文系列\ndate: 2019-01-21 10:49:32\ncategory: 輔大\ntags:\n- 寒訓\n---\n大概11月底，我突然想到可以辦個程式競賽寒訓，來增進大家的能力，不辦不知道會是如何，辦下去才知道真硬，有寫到心很累的講義，有點小忙的午餐事宜，還有儘管上學期社課有經驗，還是跟博恩早期一樣(欸!)一直吃螺絲的講課。不過好家在身旁有支持我辦寒訓的老師及助教，來聽課的同學，以及一起來講課、出題、處理事務的人，才讓這次寒訓能夠辦得如此順暢。\n\n寒訓中，我突然想到我可以把這次的經驗寫在blog，當作紀錄。我會把這次的心得文寫成一個系列，這幾天會頻繁更新。","slug":"寒訓心得文系列","published":1,"updated":"2019-01-21T03:34:08.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbj000zhwu42lzjswn5","content":"<p>大概11月底，我突然想到可以辦個程式競賽寒訓，來增進大家的能力，不辦不知道會是如何，辦下去才知道真硬，有寫到心很累的講義，有點小忙的午餐事宜，還有儘管上學期社課有經驗，還是跟博恩早期一樣(欸!)一直吃螺絲的講課。不過好家在身旁有支持我辦寒訓的老師及助教，來聽課的同學，以及一起來講課、出題、處理事務的人，才讓這次寒訓能夠辦得如此順暢。</p>\n<p>寒訓中，我突然想到我可以把這次的經驗寫在blog，當作紀錄。我會把這次的心得文寫成一個系列，這幾天會頻繁更新。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>大概11月底，我突然想到可以辦個程式競賽寒訓，來增進大家的能力，不辦不知道會是如何，辦下去才知道真硬，有寫到心很累的講義，有點小忙的午餐事宜，還有儘管上學期社課有經驗，還是跟博恩早期一樣(欸!)一直吃螺絲的講課。不過好家在身旁有支持我辦寒訓的老師及助教，來聽課的同學，以及一起來講課、出題、處理事務的人，才讓這次寒訓能夠辦得如此順暢。</p>\n<p>寒訓中，我突然想到我可以把這次的經驗寫在blog，當作紀錄。我會把這次的心得文寫成一個系列，這幾天會頻繁更新。</p>\n"},{"title":"最大點/邊獨立集 最小點/邊覆蓋 最大團 相關性統整-1 一般圖","date":"2019-02-13T03:01:32.000Z","_content":"昨天有提到一些問題在二分圖上有特殊的性質，其實那些性質在一般圖只有一個是沒有，這幾天就來做統整和簡單說明怎麼找出答案。\n\n先把幾個問題列出來。\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n性質有：\n1. |最大匹配|+|最小邊覆蓋|=|V|\n2. |最大獨立集|+|最小點覆蓋|=|V|\n3. |最大圖|=|補圖的最大獨立集|\n\n以下簡略說明如何解出這些問題。\n1. 最大匹配用來縮花演算法(blossom algorithm)算出最大匹配。\n2. 求出最大匹配，也可以找出最小點覆蓋，只要將邊匹配的邊，對每個未被匹配的點取一條邊，就是最小邊覆蓋了。\n3. 利用枚舉方式求出最大團。\n4. 最大獨立集轉成補圖，然後找出最大團，即是最大獨立集。\n5. 最小點覆蓋和最大獨立集為互補，求出最大獨立集即可推出最小點覆蓋。\n\n以上就是一般圖求最大點/邊獨立集、最小點/邊覆蓋及最大團的辦法，接下來會說在二分圖和樹上的求法。\n\n參考資源：\nhttp://www.csie.ntnu.edu.tw/~u91029/Domination.html\nhttp://www.csie.ntnu.edu.tw/~u91029/Matching.html\nhttp://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html","source":"_posts/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-1.md","raw":"---\ntitle: 最大點/邊獨立集 最小點/邊覆蓋 最大團 相關性統整-1 一般圖 \ndate: 2019-02-13 11:01:32\ncategory: 隨筆\ntags:\n- graph\n---\n昨天有提到一些問題在二分圖上有特殊的性質，其實那些性質在一般圖只有一個是沒有，這幾天就來做統整和簡單說明怎麼找出答案。\n\n先把幾個問題列出來。\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n性質有：\n1. |最大匹配|+|最小邊覆蓋|=|V|\n2. |最大獨立集|+|最小點覆蓋|=|V|\n3. |最大圖|=|補圖的最大獨立集|\n\n以下簡略說明如何解出這些問題。\n1. 最大匹配用來縮花演算法(blossom algorithm)算出最大匹配。\n2. 求出最大匹配，也可以找出最小點覆蓋，只要將邊匹配的邊，對每個未被匹配的點取一條邊，就是最小邊覆蓋了。\n3. 利用枚舉方式求出最大團。\n4. 最大獨立集轉成補圖，然後找出最大團，即是最大獨立集。\n5. 最小點覆蓋和最大獨立集為互補，求出最大獨立集即可推出最小點覆蓋。\n\n以上就是一般圖求最大點/邊獨立集、最小點/邊覆蓋及最大團的辦法，接下來會說在二分圖和樹上的求法。\n\n參考資源：\nhttp://www.csie.ntnu.edu.tw/~u91029/Domination.html\nhttp://www.csie.ntnu.edu.tw/~u91029/Matching.html\nhttp://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html","slug":"最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-1","published":1,"updated":"2019-02-14T11:40:30.476Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbk0010hwu4cj7fdt6a","content":"<p>昨天有提到一些問題在二分圖上有特殊的性質，其實那些性質在一般圖只有一個是沒有，這幾天就來做統整和簡單說明怎麼找出答案。</p>\n<p>先把幾個問題列出來。</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>性質有：</p>\n<ol>\n<li>|最大匹配|+|最小邊覆蓋|=|V|</li>\n<li>|最大獨立集|+|最小點覆蓋|=|V|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>以下簡略說明如何解出這些問題。</p>\n<ol>\n<li>最大匹配用來縮花演算法(blossom algorithm)算出最大匹配。</li>\n<li>求出最大匹配，也可以找出最小點覆蓋，只要將邊匹配的邊，對每個未被匹配的點取一條邊，就是最小邊覆蓋了。</li>\n<li>利用枚舉方式求出最大團。</li>\n<li>最大獨立集轉成補圖，然後找出最大團，即是最大獨立集。</li>\n<li>最小點覆蓋和最大獨立集為互補，求出最大獨立集即可推出最小點覆蓋。</li>\n</ol>\n<p>以上就是一般圖求最大點/邊獨立集、最小點/邊覆蓋及最大團的辦法，接下來會說在二分圖和樹上的求法。</p>\n<p>參考資源：<br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/Domination.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/Domination.html</a><br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/Matching.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/Matching.html</a><br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天有提到一些問題在二分圖上有特殊的性質，其實那些性質在一般圖只有一個是沒有，這幾天就來做統整和簡單說明怎麼找出答案。</p>\n<p>先把幾個問題列出來。</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>性質有：</p>\n<ol>\n<li>|最大匹配|+|最小邊覆蓋|=|V|</li>\n<li>|最大獨立集|+|最小點覆蓋|=|V|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>以下簡略說明如何解出這些問題。</p>\n<ol>\n<li>最大匹配用來縮花演算法(blossom algorithm)算出最大匹配。</li>\n<li>求出最大匹配，也可以找出最小點覆蓋，只要將邊匹配的邊，對每個未被匹配的點取一條邊，就是最小邊覆蓋了。</li>\n<li>利用枚舉方式求出最大團。</li>\n<li>最大獨立集轉成補圖，然後找出最大團，即是最大獨立集。</li>\n<li>最小點覆蓋和最大獨立集為互補，求出最大獨立集即可推出最小點覆蓋。</li>\n</ol>\n<p>以上就是一般圖求最大點/邊獨立集、最小點/邊覆蓋及最大團的辦法，接下來會說在二分圖和樹上的求法。</p>\n<p>參考資源：<br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/Domination.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/Domination.html</a><br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/Matching.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/Matching.html</a><br><a href=\"http://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html\" target=\"_blank\" rel=\"noopener\">http://www.csie.ntnu.edu.tw/~u91029/ChordalGraph.html</a></p>\n"},{"title":"最大點/邊獨立集 最小點/邊覆蓋 最大團 相關性統整-2 二分圖","date":"2019-02-14T11:41:20.000Z","_content":"今天再來說明一次二分圖上有特殊的性質，今天主要會講如何找出這些問題的一組解。\n\n同樣先列出問題：\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n性質為：\n1. |最大匹配|=|最小點覆蓋|\n2. |最大獨立集|=|最小邊覆蓋|\n3. |最大獨立集|=|V|-|最大匹配|\n4. |最大圖|=|補圖的最大獨立集|\n\n現在說明找出如何找出在二分圖解出這些問題的方法。\n1. 最大匹配：二分圖分兩群，分成x群和y群，對x群每個點做DFS一次，如果找到新的一條邊就紀錄下來。詳細可以看 https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/ 這篇文章。\n2. 最小點覆蓋：根據選到的匹配邊，看邊所連接的的兩點如果有其中一點連接到未匹配的點，那麼該點就是的最小點覆蓋的點。\n3. 最大獨立集：剛好跟最小點覆蓋互補。\n4. 最大團：轉補圖求最大獨立集\n5. 最小邊覆蓋：最大匹配的邊，加上每個未匹配邊所連接的其中一條。\n\n以上如果有錯，歡迎到 https://www.facebook.com/allem40306codeblog/ 糾正我。","source":"_posts/最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-2-二分圖.md","raw":"---\ntitle: 最大點/邊獨立集 最小點/邊覆蓋 最大團 相關性統整-2 二分圖\ndate: 2019-02-14 19:41:20\ncategory: 隨筆\ntags:\n- graph\n---\n今天再來說明一次二分圖上有特殊的性質，今天主要會講如何找出這些問題的一組解。\n\n同樣先列出問題：\n1. 最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。\n2. 最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。\n3. 最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。\n4. 最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。\n5. 最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。\n\n性質為：\n1. |最大匹配|=|最小點覆蓋|\n2. |最大獨立集|=|最小邊覆蓋|\n3. |最大獨立集|=|V|-|最大匹配|\n4. |最大圖|=|補圖的最大獨立集|\n\n現在說明找出如何找出在二分圖解出這些問題的方法。\n1. 最大匹配：二分圖分兩群，分成x群和y群，對x群每個點做DFS一次，如果找到新的一條邊就紀錄下來。詳細可以看 https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/ 這篇文章。\n2. 最小點覆蓋：根據選到的匹配邊，看邊所連接的的兩點如果有其中一點連接到未匹配的點，那麼該點就是的最小點覆蓋的點。\n3. 最大獨立集：剛好跟最小點覆蓋互補。\n4. 最大團：轉補圖求最大獨立集\n5. 最小邊覆蓋：最大匹配的邊，加上每個未匹配邊所連接的其中一條。\n\n以上如果有錯，歡迎到 https://www.facebook.com/allem40306codeblog/ 糾正我。","slug":"最大點-邊獨立集-最小點-邊覆蓋-最大團-相關性統整-2-二分圖","published":1,"updated":"2019-02-14T12:27:16.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbl0011hwu4minijohc","content":"<p>今天再來說明一次二分圖上有特殊的性質，今天主要會講如何找出這些問題的一組解。</p>\n<p>同樣先列出問題：</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>性質為：</p>\n<ol>\n<li>|最大匹配|=|最小點覆蓋|</li>\n<li>|最大獨立集|=|最小邊覆蓋|</li>\n<li>|最大獨立集|=|V|-|最大匹配|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>現在說明找出如何找出在二分圖解出這些問題的方法。</p>\n<ol>\n<li>最大匹配：二分圖分兩群，分成x群和y群，對x群每個點做DFS一次，如果找到新的一條邊就紀錄下來。詳細可以看 <a href=\"https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/\" target=\"_blank\" rel=\"noopener\">https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/</a> 這篇文章。</li>\n<li>最小點覆蓋：根據選到的匹配邊，看邊所連接的的兩點如果有其中一點連接到未匹配的點，那麼該點就是的最小點覆蓋的點。</li>\n<li>最大獨立集：剛好跟最小點覆蓋互補。</li>\n<li>最大團：轉補圖求最大獨立集</li>\n<li>最小邊覆蓋：最大匹配的邊，加上每個未匹配邊所連接的其中一條。</li>\n</ol>\n<p>以上如果有錯，歡迎到 <a href=\"https://www.facebook.com/allem40306codeblog/\" target=\"_blank\" rel=\"noopener\">https://www.facebook.com/allem40306codeblog/</a> 糾正我。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>今天再來說明一次二分圖上有特殊的性質，今天主要會講如何找出這些問題的一組解。</p>\n<p>同樣先列出問題：</p>\n<ol>\n<li>最大獨立集：是一張圖中，最多有幾個點互不相鄰的最大集合。</li>\n<li>最大匹配：為圖上最大的邊集使得每個點至多和一條邊相鄰(又稱最大獨立邊集)。</li>\n<li>最小點覆蓋：最小的點集使得圖上每條邊都至少與點集中一個點相鄰。</li>\n<li>最小邊覆蓋：最小的邊集使得圖上每個點都至少與邊集中一條邊相鄰。</li>\n<li>最大團：一個最大的子圖使得圖中每兩點皆有一條邊連接(完全圖)。</li>\n</ol>\n<p>性質為：</p>\n<ol>\n<li>|最大匹配|=|最小點覆蓋|</li>\n<li>|最大獨立集|=|最小邊覆蓋|</li>\n<li>|最大獨立集|=|V|-|最大匹配|</li>\n<li>|最大圖|=|補圖的最大獨立集|</li>\n</ol>\n<p>現在說明找出如何找出在二分圖解出這些問題的方法。</p>\n<ol>\n<li>最大匹配：二分圖分兩群，分成x群和y群，對x群每個點做DFS一次，如果找到新的一條邊就紀錄下來。詳細可以看 <a href=\"https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/\" target=\"_blank\" rel=\"noopener\">https://allem40306.github.io/blog/2019/02/12/POJ3692-Kindergarten/</a> 這篇文章。</li>\n<li>最小點覆蓋：根據選到的匹配邊，看邊所連接的的兩點如果有其中一點連接到未匹配的點，那麼該點就是的最小點覆蓋的點。</li>\n<li>最大獨立集：剛好跟最小點覆蓋互補。</li>\n<li>最大團：轉補圖求最大獨立集</li>\n<li>最小邊覆蓋：最大匹配的邊，加上每個未匹配邊所連接的其中一條。</li>\n</ol>\n<p>以上如果有錯，歡迎到 <a href=\"https://www.facebook.com/allem40306codeblog/\" target=\"_blank\" rel=\"noopener\">https://www.facebook.com/allem40306codeblog/</a> 糾正我。</p>\n"},{"title":"最近狀況","date":"2019-07-12T08:37:19.000Z","_content":"已經三個月沒寫blog，暑假一開始就忙到現在，主要在學校的Web營隊還有準備NCPU(台南三日遊)，接下來我會寫有關這兩件事情的文章，以及下下禮拜開始的清大程式競賽訓練營，這三個系列文都會陸續出現，不過NCPU比賽心得文會先出來。\n","source":"_posts/最近狀況.md","raw":"---\ntitle: 最近狀況\ndate: 2019-07-12 16:37:19\ncategory: 公告\ntags:\n---\n已經三個月沒寫blog，暑假一開始就忙到現在，主要在學校的Web營隊還有準備NCPU(台南三日遊)，接下來我會寫有關這兩件事情的文章，以及下下禮拜開始的清大程式競賽訓練營，這三個系列文都會陸續出現，不過NCPU比賽心得文會先出來。\n","slug":"最近狀況","published":1,"updated":"2019-07-12T08:51:58.354Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbl0012hwu4lpofdwms","content":"<p>已經三個月沒寫blog，暑假一開始就忙到現在，主要在學校的Web營隊還有準備NCPU(台南三日遊)，接下來我會寫有關這兩件事情的文章，以及下下禮拜開始的清大程式競賽訓練營，這三個系列文都會陸續出現，不過NCPU比賽心得文會先出來。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>已經三個月沒寫blog，暑假一開始就忙到現在，主要在學校的Web營隊還有準備NCPU(台南三日遊)，接下來我會寫有關這兩件事情的文章，以及下下禮拜開始的清大程式競賽訓練營，這三個系列文都會陸續出現，不過NCPU比賽心得文會先出來。</p>\n"},{"<!-- layout":"layout -->","title":"隨筆1-小心自定義的比較運算子","date":"2017-12-17T13:18:37.000Z","_content":"這是發生在我打PTC的例子。\n我自己定義<運算子，結果本地編譯器給過，但PC^2都是CE。\n這是我CE的一小段程式碼\n{% codeblock lang:cpp %}\noperator <(const node &b) const {\n\t\treturn w > b.w;\n\t}\n{% endcodeblock %}\n會CE的原因很簡單:我沒加上bool。\n很多編譯器都會幫忙自動判斷為bool型態，所以不會判CE，如果不注意，就會在傳上去時吃數不清的CE。這種自定義<運算子通常出現在sort,priority_queue及map中，應該牢牢記得這一點。","source":"_posts/隨筆1-小心自定義的比較運算子.md","raw":"<!-- layout: layout -->\ntitle: 隨筆1-小心自定義的比較運算子\ndate: 2017-12-17 21:18:37\ncategory: 隨筆\ntags:\n- 隨筆\n---\n這是發生在我打PTC的例子。\n我自己定義<運算子，結果本地編譯器給過，但PC^2都是CE。\n這是我CE的一小段程式碼\n{% codeblock lang:cpp %}\noperator <(const node &b) const {\n\t\treturn w > b.w;\n\t}\n{% endcodeblock %}\n會CE的原因很簡單:我沒加上bool。\n很多編譯器都會幫忙自動判斷為bool型態，所以不會判CE，如果不注意，就會在傳上去時吃數不清的CE。這種自定義<運算子通常出現在sort,priority_queue及map中，應該牢牢記得這一點。","slug":"隨筆1-小心自定義的比較運算子","published":1,"updated":"2019-01-21T02:30:54.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxzv5sbm0013hwu4z158yd05","content":"<p>這是發生在我打PTC的例子。<br>我自己定義&lt;運算子，結果本地編譯器給過，但PC^2都是CE。<br>這是我CE的一小段程式碼<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">operator</span> &lt;(<span class=\"keyword\">const</span> node &amp;b) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> w &gt; b.w;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure><br>會CE的原因很簡單:我沒加上bool。<br>很多編譯器都會幫忙自動判斷為bool型態，所以不會判CE，如果不注意，就會在傳上去時吃數不清的CE。這種自定義&lt;運算子通常出現在sort,priority_queue及map中，應該牢牢記得這一點。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>這是發生在我打PTC的例子。<br>我自己定義&lt;運算子，結果本地編譯器給過，但PC^2都是CE。<br>這是我CE的一小段程式碼<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">operator</span> &lt;(<span class=\"keyword\">const</span> node &amp;b) <span class=\"keyword\">const</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> w &gt; b.w;</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure><br>會CE的原因很簡單:我沒加上bool。<br>很多編譯器都會幫忙自動判斷為bool型態，所以不會判CE，如果不注意，就會在傳上去時吃數不清的CE。這種自定義&lt;運算子通常出現在sort,priority_queue及map中，應該牢牢記得這一點。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjxzv5sab0000hwu4497r940w","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5sen004ehwu4kzqxcy9d"},{"post_id":"cjxzv5sah0001hwu40k12btrv","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5seo004ghwu4uacpvokw"},{"post_id":"cjxzv5saj0002hwu41roaqexd","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5sep004ihwu4u9tjuvpe"},{"post_id":"cjxzv5sak0003hwu4ywtmcrzz","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5sep004khwu4otynqfme"},{"post_id":"cjxzv5sal0004hwu4nw9173r6","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5seq004mhwu4h9dt91xg"},{"post_id":"cjxzv5sam0005hwu49al6ka6s","category_id":"cjxzv5sc10014hwu44bii9onm","_id":"cjxzv5seq004ohwu43oeo17co"},{"post_id":"cjxzv5san0006hwu4457im2vf","category_id":"cjxzv5sci001ghwu4me7tfhl7","_id":"cjxzv5ser004qhwu47fo4hfwg"},{"post_id":"cjxzv5sap0007hwu4otzheh7h","category_id":"cjxzv5sck001ihwu4sev24s6w","_id":"cjxzv5ser004shwu413fgqi6p"},{"post_id":"cjxzv5saq0008hwu47rwd5xga","category_id":"cjxzv5scl001khwu4an3rb1vx","_id":"cjxzv5ses004uhwu4em1iiiey"},{"post_id":"cjxzv5sar0009hwu4depy587m","category_id":"cjxzv5sck001ihwu4sev24s6w","_id":"cjxzv5set004whwu45kjbn7kl"},{"post_id":"cjxzv5sas000ahwu4lbixkrz1","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5set004yhwu4vj74j7rw"},{"post_id":"cjxzv5sau000bhwu44sfl4pu7","category_id":"cjxzv5scp001qhwu46au2l5uk","_id":"cjxzv5seu0050hwu48ukicd2j"},{"post_id":"cjxzv5sax000chwu4ahb70bxp","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5seu0052hwu4b7p1xq83"},{"post_id":"cjxzv5say000dhwu447rdtv26","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5seu0054hwu4hbgatvhs"},{"post_id":"cjxzv5sb0000ehwu45o7lkqv8","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sev0056hwu4ji1570zh"},{"post_id":"cjxzv5sb1000fhwu4j38jdc46","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sev0058hwu4ya9q8gz1"},{"post_id":"cjxzv5sb1000ghwu40cpccaim","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sew005ahwu4x98c6oio"},{"post_id":"cjxzv5sb3000hhwu45weens2r","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sew005chwu46irirget"},{"post_id":"cjxzv5sb4000ihwu41oni1tg2","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sex005ehwu4ap33xqvo"},{"post_id":"cjxzv5sb4000jhwu41qergd3p","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sex005ghwu433wjiy1d"},{"post_id":"cjxzv5sb8000khwu40r9nj0e2","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sey005ihwu40l108dtg"},{"post_id":"cjxzv5sb9000lhwu44h9vg65b","category_id":"cjxzv5sco001ohwu449n3mob9","_id":"cjxzv5sey005khwu47ttenfcm"},{"post_id":"cjxzv5sba000mhwu40dju22ro","category_id":"cjxzv5sd5002chwu43m9rz1x2","_id":"cjxzv5sez005mhwu49fktnv8y"},{"post_id":"cjxzv5sba000nhwu47eui1se9","category_id":"cjxzv5sd6002ehwu4s3w5n6b8","_id":"cjxzv5sez005ohwu4zuchbdub"},{"post_id":"cjxzv5sbb000ohwu4ej3mbuki","category_id":"cjxzv5sd6002ehwu4s3w5n6b8","_id":"cjxzv5sf0005qhwu43w9z4v2e"},{"post_id":"cjxzv5sbc000phwu4r6lzqf29","category_id":"cjxzv5sd6002ehwu4s3w5n6b8","_id":"cjxzv5sf0005shwu4vzto1ryn"},{"post_id":"cjxzv5sbd000qhwu4xvem7fyq","category_id":"cjxzv5sd9002khwu49fd94ill","_id":"cjxzv5sf1005uhwu4fekc0b3q"},{"post_id":"cjxzv5sbd000rhwu4r6hiv0st","category_id":"cjxzv5sd9002khwu49fd94ill","_id":"cjxzv5sf1005whwu4bw601ynb"},{"post_id":"cjxzv5sbe000shwu4pabq50tb","category_id":"cjxzv5sd5002chwu43m9rz1x2","_id":"cjxzv5sf2005yhwu4gj8eep2k"},{"post_id":"cjxzv5sbf000thwu495hgm558","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf20060hwu46a7c03h1"},{"post_id":"cjxzv5sbf000uhwu48jrho7f1","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf30062hwu4gea4j6s4"},{"post_id":"cjxzv5sbg000vhwu4ct2qd8n7","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf40064hwu4153mjoq3"},{"post_id":"cjxzv5sbh000whwu46pjpsle3","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf40066hwu4rhssck0q"},{"post_id":"cjxzv5sbi000xhwu4acrnievt","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf50068hwu49q6uheav"},{"post_id":"cjxzv5sbi000yhwu4g7za2erz","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf5006ahwu47q4zg020"},{"post_id":"cjxzv5sbj000zhwu42lzjswn5","category_id":"cjxzv5sdb002phwu4hxi24qxy","_id":"cjxzv5sf6006chwu4cb16ydf6"},{"post_id":"cjxzv5sbk0010hwu4cj7fdt6a","category_id":"cjxzv5sd5002chwu43m9rz1x2","_id":"cjxzv5sf6006ehwu4ayknqm9w"},{"post_id":"cjxzv5sbl0011hwu4minijohc","category_id":"cjxzv5sd5002chwu43m9rz1x2","_id":"cjxzv5sf7006ghwu4bl7tuwkz"},{"post_id":"cjxzv5sbl0012hwu4lpofdwms","category_id":"cjxzv5sdn0037hwu44tbec07c","_id":"cjxzv5sf7006ihwu4bmbo4pyh"},{"post_id":"cjxzv5sbm0013hwu4z158yd05","category_id":"cjxzv5sd5002chwu43m9rz1x2","_id":"cjxzv5sf8006khwu4k2xhb03z"}],"PostTag":[{"post_id":"cjxzv5sab0000hwu4497r940w","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5sen004dhwu4946rn9jt"},{"post_id":"cjxzv5sab0000hwu4497r940w","tag_id":"cjxzv5scb0017hwu4axua6b09","_id":"cjxzv5seo004fhwu4to3kzc9o"},{"post_id":"cjxzv5sab0000hwu4497r940w","tag_id":"cjxzv5scd0019hwu4lg64goz5","_id":"cjxzv5seo004hhwu4q0l03tpo"},{"post_id":"cjxzv5sab0000hwu4497r940w","tag_id":"cjxzv5scf001bhwu4bhy70f9j","_id":"cjxzv5sep004jhwu4t0el6gev"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5scg001dhwu4psed3qhz","_id":"cjxzv5sep004lhwu40d3cou60"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5seq004nhwu4rgq1l1ml"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5sck001hhwu4xv8h1o8i","_id":"cjxzv5ser004phwu4v9vyfh51"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5scl001jhwu49lwmxe7s","_id":"cjxzv5ser004rhwu4h1e1cer5"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5scm001lhwu4smmng7dn","_id":"cjxzv5ses004thwu4000dsvw4"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5sco001nhwu49i0znfc4","_id":"cjxzv5ses004vhwu4kpcjss0b"},{"post_id":"cjxzv5sah0001hwu40k12btrv","tag_id":"cjxzv5scp001phwu4qmeh3qv3","_id":"cjxzv5set004xhwu4agafw1ey"},{"post_id":"cjxzv5saj0002hwu41roaqexd","tag_id":"cjxzv5scg001dhwu4psed3qhz","_id":"cjxzv5set004zhwu446imes7j"},{"post_id":"cjxzv5saj0002hwu41roaqexd","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5seu0051hwu4f0ecler0"},{"post_id":"cjxzv5saj0002hwu41roaqexd","tag_id":"cjxzv5sck001hhwu4xv8h1o8i","_id":"cjxzv5seu0053hwu47dkw1enx"},{"post_id":"cjxzv5saj0002hwu41roaqexd","tag_id":"cjxzv5sct001xhwu4cl2wzy7i","_id":"cjxzv5sev0055hwu4vq2tr7hv"},{"post_id":"cjxzv5saj0002hwu41roaqexd","tag_id":"cjxzv5scu001zhwu4jejkltzv","_id":"cjxzv5sev0057hwu48c3tkysd"},{"post_id":"cjxzv5sak0003hwu4ywtmcrzz","tag_id":"cjxzv5scg001dhwu4psed3qhz","_id":"cjxzv5sew0059hwu4n8vr4z12"},{"post_id":"cjxzv5sak0003hwu4ywtmcrzz","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5sew005bhwu4lrfyks91"},{"post_id":"cjxzv5sak0003hwu4ywtmcrzz","tag_id":"cjxzv5scz0025hwu4ldpofjki","_id":"cjxzv5sex005dhwu4bmf5odun"},{"post_id":"cjxzv5sak0003hwu4ywtmcrzz","tag_id":"cjxzv5scf001bhwu4bhy70f9j","_id":"cjxzv5sex005fhwu4lbuzcwum"},{"post_id":"cjxzv5sal0004hwu4nw9173r6","tag_id":"cjxzv5scg001dhwu4psed3qhz","_id":"cjxzv5sey005hhwu4055rb28j"},{"post_id":"cjxzv5sal0004hwu4nw9173r6","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5sey005jhwu4n2o2e8hk"},{"post_id":"cjxzv5sam0005hwu49al6ka6s","tag_id":"cjxzv5scg001dhwu4psed3qhz","_id":"cjxzv5sey005lhwu46co9ta5h"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sd6002fhwu4604vaei5","_id":"cjxzv5sez005nhwu4x9hficg2"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sc90015hwu4kh9iaier","_id":"cjxzv5sf0005phwu4kml5n580"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sd9002jhwu4ff9cafzf","_id":"cjxzv5sf0005rhwu4eyh93m1j"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sd9002lhwu4a0j6oa8o","_id":"cjxzv5sf1005thwu4919ep1zh"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sda002nhwu4pp5jkx1f","_id":"cjxzv5sf1005vhwu4brfonucr"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sdc002qhwu40eivw6iu","_id":"cjxzv5sf2005xhwu44pbqzk2g"},{"post_id":"cjxzv5san0006hwu4457im2vf","tag_id":"cjxzv5sdd002shwu4zc2wxd17","_id":"cjxzv5sf2005zhwu4bqroe3vz"},{"post_id":"cjxzv5sap0007hwu4otzheh7h","tag_id":"cjxzv5sdf002uhwu4peanzox0","_id":"cjxzv5sf30061hwu4xwtdlh4u"},{"post_id":"cjxzv5sap0007hwu4otzheh7h","tag_id":"cjxzv5sdg002whwu4cpl1nfyi","_id":"cjxzv5sf40063hwu4tue9selk"},{"post_id":"cjxzv5saq0008hwu47rwd5xga","tag_id":"cjxzv5sdh002yhwu4q3bar6hv","_id":"cjxzv5sf40065hwu4g3lz525b"},{"post_id":"cjxzv5saq0008hwu47rwd5xga","tag_id":"cjxzv5scf001bhwu4bhy70f9j","_id":"cjxzv5sf50067hwu4ryjgpime"},{"post_id":"cjxzv5saq0008hwu47rwd5xga","tag_id":"cjxzv5sdk0032hwu47pxi534v","_id":"cjxzv5sf50069hwu4ek94sz4t"},{"post_id":"cjxzv5sar0009hwu4depy587m","tag_id":"cjxzv5sdf002uhwu4peanzox0","_id":"cjxzv5sf5006bhwu4oewfhc6c"},{"post_id":"cjxzv5sar0009hwu4depy587m","tag_id":"cjxzv5sdm0036hwu4uwxtdb5v","_id":"cjxzv5sf6006dhwu4ye8fx3kd"},{"post_id":"cjxzv5sas000ahwu4lbixkrz1","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sf6006fhwu48qydqutw"},{"post_id":"cjxzv5sau000bhwu44sfl4pu7","tag_id":"cjxzv5sdo003ahwu4lefw8m1d","_id":"cjxzv5sf7006hhwu4spidvrvk"},{"post_id":"cjxzv5sau000bhwu44sfl4pu7","tag_id":"cjxzv5sdo003bhwu4m3iplka6","_id":"cjxzv5sf7006jhwu42ooxsokl"},{"post_id":"cjxzv5sau000bhwu44sfl4pu7","tag_id":"cjxzv5scb0017hwu4axua6b09","_id":"cjxzv5sf8006lhwu47t4rs9iv"},{"post_id":"cjxzv5sau000bhwu44sfl4pu7","tag_id":"cjxzv5sdq003dhwu4hebpgnv0","_id":"cjxzv5sf8006mhwu4czsr6oc2"},{"post_id":"cjxzv5sax000chwu4ahb70bxp","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sf8006nhwu4qf7wkd11"},{"post_id":"cjxzv5say000dhwu447rdtv26","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sf9006ohwu4x0ohc6yi"},{"post_id":"cjxzv5sb0000ehwu45o7lkqv8","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sf9006phwu4yrk2acbq"},{"post_id":"cjxzv5sb1000fhwu4j38jdc46","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfa006qhwu45xveqisp"},{"post_id":"cjxzv5sb1000ghwu40cpccaim","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfa006rhwu45tv0vte2"},{"post_id":"cjxzv5sb3000hhwu45weens2r","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfa006shwu44sgi3vim"},{"post_id":"cjxzv5sb4000ihwu41oni1tg2","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfa006thwu4qvy8n219"},{"post_id":"cjxzv5sb4000jhwu41qergd3p","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfb006uhwu47733t0re"},{"post_id":"cjxzv5sb8000khwu40r9nj0e2","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfb006vhwu4l5wpdpcr"},{"post_id":"cjxzv5sb9000lhwu44h9vg65b","tag_id":"cjxzv5sdn0038hwu470q32527","_id":"cjxzv5sfc006whwu4ox8z06lm"},{"post_id":"cjxzv5sba000mhwu40dju22ro","tag_id":"cjxzv5sdy003ohwu4bdtsywdf","_id":"cjxzv5sfc006xhwu4esu0lfu2"},{"post_id":"cjxzv5sba000nhwu47eui1se9","tag_id":"cjxzv5sdy003phwu4i2bmygba","_id":"cjxzv5sfd006yhwu43u9pkwtl"},{"post_id":"cjxzv5sba000nhwu47eui1se9","tag_id":"cjxzv5sdz003qhwu4sawcz71i","_id":"cjxzv5sfd006zhwu4bc9v7j8g"},{"post_id":"cjxzv5sba000nhwu47eui1se9","tag_id":"cjxzv5scf001bhwu4bhy70f9j","_id":"cjxzv5sfd0070hwu41p61havu"},{"post_id":"cjxzv5sba000nhwu47eui1se9","tag_id":"cjxzv5sdk0032hwu47pxi534v","_id":"cjxzv5sfd0071hwu43f13okii"},{"post_id":"cjxzv5sbb000ohwu4ej3mbuki","tag_id":"cjxzv5sdy003phwu4i2bmygba","_id":"cjxzv5sfd0072hwu45bi3qlmt"},{"post_id":"cjxzv5sbb000ohwu4ej3mbuki","tag_id":"cjxzv5sdz003qhwu4sawcz71i","_id":"cjxzv5sfe0073hwu4kq395l6l"},{"post_id":"cjxzv5sbb000ohwu4ej3mbuki","tag_id":"cjxzv5se1003vhwu4f71ltk3i","_id":"cjxzv5sfe0074hwu4qp3kcy2d"},{"post_id":"cjxzv5sbc000phwu4r6lzqf29","tag_id":"cjxzv5sdy003phwu4i2bmygba","_id":"cjxzv5sfe0075hwu4lccjo2sc"},{"post_id":"cjxzv5sbc000phwu4r6lzqf29","tag_id":"cjxzv5sdg002whwu4cpl1nfyi","_id":"cjxzv5sfe0076hwu4uesy05ko"},{"post_id":"cjxzv5sbd000qhwu4xvem7fyq","tag_id":"cjxzv5sdz003qhwu4sawcz71i","_id":"cjxzv5sfe0077hwu47jm5fx1v"},{"post_id":"cjxzv5sbd000rhwu4r6hiv0st","tag_id":"cjxzv5sdz003qhwu4sawcz71i","_id":"cjxzv5sff0078hwu4idw9d7cw"},{"post_id":"cjxzv5sbd000rhwu4r6hiv0st","tag_id":"cjxzv5scl001jhwu49lwmxe7s","_id":"cjxzv5sff0079hwu4xywvltlt"},{"post_id":"cjxzv5sbd000rhwu4r6hiv0st","tag_id":"cjxzv5se40041hwu4ptei4zxf","_id":"cjxzv5sff007ahwu4gjwblp7i"},{"post_id":"cjxzv5sbe000shwu4pabq50tb","tag_id":"cjxzv5sdm0036hwu4uwxtdb5v","_id":"cjxzv5sff007bhwu4enuc0vwy"},{"post_id":"cjxzv5sbf000thwu495hgm558","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfg007chwu4hp21m3y9"},{"post_id":"cjxzv5sbf000uhwu48jrho7f1","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfg007dhwu4v48y4moe"},{"post_id":"cjxzv5sbg000vhwu4ct2qd8n7","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfg007ehwu4xlv6xt47"},{"post_id":"cjxzv5sbh000whwu46pjpsle3","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfg007fhwu49mm0vwy7"},{"post_id":"cjxzv5sbi000xhwu4acrnievt","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfh007ghwu4hoovlzme"},{"post_id":"cjxzv5sbi000yhwu4g7za2erz","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfh007hhwu4tewsoyzi"},{"post_id":"cjxzv5sbj000zhwu42lzjswn5","tag_id":"cjxzv5se50043hwu4zj629q9y","_id":"cjxzv5sfh007ihwu4oaz84xzj"},{"post_id":"cjxzv5sbk0010hwu4cj7fdt6a","tag_id":"cjxzv5sdg002whwu4cpl1nfyi","_id":"cjxzv5sfh007jhwu4q1z71rp8"},{"post_id":"cjxzv5sbl0011hwu4minijohc","tag_id":"cjxzv5sdg002whwu4cpl1nfyi","_id":"cjxzv5sfh007khwu4te18vap3"},{"post_id":"cjxzv5sbm0013hwu4z158yd05","tag_id":"cjxzv5sdy003ohwu4bdtsywdf","_id":"cjxzv5sfi007lhwu4cv9a7cor"}],"Tag":[{"name":"基礎","_id":"cjxzv5sc90015hwu4kh9iaier"},{"name":"陣列","_id":"cjxzv5scb0017hwu4axua6b09"},{"name":"dfs","_id":"cjxzv5scd0019hwu4lg64goz5"},{"name":"dp","_id":"cjxzv5scf001bhwu4bhy70f9j"},{"name":"Atcoder","_id":"cjxzv5scg001dhwu4psed3qhz"},{"name":"枚舉","_id":"cjxzv5sck001hhwu4xv8h1o8i"},{"name":"stl","_id":"cjxzv5scl001jhwu49lwmxe7s"},{"name":"map","_id":"cjxzv5scm001lhwu4smmng7dn"},{"name":"vector","_id":"cjxzv5sco001nhwu49i0znfc4"},{"name":"模擬","_id":"cjxzv5scp001phwu4qmeh3qv3"},{"name":"狀態壓縮","_id":"cjxzv5sct001xhwu4cl2wzy7i"},{"name":"離散化","_id":"cjxzv5scu001zhwu4jejkltzv"},{"name":"algorithm","_id":"cjxzv5scz0025hwu4ldpofjki"},{"name":"ITSA","_id":"cjxzv5sd6002fhwu4604vaei5"},{"name":"greedy","_id":"cjxzv5sd9002jhwu4ff9cafzf"},{"name":"字串處理","_id":"cjxzv5sd9002lhwu4a0j6oa8o"},{"name":"樹","_id":"cjxzv5sda002nhwu4pp5jkx1f"},{"name":"最短路徑","_id":"cjxzv5sdc002qhwu40eivw6iu"},{"name":"暴力法","_id":"cjxzv5sdd002shwu4zc2wxd17"},{"name":"POJ","_id":"cjxzv5sdf002uhwu4peanzox0"},{"name":"graph","_id":"cjxzv5sdg002whwu4cpl1nfyi"},{"name":"TIOJ","_id":"cjxzv5sdh002yhwu4q3bar6hv"},{"name":"背包dp","_id":"cjxzv5sdk0032hwu47pxi534v"},{"name":"bipartite graph","_id":"cjxzv5sdm0036hwu4uwxtdb5v"},{"name":"Ioicamp","_id":"cjxzv5sdn0038hwu470q32527"},{"name":"Codeforce","_id":"cjxzv5sdo003ahwu4lefw8m1d"},{"name":"Twicpc","_id":"cjxzv5sdo003bhwu4m3iplka6"},{"name":"數學","_id":"cjxzv5sdq003dhwu4hebpgnv0"},{"name":"隨筆","_id":"cjxzv5sdy003ohwu4bdtsywdf"},{"name":"Uva","_id":"cjxzv5sdy003phwu4i2bmygba"},{"name":"Zerojudge","_id":"cjxzv5sdz003qhwu4sawcz71i"},{"name":"建表","_id":"cjxzv5se1003vhwu4f71ltk3i"},{"name":"set","_id":"cjxzv5se40041hwu4ptei4zxf"},{"name":"寒訓","_id":"cjxzv5se50043hwu4zj629q9y"}]}}